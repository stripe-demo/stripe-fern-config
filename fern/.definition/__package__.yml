types:
  Account:
    docs: >-
      This is an object representing a Stripe account. You can retrieve it to
      see

      properties on the account like its current requirements or if the account
      is

      enabled to make live charges or receive payouts.


      For accounts where
      [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)

      is `application`, which includes Custom accounts, the properties below are
      always

      returned.


      For accounts where
      [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)

      is `stripe`, which includes Standard and Express accounts, some properties
      are only returned

      until you create an [Account Link](/api/account_links) or [Account
      Session](/api/account_sessions)

      to start Connect Onboarding. Learn about the [differences between
      accounts](/connect/accounts).
    properties:
      business_profile:
        docs: Business information about the account.
        type: optional<AccountBusinessProfile>
      business_type:
        docs: >-
          The business type. After you create an [Account
          Link](/api/account_links) or [Account Session](/api/account_sessions),
          this property is only returned for accounts where
          [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts.
        type: optional<AccountBusinessType>
      capabilities:
        type: optional<AccountCapabilities>
      charges_enabled:
        docs: Whether the account can process charges.
        type: optional<boolean>
      company:
        type: optional<LegalEntityCompany>
      controller:
        type: optional<AccountUnificationAccountController>
      country:
        docs: The account's country.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the account was connected. Measured in seconds since the
          Unix epoch.
        type: optional<integer>
      default_currency:
        docs: >-
          Three-letter ISO currency code representing the default currency for
          the account. This must be a currency that [Stripe supports in the
          account's country](https://stripe.com/docs/payouts).
        type: optional<string>
        validation:
          maxLength: 5000
      details_submitted:
        docs: >-
          Whether account details have been submitted. Accounts with Stripe
          Dashboard access, which includes Standard accounts, cannot receive
          payouts before this is true. Accounts where this is false should be
          directed to [an onboarding flow](/connect/onboarding) to finish
          submitting account details.
        type: optional<boolean>
      email:
        docs: >-
          An email address associated with the account. It's not used for
          authentication and Stripe doesn't market to this field without
          explicit approval from the platform.
        type: optional<string>
        validation:
          maxLength: 5000
      external_accounts:
        docs: >-
          External accounts (bank accounts and debit cards) currently attached
          to this account. External accounts are only returned for requests
          where `controller[is_controller]` is true.
        type: optional<AccountExternalAccounts>
      future_requirements:
        type: optional<AccountFutureRequirements>
      groups:
        docs: The groups associated with the account.
        type: optional<AccountGroupMembership>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      individual:
        type: optional<Person>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, string>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"account">
      payouts_enabled:
        docs: Whether the funds in this account can be paid out.
        type: optional<boolean>
      requirements:
        type: optional<AccountRequirements>
      settings:
        docs: Options for customizing how the account functions within Stripe.
        type: optional<AccountSettings>
      tos_acceptance:
        type: optional<AccountTosAcceptance>
      type:
        docs: >-
          The Stripe account type. Can be `standard`, `express`, `custom`, or
          `none`.
        type: optional<AccountType>
    source:
      openapi: ../openapi.yaml
  AccountAnnualRevenue:
    docs: ''
    properties:
      amount:
        docs: >-
          A non-negative integer representing the amount in the [smallest
          currency unit](/currencies#zero-decimal).
        type: optional<integer>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: optional<string>
      fiscal_year_end:
        docs: >-
          The close-out date of the preceding fiscal year in ISO 8601 format.
          E.g. 2023-12-31 for the 31st of December, 2023.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountApplicationAuthorized:
    docs: >-
      Occurs whenever a user authorizes an application. Sent to the related
      application only.
    properties:
      object:
        type: Application
    source:
      openapi: ../openapi.yaml
  AccountApplicationDeauthorized:
    docs: >-
      Occurs whenever a user deauthorizes an application. Sent to the related
      application only.
    properties:
      object:
        type: Application
    source:
      openapi: ../openapi.yaml
  AccountBacsDebitPaymentsSettings:
    docs: ''
    properties:
      display_name:
        docs: >-
          The Bacs Direct Debit display name for this account. For payments made
          with Bacs Direct Debit, this name appears on the mandate as the
          statement descriptor. Mobile banking apps display it as the name of
          the business. To use custom branding, set the Bacs Direct Debit
          Display Name during or right after creation. Custom branding incurs an
          additional monthly fee for the platform. The fee appears 5 business
          days after requesting Bacs. If you don't set the display name before
          requesting Bacs capability, it's automatically set as "Stripe" and the
          account is onboarded to Stripe branding, which is free.
        type: optional<string>
        validation:
          maxLength: 5000
      service_user_number:
        docs: >-
          The Bacs Direct Debit Service user number for this account. For
          payments made with Bacs Direct Debit, this number is a unique
          identifier of the account with our banking partners.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountBrandingSettings:
    docs: ''
    properties:
      icon:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An
          icon for the account. Must be square and at least 128px x 128px.
        type: optional<AccountBrandingSettingsIcon>
      logo:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A
          logo for the account that will be used in Checkout instead of the icon
          and without the account's name next to it if provided. Must be at
          least 128px x 128px.
        type: optional<AccountBrandingSettingsLogo>
      primary_color:
        docs: >-
          A CSS hex color value representing the primary branding color for this
          account
        type: optional<string>
        validation:
          maxLength: 5000
      secondary_color:
        docs: >-
          A CSS hex color value representing the secondary branding color for
          this account
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountBrandingSettingsIcon:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) An
      icon for the account. Must be square and at least 128px x 128px.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  AccountBrandingSettingsLogo:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A logo
      for the account that will be used in Checkout instead of the icon and
      without the account's name next to it if provided. Must be at least 128px
      x 128px.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  AccountBusinessProfile:
    docs: ''
    properties:
      annual_revenue:
        docs: The applicant's gross annual revenue for its preceding fiscal year.
        type: optional<AccountAnnualRevenue>
      estimated_worker_count:
        docs: >-
          An estimated upper bound of employees, contractors, vendors, etc.
          currently working for the business.
        type: optional<integer>
      mcc:
        docs: >-
          [The merchant category code for the account](/connect/setting-mcc).
          MCCs are used to classify businesses based on the goods or services
          they provide.
        type: optional<string>
        validation:
          maxLength: 5000
      monthly_estimated_revenue:
        type: optional<AccountMonthlyEstimatedRevenue>
      name:
        docs: The customer-facing business name.
        type: optional<string>
        validation:
          maxLength: 5000
      product_description:
        docs: >-
          Internal-only description of the product sold or service provided by
          the business. It's used by Stripe for risk and underwriting purposes.
        type: optional<string>
        validation:
          maxLength: 40000
      support_address:
        docs: A publicly available mailing address for sending support issues to.
        type: optional<Address>
      support_email:
        docs: A publicly available email address for sending support issues to.
        type: optional<string>
        validation:
          maxLength: 5000
      support_phone:
        docs: A publicly available phone number to call with support issues.
        type: optional<string>
        validation:
          maxLength: 5000
      support_url:
        docs: A publicly available website for handling support issues.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: The business's publicly available website.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountBusinessType:
    docs: >-
      The business type. After you create an [Account Link](/api/account_links)
      or [Account Session](/api/account_sessions), this property is only
      returned for accounts where
      [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
      is `application`, which includes Custom accounts.
    enum:
      - company
      - government_entity
      - individual
      - non_profit
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilities:
    docs: ''
    properties:
      acss_debit_payments:
        docs: >-
          The status of the Canadian pre-authorized debits payments capability
          of the account, or whether the account can directly process Canadian
          pre-authorized debits charges.
        type: optional<AccountCapabilitiesAcssDebitPayments>
      affirm_payments:
        docs: >-
          The status of the Affirm capability of the account, or whether the
          account can directly process Affirm charges.
        type: optional<AccountCapabilitiesAffirmPayments>
      afterpay_clearpay_payments:
        docs: >-
          The status of the Afterpay Clearpay capability of the account, or
          whether the account can directly process Afterpay Clearpay charges.
        type: optional<AccountCapabilitiesAfterpayClearpayPayments>
      alma_payments:
        docs: >-
          The status of the Alma capability of the account, or whether the
          account can directly process Alma payments.
        type: optional<AccountCapabilitiesAlmaPayments>
      amazon_pay_payments:
        docs: >-
          The status of the AmazonPay capability of the account, or whether the
          account can directly process AmazonPay payments.
        type: optional<AccountCapabilitiesAmazonPayPayments>
      au_becs_debit_payments:
        docs: >-
          The status of the BECS Direct Debit (AU) payments capability of the
          account, or whether the account can directly process BECS Direct Debit
          (AU) charges.
        type: optional<AccountCapabilitiesAuBecsDebitPayments>
      bacs_debit_payments:
        docs: >-
          The status of the Bacs Direct Debits payments capability of the
          account, or whether the account can directly process Bacs Direct
          Debits charges.
        type: optional<AccountCapabilitiesBacsDebitPayments>
      bancontact_payments:
        docs: >-
          The status of the Bancontact payments capability of the account, or
          whether the account can directly process Bancontact charges.
        type: optional<AccountCapabilitiesBancontactPayments>
      bank_transfer_payments:
        docs: >-
          The status of the customer_balance payments capability of the account,
          or whether the account can directly process customer_balance charges.
        type: optional<AccountCapabilitiesBankTransferPayments>
      blik_payments:
        docs: >-
          The status of the blik payments capability of the account, or whether
          the account can directly process blik charges.
        type: optional<AccountCapabilitiesBlikPayments>
      boleto_payments:
        docs: >-
          The status of the boleto payments capability of the account, or
          whether the account can directly process boleto charges.
        type: optional<AccountCapabilitiesBoletoPayments>
      card_issuing:
        docs: >-
          The status of the card issuing capability of the account, or whether
          you can use Issuing to distribute funds on cards
        type: optional<AccountCapabilitiesCardIssuing>
      card_payments:
        docs: >-
          The status of the card payments capability of the account, or whether
          the account can directly process credit and debit card charges.
        type: optional<AccountCapabilitiesCardPayments>
      cartes_bancaires_payments:
        docs: >-
          The status of the Cartes Bancaires payments capability of the account,
          or whether the account can directly process Cartes Bancaires card
          charges in EUR currency.
        type: optional<AccountCapabilitiesCartesBancairesPayments>
      cashapp_payments:
        docs: >-
          The status of the Cash App Pay capability of the account, or whether
          the account can directly process Cash App Pay payments.
        type: optional<AccountCapabilitiesCashappPayments>
      eps_payments:
        docs: >-
          The status of the EPS payments capability of the account, or whether
          the account can directly process EPS charges.
        type: optional<AccountCapabilitiesEpsPayments>
      fpx_payments:
        docs: >-
          The status of the FPX payments capability of the account, or whether
          the account can directly process FPX charges.
        type: optional<AccountCapabilitiesFpxPayments>
      gb_bank_transfer_payments:
        docs: >-
          The status of the GB customer_balance payments (GBP currency)
          capability of the account, or whether the account can directly process
          GB customer_balance charges.
        type: optional<AccountCapabilitiesGbBankTransferPayments>
      giropay_payments:
        docs: >-
          The status of the giropay payments capability of the account, or
          whether the account can directly process giropay charges.
        type: optional<AccountCapabilitiesGiropayPayments>
      grabpay_payments:
        docs: >-
          The status of the GrabPay payments capability of the account, or
          whether the account can directly process GrabPay charges.
        type: optional<AccountCapabilitiesGrabpayPayments>
      ideal_payments:
        docs: >-
          The status of the iDEAL payments capability of the account, or whether
          the account can directly process iDEAL charges.
        type: optional<AccountCapabilitiesIdealPayments>
      india_international_payments:
        docs: >-
          The status of the india_international_payments capability of the
          account, or whether the account can process international charges (non
          INR) in India.
        type: optional<AccountCapabilitiesIndiaInternationalPayments>
      jcb_payments:
        docs: >-
          The status of the JCB payments capability of the account, or whether
          the account (Japan only) can directly process JCB credit card charges
          in JPY currency.
        type: optional<AccountCapabilitiesJcbPayments>
      jp_bank_transfer_payments:
        docs: >-
          The status of the Japanese customer_balance payments (JPY currency)
          capability of the account, or whether the account can directly process
          Japanese customer_balance charges.
        type: optional<AccountCapabilitiesJpBankTransferPayments>
      kakao_pay_payments:
        docs: >-
          The status of the KakaoPay capability of the account, or whether the
          account can directly process KakaoPay payments.
        type: optional<AccountCapabilitiesKakaoPayPayments>
      klarna_payments:
        docs: >-
          The status of the Klarna payments capability of the account, or
          whether the account can directly process Klarna charges.
        type: optional<AccountCapabilitiesKlarnaPayments>
      konbini_payments:
        docs: >-
          The status of the konbini payments capability of the account, or
          whether the account can directly process konbini charges.
        type: optional<AccountCapabilitiesKonbiniPayments>
      kr_card_payments:
        docs: >-
          The status of the KrCard capability of the account, or whether the
          account can directly process KrCard payments.
        type: optional<AccountCapabilitiesKrCardPayments>
      legacy_payments:
        docs: The status of the legacy payments capability of the account.
        type: optional<AccountCapabilitiesLegacyPayments>
      link_payments:
        docs: >-
          The status of the link_payments capability of the account, or whether
          the account can directly process Link charges.
        type: optional<AccountCapabilitiesLinkPayments>
      mobilepay_payments:
        docs: >-
          The status of the MobilePay capability of the account, or whether the
          account can directly process MobilePay charges.
        type: optional<AccountCapabilitiesMobilepayPayments>
      multibanco_payments:
        docs: >-
          The status of the Multibanco payments capability of the account, or
          whether the account can directly process Multibanco charges.
        type: optional<AccountCapabilitiesMultibancoPayments>
      mx_bank_transfer_payments:
        docs: >-
          The status of the Mexican customer_balance payments (MXN currency)
          capability of the account, or whether the account can directly process
          Mexican customer_balance charges.
        type: optional<AccountCapabilitiesMxBankTransferPayments>
      naver_pay_payments:
        docs: >-
          The status of the NaverPay capability of the account, or whether the
          account can directly process NaverPay payments.
        type: optional<AccountCapabilitiesNaverPayPayments>
      oxxo_payments:
        docs: >-
          The status of the OXXO payments capability of the account, or whether
          the account can directly process OXXO charges.
        type: optional<AccountCapabilitiesOxxoPayments>
      p24_payments:
        docs: >-
          The status of the P24 payments capability of the account, or whether
          the account can directly process P24 charges.
        type: optional<AccountCapabilitiesP24Payments>
      pay_by_bank_payments:
        docs: >-
          The status of the pay_by_bank payments capability of the account, or
          whether the account can directly process pay_by_bank charges.
        type: optional<AccountCapabilitiesPayByBankPayments>
      payco_payments:
        docs: >-
          The status of the Payco capability of the account, or whether the
          account can directly process Payco payments.
        type: optional<AccountCapabilitiesPaycoPayments>
      paynow_payments:
        docs: >-
          The status of the paynow payments capability of the account, or
          whether the account can directly process paynow charges.
        type: optional<AccountCapabilitiesPaynowPayments>
      promptpay_payments:
        docs: >-
          The status of the promptpay payments capability of the account, or
          whether the account can directly process promptpay charges.
        type: optional<AccountCapabilitiesPromptpayPayments>
      revolut_pay_payments:
        docs: >-
          The status of the RevolutPay capability of the account, or whether the
          account can directly process RevolutPay payments.
        type: optional<AccountCapabilitiesRevolutPayPayments>
      samsung_pay_payments:
        docs: >-
          The status of the SamsungPay capability of the account, or whether the
          account can directly process SamsungPay payments.
        type: optional<AccountCapabilitiesSamsungPayPayments>
      sepa_bank_transfer_payments:
        docs: >-
          The status of the SEPA customer_balance payments (EUR currency)
          capability of the account, or whether the account can directly process
          SEPA customer_balance charges.
        type: optional<AccountCapabilitiesSepaBankTransferPayments>
      sepa_debit_payments:
        docs: >-
          The status of the SEPA Direct Debits payments capability of the
          account, or whether the account can directly process SEPA Direct
          Debits charges.
        type: optional<AccountCapabilitiesSepaDebitPayments>
      sofort_payments:
        docs: >-
          The status of the Sofort payments capability of the account, or
          whether the account can directly process Sofort charges.
        type: optional<AccountCapabilitiesSofortPayments>
      swish_payments:
        docs: >-
          The status of the Swish capability of the account, or whether the
          account can directly process Swish payments.
        type: optional<AccountCapabilitiesSwishPayments>
      tax_reporting_us_1099_k:
        docs: The status of the tax reporting 1099-K (US) capability of the account.
        type: optional<AccountCapabilitiesTaxReportingUs1099K>
      tax_reporting_us_1099_misc:
        docs: >-
          The status of the tax reporting 1099-MISC (US) capability of the
          account.
        type: optional<AccountCapabilitiesTaxReportingUs1099Misc>
      transfers:
        docs: >-
          The status of the transfers capability of the account, or whether your
          platform can transfer funds to the account.
        type: optional<AccountCapabilitiesTransfers>
      treasury:
        docs: >-
          The status of the banking capability, or whether the account can have
          bank accounts.
        type: optional<AccountCapabilitiesTreasury>
      twint_payments:
        docs: >-
          The status of the TWINT capability of the account, or whether the
          account can directly process TWINT charges.
        type: optional<AccountCapabilitiesTwintPayments>
      us_bank_account_ach_payments:
        docs: >-
          The status of the US bank account ACH payments capability of the
          account, or whether the account can directly process US bank account
          charges.
        type: optional<AccountCapabilitiesUsBankAccountAchPayments>
      us_bank_transfer_payments:
        docs: >-
          The status of the US customer_balance payments (USD currency)
          capability of the account, or whether the account can directly process
          US customer_balance charges.
        type: optional<AccountCapabilitiesUsBankTransferPayments>
      zip_payments:
        docs: >-
          The status of the Zip capability of the account, or whether the
          account can directly process Zip charges.
        type: optional<AccountCapabilitiesZipPayments>
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAcssDebitPayments:
    docs: >-
      The status of the Canadian pre-authorized debits payments capability of
      the account, or whether the account can directly process Canadian
      pre-authorized debits charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAffirmPayments:
    docs: >-
      The status of the Affirm capability of the account, or whether the account
      can directly process Affirm charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAfterpayClearpayPayments:
    docs: >-
      The status of the Afterpay Clearpay capability of the account, or whether
      the account can directly process Afterpay Clearpay charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAlmaPayments:
    docs: >-
      The status of the Alma capability of the account, or whether the account
      can directly process Alma payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAmazonPayPayments:
    docs: >-
      The status of the AmazonPay capability of the account, or whether the
      account can directly process AmazonPay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesAuBecsDebitPayments:
    docs: >-
      The status of the BECS Direct Debit (AU) payments capability of the
      account, or whether the account can directly process BECS Direct Debit
      (AU) charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesBacsDebitPayments:
    docs: >-
      The status of the Bacs Direct Debits payments capability of the account,
      or whether the account can directly process Bacs Direct Debits charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesBancontactPayments:
    docs: >-
      The status of the Bancontact payments capability of the account, or
      whether the account can directly process Bancontact charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesBankTransferPayments:
    docs: >-
      The status of the customer_balance payments capability of the account, or
      whether the account can directly process customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesBlikPayments:
    docs: >-
      The status of the blik payments capability of the account, or whether the
      account can directly process blik charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesBoletoPayments:
    docs: >-
      The status of the boleto payments capability of the account, or whether
      the account can directly process boleto charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesCardIssuing:
    docs: >-
      The status of the card issuing capability of the account, or whether you
      can use Issuing to distribute funds on cards
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesCardPayments:
    docs: >-
      The status of the card payments capability of the account, or whether the
      account can directly process credit and debit card charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesCartesBancairesPayments:
    docs: >-
      The status of the Cartes Bancaires payments capability of the account, or
      whether the account can directly process Cartes Bancaires card charges in
      EUR currency.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesCashappPayments:
    docs: >-
      The status of the Cash App Pay capability of the account, or whether the
      account can directly process Cash App Pay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesEpsPayments:
    docs: >-
      The status of the EPS payments capability of the account, or whether the
      account can directly process EPS charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesFpxPayments:
    docs: >-
      The status of the FPX payments capability of the account, or whether the
      account can directly process FPX charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesGbBankTransferPayments:
    docs: >-
      The status of the GB customer_balance payments (GBP currency) capability
      of the account, or whether the account can directly process GB
      customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesGiropayPayments:
    docs: >-
      The status of the giropay payments capability of the account, or whether
      the account can directly process giropay charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesGrabpayPayments:
    docs: >-
      The status of the GrabPay payments capability of the account, or whether
      the account can directly process GrabPay charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesIdealPayments:
    docs: >-
      The status of the iDEAL payments capability of the account, or whether the
      account can directly process iDEAL charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesIndiaInternationalPayments:
    docs: >-
      The status of the india_international_payments capability of the account,
      or whether the account can process international charges (non INR) in
      India.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesJcbPayments:
    docs: >-
      The status of the JCB payments capability of the account, or whether the
      account (Japan only) can directly process JCB credit card charges in JPY
      currency.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesJpBankTransferPayments:
    docs: >-
      The status of the Japanese customer_balance payments (JPY currency)
      capability of the account, or whether the account can directly process
      Japanese customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesKakaoPayPayments:
    docs: >-
      The status of the KakaoPay capability of the account, or whether the
      account can directly process KakaoPay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesKlarnaPayments:
    docs: >-
      The status of the Klarna payments capability of the account, or whether
      the account can directly process Klarna charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesKonbiniPayments:
    docs: >-
      The status of the konbini payments capability of the account, or whether
      the account can directly process konbini charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesKrCardPayments:
    docs: >-
      The status of the KrCard capability of the account, or whether the account
      can directly process KrCard payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesLegacyPayments:
    docs: The status of the legacy payments capability of the account.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesLinkPayments:
    docs: >-
      The status of the link_payments capability of the account, or whether the
      account can directly process Link charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesMobilepayPayments:
    docs: >-
      The status of the MobilePay capability of the account, or whether the
      account can directly process MobilePay charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesMultibancoPayments:
    docs: >-
      The status of the Multibanco payments capability of the account, or
      whether the account can directly process Multibanco charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesMxBankTransferPayments:
    docs: >-
      The status of the Mexican customer_balance payments (MXN currency)
      capability of the account, or whether the account can directly process
      Mexican customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesNaverPayPayments:
    docs: >-
      The status of the NaverPay capability of the account, or whether the
      account can directly process NaverPay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesOxxoPayments:
    docs: >-
      The status of the OXXO payments capability of the account, or whether the
      account can directly process OXXO charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesP24Payments:
    docs: >-
      The status of the P24 payments capability of the account, or whether the
      account can directly process P24 charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesPayByBankPayments:
    docs: >-
      The status of the pay_by_bank payments capability of the account, or
      whether the account can directly process pay_by_bank charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesPaycoPayments:
    docs: >-
      The status of the Payco capability of the account, or whether the account
      can directly process Payco payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesPaynowPayments:
    docs: >-
      The status of the paynow payments capability of the account, or whether
      the account can directly process paynow charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesPromptpayPayments:
    docs: >-
      The status of the promptpay payments capability of the account, or whether
      the account can directly process promptpay charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesRevolutPayPayments:
    docs: >-
      The status of the RevolutPay capability of the account, or whether the
      account can directly process RevolutPay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesSamsungPayPayments:
    docs: >-
      The status of the SamsungPay capability of the account, or whether the
      account can directly process SamsungPay payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesSepaBankTransferPayments:
    docs: >-
      The status of the SEPA customer_balance payments (EUR currency) capability
      of the account, or whether the account can directly process SEPA
      customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesSepaDebitPayments:
    docs: >-
      The status of the SEPA Direct Debits payments capability of the account,
      or whether the account can directly process SEPA Direct Debits charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesSofortPayments:
    docs: >-
      The status of the Sofort payments capability of the account, or whether
      the account can directly process Sofort charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesSwishPayments:
    docs: >-
      The status of the Swish capability of the account, or whether the account
      can directly process Swish payments.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesTaxReportingUs1099K:
    docs: The status of the tax reporting 1099-K (US) capability of the account.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesTaxReportingUs1099Misc:
    docs: The status of the tax reporting 1099-MISC (US) capability of the account.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesTransfers:
    docs: >-
      The status of the transfers capability of the account, or whether your
      platform can transfer funds to the account.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesTreasury:
    docs: >-
      The status of the banking capability, or whether the account can have bank
      accounts.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesTwintPayments:
    docs: >-
      The status of the TWINT capability of the account, or whether the account
      can directly process TWINT charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesUsBankAccountAchPayments:
    docs: >-
      The status of the US bank account ACH payments capability of the account,
      or whether the account can directly process US bank account charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesUsBankTransferPayments:
    docs: >-
      The status of the US customer_balance payments (USD currency) capability
      of the account, or whether the account can directly process US
      customer_balance charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilitiesZipPayments:
    docs: >-
      The status of the Zip capability of the account, or whether the account
      can directly process Zip charges.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilityFutureRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      current_deadline:
        docs: >-
          Date on which `future_requirements` becomes the main `requirements`
          hash and `future_requirements` becomes empty. After the transition,
          `currently_due` requirements may immediately become `past_due`, but
          the account may also be given a grace period depending on the
          capability's enablement state prior to transitioning.
        type: optional<integer>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the capability enabled. If
          not collected by `future_requirements[current_deadline]`, these fields
          will transition to the main `requirements` hash.
        type: list<string>
      disabled_reason:
        docs: >-
          This is typed as an enum for consistency with
          `requirements.disabled_reason`, but it safe to assume
          `future_requirements.disabled_reason` is null because fields in
          `future_requirements` will never disable the account.
        type: optional<AccountCapabilityFutureRequirementsDisabledReason>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: list<AccountRequirementsError>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well.
        type: list<string>
      past_due:
        docs: >-
          Fields that weren't collected by `requirements.current_deadline`.
          These fields need to be collected to enable the capability on the
          account. New fields will never appear here;
          `future_requirements.past_due` will always be a subset of
          `requirements.past_due`.
        type: list<string>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due` or `currently_due`. Fields might appear in
          `eventually_due` or `currently_due` and in `pending_verification` if
          verification fails but another verification is still pending.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  AccountCapabilityFutureRequirementsDisabledReason:
    docs: >-
      This is typed as an enum for consistency with
      `requirements.disabled_reason`, but it safe to assume
      `future_requirements.disabled_reason` is null because fields in
      `future_requirements` will never disable the account.
    enum:
      - other
      - name: PausedInactivity
        value: paused.inactivity
      - name: PendingOnboarding
        value: pending.onboarding
      - name: PendingReview
        value: pending.review
      - platform_disabled
      - platform_paused
      - name: RejectedInactivity
        value: rejected.inactivity
      - name: RejectedOther
        value: rejected.other
      - name: RejectedUnsupportedBusiness
        value: rejected.unsupported_business
      - name: RequirementsFieldsNeeded
        value: requirements.fields_needed
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCapabilityRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      current_deadline:
        docs: >-
          Date by which the fields in `currently_due` must be collected to keep
          the capability enabled for the account. These fields may disable the
          capability sooner if the next threshold is reached before they are
          collected.
        type: optional<integer>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the capability enabled. If
          not collected by `current_deadline`, these fields appear in `past_due`
          as well, and the capability is disabled.
        type: list<string>
      disabled_reason:
        docs: >-
          Description of why the capability is disabled. [Learn more about
          handling verification
          issues](https://stripe.com/docs/connect/handling-api-verification).
        type: optional<AccountCapabilityRequirementsDisabledReason>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: list<AccountRequirementsError>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well, and
          `current_deadline` becomes set.
        type: list<string>
      past_due:
        docs: >-
          Fields that weren't collected by `current_deadline`. These fields need
          to be collected to enable the capability on the account.
        type: list<string>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due`, `currently_due`, or `past_due`. Fields might appear
          in `eventually_due`, `currently_due`, or `past_due` and in
          `pending_verification` if verification fails but another verification
          is still pending.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  AccountCapabilityRequirementsDisabledReason:
    docs: >-
      Description of why the capability is disabled. [Learn more about handling
      verification
      issues](https://stripe.com/docs/connect/handling-api-verification).
    enum:
      - other
      - name: PausedInactivity
        value: paused.inactivity
      - name: PendingOnboarding
        value: pending.onboarding
      - name: PendingReview
        value: pending.review
      - platform_disabled
      - platform_paused
      - name: RejectedInactivity
        value: rejected.inactivity
      - name: RejectedOther
        value: rejected.other
      - name: RejectedUnsupportedBusiness
        value: rejected.unsupported_business
      - name: RequirementsFieldsNeeded
        value: requirements.fields_needed
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountCardIssuingSettings:
    docs: ''
    properties:
      tos_acceptance:
        type: optional<CardIssuingAccountTermsOfService>
    source:
      openapi: ../openapi.yaml
  AccountCardPaymentsSettings:
    docs: ''
    properties:
      decline_on:
        type: optional<AccountDeclineChargeOn>
      statement_descriptor_prefix:
        docs: >-
          The default text that appears on credit card statements when a charge
          is made. This field prefixes any dynamic `statement_descriptor`
          specified on the charge. `statement_descriptor_prefix` is useful for
          maximizing descriptor space for the dynamic portion.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_prefix_kana:
        docs: >-
          The Kana variation of the default text that appears on credit card
          statements when a charge is made (Japan only). This field prefixes any
          dynamic `statement_descriptor_suffix_kana` specified on the charge.
          `statement_descriptor_prefix_kana` is useful for maximizing descriptor
          space for the dynamic portion.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_prefix_kanji:
        docs: >-
          The Kanji variation of the default text that appears on credit card
          statements when a charge is made (Japan only). This field prefixes any
          dynamic `statement_descriptor_suffix_kanji` specified on the charge.
          `statement_descriptor_prefix_kanji` is useful for maximizing
          descriptor space for the dynamic portion.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountDashboardSettings:
    docs: ''
    properties:
      display_name:
        docs: >-
          The display name for this account. This is used on the Stripe
          Dashboard to differentiate between accounts.
        type: optional<string>
        validation:
          maxLength: 5000
      timezone:
        docs: >-
          The timezone used in the Stripe Dashboard for this account. A list of
          possible time zone values is maintained at the [IANA Time Zone
          Database](http://www.iana.org/time-zones).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountDeclineChargeOn:
    docs: ''
    properties:
      avs_failure:
        docs: >-
          Whether Stripe automatically declines charges with an incorrect ZIP or
          postal code. This setting only applies when a ZIP or postal code is
          provided and they fail bank verification.
        type: boolean
      cvc_failure:
        docs: >-
          Whether Stripe automatically declines charges with an incorrect CVC.
          This setting only applies when a CVC is provided and it fails bank
          verification.
        type: boolean
    source:
      openapi: ../openapi.yaml
  AccountExternalAccountCreated:
    docs: Occurs whenever an external account is created.
    properties:
      object: AccountExternalAccountCreatedObject
    source:
      openapi: ../openapi.yaml
  AccountExternalAccountCreatedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  AccountExternalAccountDeleted:
    docs: Occurs whenever an external account is deleted.
    properties:
      object: AccountExternalAccountDeletedObject
    source:
      openapi: ../openapi.yaml
  AccountExternalAccountDeletedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  AccountExternalAccounts:
    docs: >-
      External accounts (bank accounts and debit cards) currently attached to
      this account. External accounts are only returned for requests where
      `controller[is_controller]` is true.
    inline: true
    properties:
      data:
        docs: >-
          The list contains all external accounts that have been attached to the
          Stripe account. These may be bank accounts or cards.
        type: list<ExternalAccount>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountExternalAccountUpdated:
    docs: Occurs whenever an external account is updated.
    properties:
      object: AccountExternalAccountUpdatedObject
    source:
      openapi: ../openapi.yaml
  AccountExternalAccountUpdatedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  AccountFutureRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      current_deadline:
        docs: >-
          Date on which `future_requirements` becomes the main `requirements`
          hash and `future_requirements` becomes empty. After the transition,
          `currently_due` requirements may immediately become `past_due`, but
          the account may also be given a grace period depending on its
          enablement state prior to transitioning.
        type: optional<integer>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the account enabled. If not
          collected by `future_requirements[current_deadline]`, these fields
          will transition to the main `requirements` hash.
        type: optional<list<string>>
      disabled_reason:
        docs: >-
          This is typed as an enum for consistency with
          `requirements.disabled_reason`.
        type: optional<AccountFutureRequirementsDisabledReason>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: optional<list<AccountRequirementsError>>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well.
        type: optional<list<string>>
      past_due:
        docs: >-
          Fields that weren't collected by `requirements.current_deadline`.
          These fields need to be collected to enable the capability on the
          account. New fields will never appear here;
          `future_requirements.past_due` will always be a subset of
          `requirements.past_due`.
        type: optional<list<string>>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due` or `currently_due`. Fields might appear in
          `eventually_due` or `currently_due` and in `pending_verification` if
          verification fails but another verification is still pending.
        type: optional<list<string>>
    source:
      openapi: ../openapi.yaml
  AccountFutureRequirementsDisabledReason:
    docs: >-
      This is typed as an enum for consistency with
      `requirements.disabled_reason`.
    enum:
      - name: ActionRequiredRequestedCapabilities
        value: action_required.requested_capabilities
      - listed
      - other
      - platform_paused
      - name: RejectedFraud
        value: rejected.fraud
      - name: RejectedIncompleteVerification
        value: rejected.incomplete_verification
      - name: RejectedListed
        value: rejected.listed
      - name: RejectedOther
        value: rejected.other
      - name: RejectedPlatformFraud
        value: rejected.platform_fraud
      - name: RejectedPlatformOther
        value: rejected.platform_other
      - name: RejectedPlatformTermsOfService
        value: rejected.platform_terms_of_service
      - name: RejectedTermsOfService
        value: rejected.terms_of_service
      - name: RequirementsPastDue
        value: requirements.past_due
      - name: RequirementsPendingVerification
        value: requirements.pending_verification
      - under_review
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountGroupMembership:
    docs: ''
    properties:
      payments_pricing:
        docs: >-
          The group the account is in to determine their payments pricing, and
          null if the account is on customized pricing. [See the Platform
          pricing tool
          documentation](https://stripe.com/docs/connect/platform-pricing-tools)
          for details.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountInvoicesSettings:
    docs: ''
    properties:
      default_account_tax_ids:
        docs: >-
          The list of default Account Tax IDs to automatically include on
          invoices. Account Tax IDs get added when an invoice is finalized.
        type: optional<list<AccountInvoicesSettingsDefaultAccountTaxIdsItem>>
    source:
      openapi: ../openapi.yaml
  AccountInvoicesSettingsDefaultAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
  AccountLink:
    docs: >-
      Account Links are the means by which a Connect platform grants a connected
      account permission to access

      Stripe-hosted applications, such as Connect Onboarding.


      Related guide: [Connect
      Onboarding](https://stripe.com/docs/connect/custom/hosted-onboarding)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expires_at:
        docs: The timestamp at which this account link will expire.
        type: integer
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"account_link">
      url:
        docs: The URL for the account link.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountMonthlyEstimatedRevenue:
    docs: ''
    properties:
      amount:
        docs: >-
          A non-negative integer representing how much to charge in the
          [smallest currency unit](/currencies#zero-decimal).
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
    source:
      openapi: ../openapi.yaml
  AccountPaymentsSettings:
    docs: ''
    properties:
      statement_descriptor:
        docs: >-
          The default text that appears on credit card statements when a charge
          is made. This field prefixes any dynamic `statement_descriptor`
          specified on the charge.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_kana:
        docs: >-
          The Kana variation of `statement_descriptor` used for charges in
          Japan. Japanese statement descriptors have [special
          requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_kanji:
        docs: >-
          The Kanji variation of `statement_descriptor` used for charges in
          Japan. Japanese statement descriptors have [special
          requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_prefix_kana:
        docs: >-
          The Kana variation of `statement_descriptor_prefix` used for card
          charges in Japan. Japanese statement descriptors have [special
          requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_prefix_kanji:
        docs: >-
          The Kanji variation of `statement_descriptor_prefix` used for card
          charges in Japan. Japanese statement descriptors have [special
          requirements](https://docs.stripe.com/get-started/account/statement-descriptors#set-japanese-statement-descriptors).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountPayoutSettings:
    docs: ''
    properties:
      debit_negative_balances:
        docs: >-
          A Boolean indicating if Stripe should try to reclaim negative balances
          from an attached bank account. See [Understanding Connect account
          balances](/connect/account-balances) for details. The default value is
          `false` when
          [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts, otherwise `true`.
        type: boolean
      schedule:
        type: TransferSchedule
      statement_descriptor:
        docs: >-
          The text that appears on the bank account statement for payouts. If
          not set, this defaults to the platform's bank descriptor as set in the
          Dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      current_deadline:
        docs: >-
          Date by which the fields in `currently_due` must be collected to keep
          the account enabled. These fields may disable the account sooner if
          the next threshold is reached before they are collected.
        type: optional<integer>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the account enabled. If not
          collected by `current_deadline`, these fields appear in `past_due` as
          well, and the account is disabled.
        type: optional<list<string>>
      disabled_reason:
        docs: >-
          If the account is disabled, this enum describes why. [Learn more about
          handling verification
          issues](https://stripe.com/docs/connect/handling-api-verification).
        type: optional<AccountRequirementsDisabledReason>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: optional<list<AccountRequirementsError>>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well, and
          `current_deadline` becomes set.
        type: optional<list<string>>
      past_due:
        docs: >-
          Fields that weren't collected by `current_deadline`. These fields need
          to be collected to enable the account.
        type: optional<list<string>>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due`, `currently_due`, or `past_due`. Fields might appear
          in `eventually_due`, `currently_due`, or `past_due` and in
          `pending_verification` if verification fails but another verification
          is still pending.
        type: optional<list<string>>
    source:
      openapi: ../openapi.yaml
  AccountRequirementsAlternative:
    docs: ''
    properties:
      alternative_fields_due:
        docs: >-
          Fields that can be provided to satisfy all fields in
          `original_fields_due`.
        type: list<string>
      original_fields_due:
        docs: >-
          Fields that are due and can be satisfied by providing all fields in
          `alternative_fields_due`.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  AccountRequirementsDisabledReason:
    docs: >-
      If the account is disabled, this enum describes why. [Learn more about
      handling verification
      issues](https://stripe.com/docs/connect/handling-api-verification).
    enum:
      - name: ActionRequiredRequestedCapabilities
        value: action_required.requested_capabilities
      - listed
      - other
      - platform_paused
      - name: RejectedFraud
        value: rejected.fraud
      - name: RejectedIncompleteVerification
        value: rejected.incomplete_verification
      - name: RejectedListed
        value: rejected.listed
      - name: RejectedOther
        value: rejected.other
      - name: RejectedPlatformFraud
        value: rejected.platform_fraud
      - name: RejectedPlatformOther
        value: rejected.platform_other
      - name: RejectedPlatformTermsOfService
        value: rejected.platform_terms_of_service
      - name: RejectedTermsOfService
        value: rejected.terms_of_service
      - name: RequirementsPastDue
        value: requirements.past_due
      - name: RequirementsPendingVerification
        value: requirements.pending_verification
      - under_review
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountRequirementsError:
    docs: ''
    properties:
      code:
        docs: The code for the type of error.
        type: AccountRequirementsErrorCode
      reason:
        docs: >-
          An informative message that indicates the error type and provides
          additional details about the error.
        type: string
        validation:
          maxLength: 5000
      requirement:
        docs: >-
          The specific user onboarding requirement field (in the requirements
          hash) that needs to be resolved.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountRequirementsErrorCode:
    docs: The code for the type of error.
    enum:
      - invalid_address_city_state_postal_code
      - invalid_address_highway_contract_box
      - invalid_address_private_mailbox
      - invalid_business_profile_name
      - invalid_business_profile_name_denylisted
      - invalid_company_name_denylisted
      - invalid_dob_age_over_maximum
      - invalid_dob_age_under_18
      - invalid_dob_age_under_minimum
      - invalid_product_description_length
      - invalid_product_description_url_match
      - invalid_representative_country
      - invalid_statement_descriptor_business_mismatch
      - invalid_statement_descriptor_denylisted
      - invalid_statement_descriptor_length
      - invalid_statement_descriptor_prefix_denylisted
      - invalid_statement_descriptor_prefix_mismatch
      - invalid_street_address
      - invalid_tax_id
      - invalid_tax_id_format
      - invalid_tos_acceptance
      - invalid_url_denylisted
      - invalid_url_format
      - invalid_url_length
      - invalid_url_web_presence_detected
      - invalid_url_website_business_information_mismatch
      - invalid_url_website_empty
      - invalid_url_website_inaccessible
      - invalid_url_website_inaccessible_geoblocked
      - invalid_url_website_inaccessible_password_protected
      - invalid_url_website_incomplete
      - invalid_url_website_incomplete_cancellation_policy
      - invalid_url_website_incomplete_customer_service_details
      - invalid_url_website_incomplete_legal_restrictions
      - invalid_url_website_incomplete_refund_policy
      - invalid_url_website_incomplete_return_policy
      - invalid_url_website_incomplete_terms_and_conditions
      - invalid_url_website_incomplete_under_construction
      - invalid_url_website_other
      - invalid_value_other
      - verification_directors_mismatch
      - verification_document_address_mismatch
      - verification_document_address_missing
      - verification_document_corrupt
      - verification_document_country_not_supported
      - verification_document_directors_mismatch
      - verification_document_dob_mismatch
      - verification_document_duplicate_type
      - verification_document_expired
      - verification_document_failed_copy
      - verification_document_failed_greyscale
      - verification_document_failed_other
      - verification_document_failed_test_mode
      - verification_document_fraudulent
      - verification_document_id_number_mismatch
      - verification_document_id_number_missing
      - verification_document_incomplete
      - verification_document_invalid
      - verification_document_issue_or_expiry_date_missing
      - verification_document_manipulated
      - verification_document_missing_back
      - verification_document_missing_front
      - verification_document_name_mismatch
      - verification_document_name_missing
      - verification_document_nationality_mismatch
      - verification_document_not_readable
      - verification_document_not_signed
      - verification_document_not_uploaded
      - verification_document_photo_mismatch
      - verification_document_too_large
      - verification_document_type_not_supported
      - verification_extraneous_directors
      - verification_failed_address_match
      - verification_failed_business_iec_number
      - verification_failed_document_match
      - verification_failed_id_number_match
      - verification_failed_keyed_identity
      - verification_failed_keyed_match
      - verification_failed_name_match
      - verification_failed_other
      - verification_failed_representative_authority
      - verification_failed_residential_address
      - verification_failed_tax_id_match
      - verification_failed_tax_id_not_issued
      - verification_missing_directors
      - verification_missing_executives
      - verification_missing_owners
      - verification_requires_additional_memorandum_of_associations
      - verification_requires_additional_proof_of_registration
      - verification_supportability
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountSepaDebitPaymentsSettings:
    docs: ''
    properties:
      creditor_id:
        docs: >-
          SEPA creditor identifier that identifies the company making the
          payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountSession:
    docs: >-
      An AccountSession allows a Connect platform to grant access to a connected
      account in Connect embedded components.


      We recommend that you create an AccountSession each time you need to
      display an embedded component

      to your user. Do not save AccountSessions to your database as they expire
      relatively

      quickly, and cannot be used more than once.


      Related guide: [Connect embedded
      components](https://stripe.com/docs/connect/get-started-connect-embedded-components)
    properties:
      account:
        docs: The ID of the account the AccountSession was created for
        type: string
        validation:
          maxLength: 5000
      client_secret:
        docs: >-
          The client secret of this AccountSession. Used on the client to set up
          secure access to the given `account`.


          The client secret can be used to provide access to `account` from your
          frontend. It should not be stored, logged, or exposed to anyone other
          than the connected account. Make sure that you have TLS enabled on any
          page that includes the client secret.


          Refer to our docs to [setup Connect embedded
          components](https://stripe.com/docs/connect/get-started-connect-embedded-components)
          and learn about how `client_secret` should be handled.
        type: string
        validation:
          maxLength: 5000
      components:
        type: ConnectEmbeddedAccountSessionCreateComponents
      expires_at:
        docs: The timestamp at which this AccountSession will expire.
        type: integer
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"account_session">
    source:
      openapi: ../openapi.yaml
  AccountSettings:
    docs: ''
    properties:
      bacs_debit_payments:
        type: optional<AccountBacsDebitPaymentsSettings>
      branding:
        type: AccountBrandingSettings
      card_issuing:
        type: optional<AccountCardIssuingSettings>
      card_payments:
        type: AccountCardPaymentsSettings
      dashboard:
        type: AccountDashboardSettings
      invoices:
        type: optional<AccountInvoicesSettings>
      payments:
        type: AccountPaymentsSettings
      payouts:
        type: optional<AccountPayoutSettings>
      sepa_debit_payments:
        type: optional<AccountSepaDebitPaymentsSettings>
      treasury:
        type: optional<AccountTreasurySettings>
    source:
      openapi: ../openapi.yaml
  AccountTermsOfService:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the account representative accepted
          the service agreement.
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the account representative accepted the
          service agreement.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the account representative
          accepted the service agreement.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountTosAcceptance:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the account representative accepted
          their service agreement
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the account representative accepted their
          service agreement
        type: optional<string>
        validation:
          maxLength: 5000
      service_agreement:
        docs: The user's service agreement type
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the account representative
          accepted their service agreement
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AccountTreasurySettings:
    docs: ''
    properties:
      tos_acceptance:
        type: optional<AccountTermsOfService>
    source:
      openapi: ../openapi.yaml
  AccountType:
    docs: >-
      The Stripe account type. Can be `standard`, `express`, `custom`, or
      `none`.
    enum:
      - custom
      - express
      - none
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountController:
    docs: ''
    properties:
      fees:
        type: optional<AccountUnificationAccountControllerFees>
      is_controller:
        docs: >-
          `true` if the Connect application retrieving the resource controls the
          account and can therefore exercise [platform
          controls](https://stripe.com/docs/connect/platform-controls-for-standard-accounts).
          Otherwise, this field is null.
        type: optional<boolean>
      losses:
        type: optional<AccountUnificationAccountControllerLosses>
      requirement_collection:
        docs: >-
          A value indicating responsibility for collecting requirements on this
          account. Only returned when the Connect application retrieving the
          resource controls the account.
        type: optional<AccountUnificationAccountControllerRequirementCollection>
      stripe_dashboard:
        type: optional<AccountUnificationAccountControllerStripeDashboard>
      type:
        docs: >-
          The controller type. Can be `application`, if a Connect application
          controls the account, or `account`, if the account controls itself.
        type: AccountUnificationAccountControllerType
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerFees:
    docs: ''
    properties:
      payer:
        docs: >-
          A value indicating the responsible payer of a bundle of Stripe fees
          for pricing-control eligible products on this account. Learn more
          about [fee behavior on connected
          accounts](https://docs.stripe.com/connect/direct-charges-fee-payer-behavior).
        type: AccountUnificationAccountControllerFeesPayer
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerFeesPayer:
    docs: >-
      A value indicating the responsible payer of a bundle of Stripe fees for
      pricing-control eligible products on this account. Learn more about [fee
      behavior on connected
      accounts](https://docs.stripe.com/connect/direct-charges-fee-payer-behavior).
    enum:
      - account
      - application
      - application_custom
      - application_express
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerLosses:
    docs: ''
    properties:
      payments:
        docs: >-
          A value indicating who is liable when this account can't pay back
          negative balances from payments.
        type: AccountUnificationAccountControllerLossesPayments
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerLossesPayments:
    docs: >-
      A value indicating who is liable when this account can't pay back negative
      balances from payments.
    enum:
      - application
      - stripe
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerRequirementCollection:
    docs: >-
      A value indicating responsibility for collecting requirements on this
      account. Only returned when the Connect application retrieving the
      resource controls the account.
    enum:
      - application
      - stripe
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerStripeDashboard:
    docs: ''
    properties:
      type:
        docs: >-
          A value indicating the Stripe dashboard this account has access to
          independent of the Connect application.
        type: AccountUnificationAccountControllerStripeDashboardType
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerStripeDashboardType:
    docs: >-
      A value indicating the Stripe dashboard this account has access to
      independent of the Connect application.
    enum:
      - express
      - full
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUnificationAccountControllerType:
    docs: >-
      The controller type. Can be `application`, if a Connect application
      controls the account, or `account`, if the account controls itself.
    enum:
      - account
      - application
    inline: true
    source:
      openapi: ../openapi.yaml
  AccountUpdated:
    docs: Occurs whenever an account status or property has changed.
    properties:
      object:
        type: Account
    source:
      openapi: ../openapi.yaml
  Address:
    docs: ''
    properties:
      city:
        docs: City, district, suburb, town, or village.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      line1:
        docs: Address line 1 (e.g., street, PO Box, or company name).
        type: optional<string>
        validation:
          maxLength: 5000
      line2:
        docs: Address line 2 (e.g., apartment, suite, unit, or building).
        type: optional<string>
        validation:
          maxLength: 5000
      postal_code:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: State, county, province, or region.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  AmazonPayUnderlyingPaymentMethodFundingDetails:
    docs: ''
    properties:
      card:
        type: optional<PaymentMethodDetailsPassthroughCard>
      type:
        docs: funding type of the underlying payment method.
        type: optional<literal<"card">>
    source:
      openapi: ../openapi.yaml
  ApiErrors:
    docs: ''
    properties:
      advice_code:
        docs: >-
          For card errors resulting from a card issuer decline, a short string
          indicating [how to proceed with an
          error](https://stripe.com/docs/declines#retrying-issuer-declines) if
          they provide one.
        type: optional<string>
        validation:
          maxLength: 5000
      charge:
        docs: For card errors, the ID of the failed charge.
        type: optional<string>
        validation:
          maxLength: 5000
      code:
        docs: >-
          For some errors that could be handled programmatically, a short string
          indicating the [error code](https://stripe.com/docs/error-codes)
          reported.
        type: optional<ApiErrorsCode>
      decline_code:
        docs: >-
          For card errors resulting from a card issuer decline, a short string
          indicating the [card issuer's reason for the
          decline](https://stripe.com/docs/declines#issuer-declines) if they
          provide one.
        type: optional<string>
        validation:
          maxLength: 5000
      doc_url:
        docs: >-
          A URL to more information about the [error
          code](https://stripe.com/docs/error-codes) reported.
        type: optional<string>
        validation:
          maxLength: 5000
      message:
        docs: >-
          A human-readable message providing more details about the error. For
          card errors, these messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 40000
      network_advice_code:
        docs: >-
          For card errors resulting from a card issuer decline, a 2 digit code
          which indicates the advice given to merchant by the card network on
          how to proceed with an error.
        type: optional<string>
        validation:
          maxLength: 5000
      network_decline_code:
        docs: >-
          For card errors resulting from a card issuer decline, a brand specific
          2, 3, or 4 digit code which indicates the reason the authorization
          failed.
        type: optional<string>
        validation:
          maxLength: 5000
      param:
        docs: >-
          If the error is parameter-specific, the parameter related to the
          error. For example, you can use this to display a message near the
          correct form field.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_intent:
        type: optional<PaymentIntent>
      payment_method:
        type: optional<PaymentMethod>
      payment_method_type:
        docs: >-
          If the error is specific to the type of payment method, the payment
          method type that had a problem. This field is only populated for
          invoice-related errors.
        type: optional<string>
        validation:
          maxLength: 5000
      request_log_url:
        docs: A URL to the request log entry in your dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_intent:
        type: optional<SetupIntent>
      source:
        type: optional<PaymentSource>
      type:
        docs: >-
          The type of error returned. One of `api_error`, `card_error`,
          `idempotency_error`, or `invalid_request_error`
        type: ApiErrorsType
    source:
      openapi: ../openapi.yaml
  ApiErrorsCode:
    docs: >-
      For some errors that could be handled programmatically, a short string
      indicating the [error code](https://stripe.com/docs/error-codes) reported.
    enum:
      - account_closed
      - account_country_invalid_address
      - account_error_country_change_requires_additional_steps
      - account_information_mismatch
      - account_invalid
      - account_number_invalid
      - acss_debit_session_incomplete
      - alipay_upgrade_required
      - amount_too_large
      - amount_too_small
      - api_key_expired
      - application_fees_not_allowed
      - authentication_required
      - balance_insufficient
      - balance_invalid_parameter
      - bank_account_bad_routing_numbers
      - bank_account_declined
      - bank_account_exists
      - bank_account_restricted
      - bank_account_unusable
      - bank_account_unverified
      - bank_account_verification_failed
      - billing_invalid_mandate
      - bitcoin_upgrade_required
      - capture_charge_authorization_expired
      - capture_unauthorized_payment
      - card_decline_rate_limit_exceeded
      - card_declined
      - cardholder_phone_number_required
      - charge_already_captured
      - charge_already_refunded
      - charge_disputed
      - charge_exceeds_source_limit
      - charge_exceeds_transaction_limit
      - charge_expired_for_capture
      - charge_invalid_parameter
      - charge_not_refundable
      - clearing_code_unsupported
      - country_code_invalid
      - country_unsupported
      - coupon_expired
      - customer_max_payment_methods
      - customer_max_subscriptions
      - customer_tax_location_invalid
      - debit_not_authorized
      - email_invalid
      - expired_card
      - financial_connections_account_inactive
      - financial_connections_no_successful_transaction_refresh
      - forwarding_api_inactive
      - forwarding_api_invalid_parameter
      - forwarding_api_upstream_connection_error
      - forwarding_api_upstream_connection_timeout
      - idempotency_key_in_use
      - incorrect_address
      - incorrect_cvc
      - incorrect_number
      - incorrect_zip
      - instant_payouts_config_disabled
      - instant_payouts_currency_disabled
      - instant_payouts_limit_exceeded
      - instant_payouts_unsupported
      - insufficient_funds
      - intent_invalid_state
      - intent_verification_method_missing
      - invalid_card_type
      - invalid_characters
      - invalid_charge_amount
      - invalid_cvc
      - invalid_expiry_month
      - invalid_expiry_year
      - invalid_mandate_reference_prefix_format
      - invalid_number
      - invalid_source_usage
      - invalid_tax_location
      - invoice_no_customer_line_items
      - invoice_no_payment_method_types
      - invoice_no_subscription_line_items
      - invoice_not_editable
      - invoice_on_behalf_of_not_editable
      - invoice_payment_intent_requires_action
      - invoice_upcoming_none
      - livemode_mismatch
      - lock_timeout
      - missing
      - no_account
      - not_allowed_on_standard_account
      - out_of_inventory
      - ownership_declaration_not_allowed
      - parameter_invalid_empty
      - parameter_invalid_integer
      - parameter_invalid_string_blank
      - parameter_invalid_string_empty
      - parameter_missing
      - parameter_unknown
      - parameters_exclusive
      - payment_intent_action_required
      - payment_intent_authentication_failure
      - payment_intent_incompatible_payment_method
      - payment_intent_invalid_parameter
      - payment_intent_konbini_rejected_confirmation_number
      - payment_intent_mandate_invalid
      - payment_intent_payment_attempt_expired
      - payment_intent_payment_attempt_failed
      - payment_intent_unexpected_state
      - payment_method_bank_account_already_verified
      - payment_method_bank_account_blocked
      - payment_method_billing_details_address_missing
      - payment_method_configuration_failures
      - payment_method_currency_mismatch
      - payment_method_customer_decline
      - payment_method_invalid_parameter
      - payment_method_invalid_parameter_testmode
      - payment_method_microdeposit_failed
      - payment_method_microdeposit_verification_amounts_invalid
      - payment_method_microdeposit_verification_amounts_mismatch
      - payment_method_microdeposit_verification_attempts_exceeded
      - payment_method_microdeposit_verification_descriptor_code_mismatch
      - payment_method_microdeposit_verification_timeout
      - payment_method_not_available
      - payment_method_provider_decline
      - payment_method_provider_timeout
      - payment_method_unactivated
      - payment_method_unexpected_state
      - payment_method_unsupported_type
      - payout_reconciliation_not_ready
      - payouts_limit_exceeded
      - payouts_not_allowed
      - platform_account_required
      - platform_api_key_expired
      - postal_code_invalid
      - processing_error
      - product_inactive
      - progressive_onboarding_limit_exceeded
      - rate_limit
      - refer_to_customer
      - refund_disputed_payment
      - resource_already_exists
      - resource_missing
      - return_intent_already_processed
      - routing_number_invalid
      - secret_key_required
      - sepa_unsupported_account
      - setup_attempt_failed
      - setup_intent_authentication_failure
      - setup_intent_invalid_parameter
      - setup_intent_mandate_invalid
      - setup_intent_setup_attempt_expired
      - setup_intent_unexpected_state
      - shipping_address_invalid
      - shipping_calculation_failed
      - sku_inactive
      - state_unsupported
      - status_transition_invalid
      - stripe_tax_inactive
      - tax_id_invalid
      - taxes_calculation_failed
      - terminal_location_country_unsupported
      - terminal_reader_busy
      - terminal_reader_hardware_fault
      - terminal_reader_invalid_location_for_activation
      - terminal_reader_invalid_location_for_payment
      - terminal_reader_offline
      - terminal_reader_timeout
      - testmode_charges_only
      - tls_version_unsupported
      - token_already_used
      - token_card_network_invalid
      - token_in_use
      - transfer_source_balance_parameters_mismatch
      - transfers_not_allowed
      - url_invalid
    inline: true
    source:
      openapi: ../openapi.yaml
  ApiErrorsType:
    docs: >-
      The type of error returned. One of `api_error`, `card_error`,
      `idempotency_error`, or `invalid_request_error`
    enum:
      - api_error
      - card_error
      - idempotency_error
      - invalid_request_error
    inline: true
    source:
      openapi: ../openapi.yaml
  ApplePayDomain:
    docs: ''
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      domain_name:
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"apple_pay_domain">
    source:
      openapi: ../openapi.yaml
  Application:
    docs: ''
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      name:
        docs: The name of the application.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"application">
    source:
      openapi: ../openapi.yaml
  ApplicationFee:
    docs: ''
    properties:
      account:
        docs: ID of the Stripe account this fee was taken from.
        type: ApplicationFeeAccount
      amount:
        docs: Amount earned, in cents (or local equivalent).
        type: integer
      amount_refunded:
        docs: >-
          Amount in cents (or local equivalent) refunded (can be less than the
          amount attribute on the fee if a partial refund was issued)
        type: integer
      application:
        docs: ID of the Connect application that earned the fee.
        type: ApplicationFeeApplication
      balance_transaction:
        docs: >-
          Balance transaction that describes the impact of this collected
          application fee on your account balance (not including refunds).
        type: optional<ApplicationFeeBalanceTransaction>
      charge:
        docs: ID of the charge that the application fee was taken from.
        type: ApplicationFeeCharge
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      fee_source:
        docs: >-
          Polymorphic source of the application fee. Includes the ID of the
          object the application fee was created from.
        type: optional<PlatformEarningFeeSource>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"application_fee">
      originating_transaction:
        docs: >-
          ID of the corresponding charge on the platform account, if this fee
          was the result of a charge using the `destination` parameter.
        type: optional<ApplicationFeeOriginatingTransaction>
      refunded:
        docs: >-
          Whether the fee has been fully refunded. If the fee is only partially
          refunded, this attribute will still be false.
        type: boolean
      refunds:
        docs: A list of refunds that have been applied to the fee.
        type: ApplicationFeeRefunds
    source:
      openapi: ../openapi.yaml
  ApplicationFeeAccount:
    discriminated: false
    docs: ID of the Stripe account this fee was taken from.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  ApplicationFeeApplication:
    discriminated: false
    docs: ID of the Connect application that earned the fee.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  ApplicationFeeBalanceTransaction:
    discriminated: false
    docs: >-
      Balance transaction that describes the impact of this collected
      application fee on your account balance (not including refunds).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  ApplicationFeeCharge:
    discriminated: false
    docs: ID of the charge that the application fee was taken from.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  ApplicationFeeCreated:
    docs: Occurs whenever an application fee is created on a charge.
    properties:
      object:
        type: ApplicationFee
    source:
      openapi: ../openapi.yaml
  ApplicationFeeOriginatingTransaction:
    discriminated: false
    docs: >-
      ID of the corresponding charge on the platform account, if this fee was
      the result of a charge using the `destination` parameter.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  ApplicationFeeRefunded:
    docs: >-
      Occurs whenever an application fee is refunded, whether from refunding a
      charge or from [refunding the application fee directly](#fee_refunds).
      This includes partial refunds.
    properties:
      object:
        type: ApplicationFee
    source:
      openapi: ../openapi.yaml
  ApplicationFeeRefunds:
    docs: A list of refunds that have been applied to the fee.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<FeeRefund>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ApplicationFeeRefundUpdated:
    docs: Occurs whenever an application fee refund is updated.
    properties:
      object:
        type: FeeRefund
    source:
      openapi: ../openapi.yaml
  AppsSecret:
    docs: >-
      Secret Store is an API that allows Stripe Apps developers to securely
      persist secrets for use by UI Extensions and app backends.


      The primary resource in Secret Store is a `secret`. Other apps can't view
      secrets created by an app. Additionally, secrets are scoped to provide
      further permission control.


      All Dashboard users and the app backend share `account` scoped secrets.
      Use the `account` scope for secrets that don't change per-user, like a
      third-party API key.


      A `user` scoped secret is accessible by the app backend and one specific
      Dashboard user. Use the `user` scope for per-user secrets like per-user
      OAuth tokens, where different users might have different permissions.


      Related guide: [Store data between page
      reloads](https://stripe.com/docs/stripe-apps/store-auth-data-custom-objects)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      deleted:
        docs: If true, indicates that this secret has been deleted
        type: optional<boolean>
      expires_at:
        docs: >-
          The Unix timestamp for the expiry time of the secret, after which the
          secret deletes.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      name:
        docs: A name for the secret that's unique within the scope.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"apps.secret">
      payload:
        docs: The plaintext secret value to be stored.
        type: optional<string>
        validation:
          maxLength: 5000
      scope:
        type: SecretServiceResourceScope
    source:
      openapi: ../openapi.yaml
  AutomaticTax:
    docs: ''
    properties:
      disabled_reason:
        docs: If Stripe disabled automatic tax, this enum describes why.
        type: optional<AutomaticTaxDisabledReason>
      enabled:
        docs: >-
          Whether Stripe automatically computes tax on this invoice. Note that
          incompatible invoice items (invoice items with manually specified [tax
          rates](https://stripe.com/docs/api/tax_rates), negative amounts, or
          `tax_behavior=unspecified`) cannot be added to automatic tax invoices.
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
      status:
        docs: >-
          The status of the most recent automated tax calculation for this
          invoice.
        type: optional<AutomaticTaxStatus>
    source:
      openapi: ../openapi.yaml
  AutomaticTaxDisabledReason:
    docs: If Stripe disabled automatic tax, this enum describes why.
    enum:
      - finalization_requires_location_inputs
      - finalization_system_error
    inline: true
    source:
      openapi: ../openapi.yaml
  AutomaticTaxStatus:
    docs: The status of the most recent automated tax calculation for this invoice.
    enum:
      - complete
      - failed
      - requires_location_inputs
    inline: true
    source:
      openapi: ../openapi.yaml
  Balance:
    docs: >-
      This is an object representing your Stripe balance. You can retrieve it to
      see

      the balance currently on your Stripe account.


      You can also retrieve the balance history, which contains a list of

      [transactions](https://stripe.com/docs/reporting/balance-transaction-types)
      that contributed to the balance

      (charges, payouts, and so forth).


      The available and pending amounts for each currency are broken down
      further by

      payment source types.


      Related guide: [Understanding Connect account
      balances](https://stripe.com/docs/connect/account-balances)
    properties:
      available:
        docs: >-
          Available funds that you can transfer or pay out automatically by
          Stripe or explicitly through the [Transfers
          API](https://stripe.com/docs/api#transfers) or [Payouts
          API](https://stripe.com/docs/api#payouts). You can find the available
          balance for each currency and payment type in the `source_types`
          property.
        type: list<BalanceAmount>
      connect_reserved:
        docs: >-
          Funds held due to negative balances on connected accounts where
          [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts. You can find the
          connect reserve balance for each currency and payment type in the
          `source_types` property.
        type: optional<list<BalanceAmount>>
      instant_available:
        docs: Funds that you can pay out using Instant Payouts.
        type: optional<list<BalanceAmountNet>>
      issuing:
        type: optional<BalanceDetail>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"balance">
      pending:
        docs: >-
          Funds that aren't available in the balance yet. You can find the
          pending balance for each currency and each payment type in the
          `source_types` property.
        type: list<BalanceAmount>
    source:
      openapi: ../openapi.yaml
  balance_transaction_source_or_id:
    discriminated: false
    docs: This transaction relates to the Stripe object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransactionSource
  BalanceAmount:
    docs: ''
    properties:
      amount:
        docs: Balance amount.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      source_types:
        type: optional<BalanceAmountBySourceType>
    source:
      openapi: ../openapi.yaml
  BalanceAmountBySourceType:
    docs: ''
    properties:
      bank_account:
        docs: Amount for bank account.
        type: optional<integer>
      card:
        docs: Amount for card.
        type: optional<integer>
      fpx:
        docs: Amount for FPX.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  BalanceAmountNet:
    docs: ''
    properties:
      amount:
        docs: Balance amount.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      net_available:
        docs: Breakdown of balance by destination.
        type: optional<list<BalanceNetAvailable>>
      source_types:
        type: optional<BalanceAmountBySourceType>
    source:
      openapi: ../openapi.yaml
  BalanceAvailable:
    docs: >-
      Occurs whenever your Stripe balance has been updated (e.g., when a charge
      is available to be paid out). By default, Stripe automatically transfers
      funds in your balance to your bank account on a daily basis. This event is
      not fired for negative transactions.
    properties:
      object:
        type: Balance
    source:
      openapi: ../openapi.yaml
  BalanceDetail:
    docs: ''
    properties:
      available:
        docs: Funds that are available for use.
        type: list<BalanceAmount>
    source:
      openapi: ../openapi.yaml
  BalanceNetAvailable:
    docs: ''
    properties:
      amount:
        docs: Net balance amount, subtracting fees from platform-set pricing.
        type: integer
      destination:
        docs: ID of the external account for this net balance (not expandable).
        type: string
        validation:
          maxLength: 5000
      source_types:
        type: optional<BalanceAmountBySourceType>
    source:
      openapi: ../openapi.yaml
  BalanceTransaction:
    docs: >-
      Balance transactions represent funds moving through your Stripe account.

      Stripe creates them for every type of transaction that enters or leaves
      your Stripe account balance.


      Related guide: [Balance transaction
      types](https://stripe.com/docs/reports/balance-transaction-types)
    properties:
      amount:
        docs: >-
          Gross amount of this transaction (in cents (or local equivalent)). A
          positive value represents funds charged to another party, and a
          negative value represents funds sent to another party.
        type: integer
      available_on:
        docs: >-
          The date that the transaction's net funds become available in the
          Stripe balance.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      exchange_rate:
        docs: >-
          If applicable, this transaction uses an exchange rate. If money
          converts from currency A to currency B, then the `amount` in currency
          A, multipled by the `exchange_rate`, equals the `amount` in currency
          B. For example, if you charge a customer 10.00 EUR, the
          PaymentIntent's `amount` is `1000` and `currency` is `eur`. If this
          converts to 12.34 USD in your Stripe account, the BalanceTransaction's
          `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate`
          is `1.234`.
        type: optional<double>
      fee:
        docs: >-
          Fees (in cents (or local equivalent)) paid for this transaction.
          Represented as a positive integer when assessed.
        type: integer
      fee_details:
        docs: >-
          Detailed breakdown of fees (in cents (or local equivalent)) paid for
          this transaction.
        type: list<Fee>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      net:
        docs: >-
          Net impact to a Stripe balance (in cents (or local equivalent)). A
          positive value represents incrementing a Stripe balance, and a
          negative value decrementing a Stripe balance. You can calculate the
          net impact of a transaction on a balance by `amount` - `fee`
        type: integer
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"balance_transaction">
      reporting_category:
        docs: >-
          Learn more about how [reporting
          categories](https://stripe.com/docs/reports/reporting-categories) can
          help you understand balance transactions from an accounting
          perspective.
        type: string
        validation:
          maxLength: 5000
      source:
        docs: This transaction relates to the Stripe object.
        type: optional<balance_transaction_source_or_id>
      status:
        docs: >-
          The transaction's net funds status in the Stripe balance, which are
          either `available` or `pending`.
        type: string
        validation:
          maxLength: 5000
      type:
        docs: >-
          Transaction type: `adjustment`, `advance`, `advance_funding`,
          `anticipation_repayment`, `application_fee`, `application_fee_refund`,
          `charge`, `climate_order_purchase`, `climate_order_refund`,
          `connect_collection_transfer`, `contribution`,
          `issuing_authorization_hold`, `issuing_authorization_release`,
          `issuing_dispute`, `issuing_transaction`, `obligation_outbound`,
          `obligation_reversal_inbound`, `payment`, `payment_failure_refund`,
          `payment_network_reserve_hold`, `payment_network_reserve_release`,
          `payment_refund`, `payment_reversal`, `payment_unreconciled`,
          `payout`, `payout_cancel`, `payout_failure`,
          `payout_minimum_balance_hold`, `payout_minimum_balance_release`,
          `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`,
          `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`,
          `transfer`, `transfer_cancel`, `transfer_failure`, or
          `transfer_refund`. Learn more about [balance transaction types and
          what they
          represent](https://stripe.com/docs/reports/balance-transaction-types).
          To classify transactions for accounting purposes, consider
          `reporting_category` instead.
        type: BalanceTransactionType
    source:
      openapi: ../openapi.yaml
  BalanceTransactionSource:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: ApplicationFee
      - type: Charge
      - type: ConnectCollectionTransfer
      - type: CustomerCashBalanceTransaction
      - type: Dispute
      - type: FeeRefund
      - type: IssuingAuthorization
      - type: IssuingDispute
      - type: IssuingTransaction
      - type: Payout
      - type: Refund
      - type: ReserveTransaction
      - type: TaxDeductedAtSource
      - type: Topup
      - type: Transfer
      - type: TransferReversal
  BalanceTransactionType:
    docs: >-
      Transaction type: `adjustment`, `advance`, `advance_funding`,
      `anticipation_repayment`, `application_fee`, `application_fee_refund`,
      `charge`, `climate_order_purchase`, `climate_order_refund`,
      `connect_collection_transfer`, `contribution`,
      `issuing_authorization_hold`, `issuing_authorization_release`,
      `issuing_dispute`, `issuing_transaction`, `obligation_outbound`,
      `obligation_reversal_inbound`, `payment`, `payment_failure_refund`,
      `payment_network_reserve_hold`, `payment_network_reserve_release`,
      `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`,
      `payout_cancel`, `payout_failure`, `payout_minimum_balance_hold`,
      `payout_minimum_balance_release`, `refund`, `refund_failure`,
      `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`,
      `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`,
      `transfer_failure`, or `transfer_refund`. Learn more about [balance
      transaction types and what they
      represent](https://stripe.com/docs/reports/balance-transaction-types). To
      classify transactions for accounting purposes, consider
      `reporting_category` instead.
    enum:
      - adjustment
      - advance
      - advance_funding
      - anticipation_repayment
      - application_fee
      - application_fee_refund
      - charge
      - climate_order_purchase
      - climate_order_refund
      - connect_collection_transfer
      - contribution
      - issuing_authorization_hold
      - issuing_authorization_release
      - issuing_dispute
      - issuing_transaction
      - obligation_outbound
      - obligation_reversal_inbound
      - payment
      - payment_failure_refund
      - payment_network_reserve_hold
      - payment_network_reserve_release
      - payment_refund
      - payment_reversal
      - payment_unreconciled
      - payout
      - payout_cancel
      - payout_failure
      - payout_minimum_balance_hold
      - payout_minimum_balance_release
      - refund
      - refund_failure
      - reserve_transaction
      - reserved_funds
      - stripe_fee
      - stripe_fx_fee
      - tax_fee
      - topup
      - topup_reversal
      - transfer
      - transfer_cancel
      - transfer_failure
      - transfer_refund
    inline: true
    source:
      openapi: ../openapi.yaml
  BankAccount:
    docs: >-
      These bank accounts are payment methods on `Customer` objects.


      On the other hand [External Accounts](/api#external_accounts) are transfer

      destinations on `Account` objects for connected accounts.

      They can be bank accounts or debit cards as well, and are documented in
      the links above.


      Related guide: [Bank debits and
      transfers](/payments/bank-debits-transfers)
    properties:
      account:
        docs: The ID of the account that the bank account is associated with.
        type: optional<BankAccountAccount>
      account_holder_name:
        docs: The name of the person or business that owns the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      account_holder_type:
        docs: >-
          The type of entity that holds the account. This can be either
          `individual` or `company`.
        type: optional<string>
        validation:
          maxLength: 5000
      account_type:
        docs: >-
          The bank account type. This can only be `checking` or `savings` in
          most countries. In Japan, this can only be `futsu` or `toza`.
        type: optional<string>
        validation:
          maxLength: 5000
      available_payout_methods:
        docs: >-
          A set of available payout methods for this bank account. Only values
          from this set should be passed as the `method` when creating a payout.
        type: optional<list<BankAccountAvailablePayoutMethodsItem>>
      bank_name:
        docs: >-
          Name of the bank associated with the routing number (e.g., `WELLS
          FARGO`).
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: string
        validation:
          maxLength: 5000
      currency:
        docs: >-
          Three-letter [ISO code for the
          currency](https://stripe.com/docs/payouts) paid out to the bank
          account.
        type: string
      customer:
        docs: The ID of the customer that the bank account is associated with.
        type: optional<BankAccountCustomer>
      default_for_currency:
        docs: >-
          Whether this bank account is the default external account for its
          currency.
        type: optional<boolean>
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      future_requirements:
        docs: >-
          Information about the [upcoming new requirements for the bank
          account](https://stripe.com/docs/connect/custom-accounts/future-requirements),
          including what information needs to be collected, and by when.
        type: optional<ExternalAccountRequirements>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the bank account number.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"bank_account">
      requirements:
        docs: >-
          Information about the requirements for the bank account, including
          what information needs to be collected.
        type: optional<ExternalAccountRequirements>
      routing_number:
        docs: The routing transit number for the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          For bank accounts, possible values are `new`, `validated`, `verified`,
          `verification_failed`, or `errored`. A bank account that hasn't had
          any activity or validation performed is `new`. If Stripe can determine
          that the bank account exists, its status will be `validated`. Note
          that there often isn’t enough information to know (e.g., for smaller
          credit unions), and the validation is not always run. If customer bank
          account verification has succeeded, the bank account status will be
          `verified`. If the verification failed for any reason, such as
          microdeposit failure, the status will be `verification_failed`. If a
          payout sent to this bank account fails, we'll set the status to
          `errored` and will not continue to send [scheduled
          payouts](https://stripe.com/docs/payouts#payout-schedule) until the
          bank details are updated.


          For external accounts, possible values are `new`, `errored` and
          `verification_failed`. If a payout fails, the status is set to
          `errored` and scheduled payouts are stopped until account details are
          updated. In the US and India, if we can't [verify the owner of the
          bank
          account](https://support.stripe.com/questions/bank-account-ownership-verification),
          we'll set the status to `verification_failed`. Other validations
          aren't run against external accounts because they're only used for
          payouts. This means the other statuses don't apply.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BankAccountAccount:
    discriminated: false
    docs: The ID of the account that the bank account is associated with.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  BankAccountAvailablePayoutMethodsItem:
    enum:
      - instant
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  BankAccountCustomer:
    discriminated: false
    docs: The ID of the customer that the bank account is associated with.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  BankConnectionsResourceAccountholder:
    docs: ''
    properties:
      account:
        docs: >-
          The ID of the Stripe account this account belongs to. Should only be
          present if `account_holder.type` is `account`.
        type: optional<BankConnectionsResourceAccountholderAccount>
      customer:
        docs: >-
          ID of the Stripe customer this account belongs to. Present if and only
          if `account_holder.type` is `customer`.
        type: optional<BankConnectionsResourceAccountholderCustomer>
      type:
        docs: Type of account holder that this account belongs to.
        type: BankConnectionsResourceAccountholderType
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceAccountholderAccount:
    discriminated: false
    docs: >-
      The ID of the Stripe account this account belongs to. Should only be
      present if `account_holder.type` is `account`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  BankConnectionsResourceAccountholderCustomer:
    discriminated: false
    docs: >-
      ID of the Stripe customer this account belongs to. Present if and only if
      `account_holder.type` is `customer`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  BankConnectionsResourceAccountholderType:
    docs: Type of account holder that this account belongs to.
    enum:
      - account
      - customer
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalance:
    docs: ''
    properties:
      as_of:
        docs: >-
          The time that the external institution calculated this balance.
          Measured in seconds since the Unix epoch.
        type: integer
      cash:
        type: optional<BankConnectionsResourceBalanceApiResourceCashBalance>
      credit:
        type: optional<BankConnectionsResourceBalanceApiResourceCreditBalance>
      current:
        docs: >-
          The balances owed to (or by) the account holder, before subtracting
          any outbound pending transactions or adding any inbound pending
          transactions.


          Each key is a three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.


          Each value is a integer amount. A positive amount indicates money owed
          to the account holder. A negative amount indicates money owed by the
          account holder.
        type: map<string, integer>
      type:
        docs: >-
          The `type` of the balance. An additional hash is included on the
          balance with a name matching this value.
        type: BankConnectionsResourceBalanceType
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalanceApiResourceCashBalance:
    docs: ''
    properties:
      available:
        docs: >-
          The funds available to the account holder. Typically this is the
          current balance after subtracting any outbound pending transactions
          and adding any inbound pending transactions.


          Each key is a three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.


          Each value is a integer amount. A positive amount indicates money owed
          to the account holder. A negative amount indicates money owed by the
          account holder.
        type: optional<map<string, optional<integer>>>
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalanceApiResourceCreditBalance:
    docs: ''
    properties:
      used:
        docs: >-
          The credit that has been used by the account holder.


          Each key is a three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.


          Each value is a integer amount. A positive amount indicates money owed
          to the account holder. A negative amount indicates money owed by the
          account holder.
        type: optional<map<string, optional<integer>>>
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalanceRefresh:
    docs: ''
    properties:
      last_attempted_at:
        docs: >-
          The time at which the last refresh attempt was initiated. Measured in
          seconds since the Unix epoch.
        type: integer
      next_refresh_available_at:
        docs: >-
          Time at which the next balance refresh can be initiated. This value
          will be `null` when `status` is `pending`. Measured in seconds since
          the Unix epoch.
        type: optional<integer>
      status:
        docs: The status of the last refresh attempt.
        type: BankConnectionsResourceBalanceRefreshStatus
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalanceRefreshStatus:
    docs: The status of the last refresh attempt.
    enum:
      - failed
      - pending
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceBalanceType:
    docs: >-
      The `type` of the balance. An additional hash is included on the balance
      with a name matching this value.
    enum:
      - cash
      - credit
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceLinkAccountSessionFilters:
    docs: ''
    properties:
      account_subcategories:
        docs: >-
          Restricts the Session to subcategories of accounts that can be linked.
          Valid subcategories are: `checking`, `savings`, `mortgage`,
          `line_of_credit`, `credit_card`.
        type: >-
          optional<list<BankConnectionsResourceLinkAccountSessionFiltersAccountSubcategoriesItem>>
      countries:
        docs: List of countries from which to filter accounts.
        type: optional<list<string>>
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceLinkAccountSessionFiltersAccountSubcategoriesItem:
    enum:
      - checking
      - credit_card
      - line_of_credit
      - mortgage
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceOwnershipRefresh:
    docs: ''
    properties:
      last_attempted_at:
        docs: >-
          The time at which the last refresh attempt was initiated. Measured in
          seconds since the Unix epoch.
        type: integer
      next_refresh_available_at:
        docs: >-
          Time at which the next ownership refresh can be initiated. This value
          will be `null` when `status` is `pending`. Measured in seconds since
          the Unix epoch.
        type: optional<integer>
      status:
        docs: The status of the last refresh attempt.
        type: BankConnectionsResourceOwnershipRefreshStatus
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceOwnershipRefreshStatus:
    docs: The status of the last refresh attempt.
    enum:
      - failed
      - pending
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceTransactionRefresh:
    docs: ''
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last_attempted_at:
        docs: >-
          The time at which the last refresh attempt was initiated. Measured in
          seconds since the Unix epoch.
        type: integer
      next_refresh_available_at:
        docs: >-
          Time at which the next transaction refresh can be initiated. This
          value will be `null` when `status` is `pending`. Measured in seconds
          since the Unix epoch.
        type: optional<integer>
      status:
        docs: The status of the last refresh attempt.
        type: BankConnectionsResourceTransactionRefreshStatus
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceTransactionRefreshStatus:
    docs: The status of the last refresh attempt.
    enum:
      - failed
      - pending
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  BankConnectionsResourceTransactionResourceStatusTransitions:
    docs: ''
    properties:
      posted_at:
        docs: >-
          Time at which this transaction posted. Measured in seconds since the
          Unix epoch.
        type: optional<integer>
      void_at:
        docs: >-
          Time at which this transaction was voided. Measured in seconds since
          the Unix epoch.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  BillingAlert:
    docs: >-
      A billing alert is a resource that notifies you when a certain usage
      threshold on a meter is crossed. For example, you might create a billing
      alert to notify you when a certain user made 100 API requests.
    properties:
      alert_type:
        docs: Defines the type of the alert.
        type: literal<"usage_threshold">
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.alert">
      status:
        docs: Status of the alert. This can be active, inactive or archived.
        type: optional<BillingAlertStatus>
      title:
        docs: Title of the alert.
        type: string
        validation:
          maxLength: 5000
      usage_threshold:
        docs: >-
          Encapsulates configuration of the alert to monitor usage on a specific
          [Billing Meter](https://stripe.com/docs/api/billing/meter).
        type: optional<ThresholdsResourceUsageThresholdConfig>
    source:
      openapi: ../openapi.yaml
  BillingAlertStatus:
    docs: Status of the alert. This can be active, inactive or archived.
    enum:
      - active
      - archived
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingAlertTriggered:
    docs: ''
    properties:
      alert:
        type: BillingAlert
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: ID of customer for which the alert triggered
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.alert_triggered">
      value:
        docs: The value triggering the alert
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingClocksResourceStatusDetailsAdvancingStatusDetails:
    docs: ''
    properties:
      target_frozen_time:
        docs: The `frozen_time` that the Test Clock is advancing towards.
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingClocksResourceStatusDetailsStatusDetails:
    docs: ''
    properties:
      advancing:
        type: optional<BillingClocksResourceStatusDetailsAdvancingStatusDetails>
    source:
      openapi: ../openapi.yaml
  BillingCreditBalanceSummary:
    docs: >-
      Indicates the billing credit balance for billing credits granted to a
      customer.
    properties:
      balances:
        docs: >-
          The billing credit balances. One entry per credit grant currency. If a
          customer only has credit grants in a single currency, then this will
          have a single balance entry.
        type: list<CreditBalance>
      customer:
        docs: The customer the balance is for.
        type: BillingCreditBalanceSummaryCustomer
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.credit_balance_summary">
    source:
      openapi: ../openapi.yaml
  BillingCreditBalanceSummaryCustomer:
    discriminated: false
    docs: The customer the balance is for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  BillingCreditBalanceTransaction:
    docs: >-
      A credit balance transaction is a resource representing a transaction
      (either a credit or a debit) against an existing credit grant.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      credit:
        docs: >-
          Credit details for this credit balance transaction. Only present if
          type is `credit`.
        type: optional<BillingCreditGrantsResourceBalanceCredit>
      credit_grant:
        docs: The credit grant associated with this credit balance transaction.
        type: BillingCreditBalanceTransactionCreditGrant
      debit:
        docs: >-
          Debit details for this credit balance transaction. Only present if
          type is `debit`.
        type: optional<BillingCreditGrantsResourceBalanceDebit>
      effective_at:
        docs: The effective time of this credit balance transaction.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.credit_balance_transaction">
      test_clock:
        docs: ID of the test clock this credit balance transaction belongs to.
        type: optional<BillingCreditBalanceTransactionTestClock>
      type:
        docs: The type of credit balance transaction (credit or debit).
        type: optional<BillingCreditBalanceTransactionType>
    source:
      openapi: ../openapi.yaml
  BillingCreditBalanceTransactionCreditGrant:
    discriminated: false
    docs: The credit grant associated with this credit balance transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BillingCreditGrant
  BillingCreditBalanceTransactionTestClock:
    discriminated: false
    docs: ID of the test clock this credit balance transaction belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  BillingCreditBalanceTransactionType:
    docs: The type of credit balance transaction (credit or debit).
    enum:
      - credit
      - debit
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingCreditGrant:
    docs: >-
      A credit grant is an API resource that documents the allocation of some
      billing credits to a customer.


      Related guide: [Billing
      credits](https://docs.stripe.com/billing/subscriptions/usage-based/billing-credits)
    properties:
      amount:
        type: BillingCreditGrantsResourceAmount
      applicability_config:
        type: BillingCreditGrantsResourceApplicabilityConfig
      category:
        docs: >-
          The category of this credit grant. This is for tracking purposes and
          isn't displayed to the customer.
        type: BillingCreditGrantCategory
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: ID of the customer receiving the billing credits.
        type: BillingCreditGrantCustomer
      effective_at:
        docs: >-
          The time when the billing credits become effective-when they're
          eligible for use.
        type: optional<integer>
      expires_at:
        docs: >-
          The time when the billing credits expire. If not present, the billing
          credits don't expire.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      name:
        docs: A descriptive name shown in dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.credit_grant">
      test_clock:
        docs: ID of the test clock this credit grant belongs to.
        type: optional<BillingCreditGrantTestClock>
      updated:
        docs: >-
          Time at which the object was last updated. Measured in seconds since
          the Unix epoch.
        type: integer
      voided_at:
        docs: >-
          The time when this credit grant was voided. If not present, the credit
          grant hasn't been voided.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantCategory:
    docs: >-
      The category of this credit grant. This is for tracking purposes and isn't
      displayed to the customer.
    enum:
      - paid
      - promotional
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantCustomer:
    discriminated: false
    docs: ID of the customer receiving the billing credits.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  BillingCreditGrantsResourceAmount:
    docs: ''
    properties:
      monetary:
        docs: The monetary amount.
        type: optional<BillingCreditGrantsResourceMonetaryAmount>
      type:
        docs: >-
          The type of this amount. We currently only support `monetary` billing
          credits.
        type: literal<"monetary">
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceApplicabilityConfig:
    docs: ''
    properties:
      scope:
        type: BillingCreditGrantsResourceScope
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceCredit:
    docs: ''
    properties:
      amount:
        type: BillingCreditGrantsResourceAmount
      credits_application_invoice_voided:
        docs: >-
          Details of the invoice to which the reinstated credits were originally
          applied. Only present if `type` is
          `credits_application_invoice_voided`.
        type: >-
          optional<BillingCreditGrantsResourceBalanceCreditsApplicationInvoiceVoided>
      type:
        docs: The type of credit transaction.
        type: BillingCreditGrantsResourceBalanceCreditType
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceCreditsApplicationInvoiceVoided:
    docs: ''
    properties:
      invoice:
        docs: >-
          The invoice to which the reinstated billing credits were originally
          applied.
        type: >-
          BillingCreditGrantsResourceBalanceCreditsApplicationInvoiceVoidedInvoice
      invoice_line_item:
        docs: >-
          The invoice line item to which the reinstated billing credits were
          originally applied.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceCreditsApplicationInvoiceVoidedInvoice:
    discriminated: false
    docs: >-
      The invoice to which the reinstated billing credits were originally
      applied.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  BillingCreditGrantsResourceBalanceCreditsApplied:
    docs: ''
    properties:
      invoice:
        docs: The invoice to which the billing credits were applied.
        type: BillingCreditGrantsResourceBalanceCreditsAppliedInvoice
      invoice_line_item:
        docs: The invoice line item to which the billing credits were applied.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceCreditsAppliedInvoice:
    discriminated: false
    docs: The invoice to which the billing credits were applied.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  BillingCreditGrantsResourceBalanceCreditType:
    docs: The type of credit transaction.
    enum:
      - credits_application_invoice_voided
      - credits_granted
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceDebit:
    docs: ''
    properties:
      amount:
        type: BillingCreditGrantsResourceAmount
      credits_applied:
        docs: >-
          Details of how the billing credits were applied to an invoice. Only
          present if `type` is `credits_applied`.
        type: optional<BillingCreditGrantsResourceBalanceCreditsApplied>
      type:
        docs: The type of debit transaction.
        type: BillingCreditGrantsResourceBalanceDebitType
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceBalanceDebitType:
    docs: The type of debit transaction.
    enum:
      - credits_applied
      - credits_expired
      - credits_voided
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceMonetaryAmount:
    docs: ''
    properties:
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      value:
        docs: A positive integer representing the amount.
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantsResourceScope:
    docs: ''
    properties:
      price_type:
        docs: >-
          The price type that credit grants can apply to. We currently only
          support the `metered` price type. This refers to prices that have a
          [Billing Meter](https://docs.stripe.com/api/billing/meter) attached to
          them.
        type: literal<"metered">
    source:
      openapi: ../openapi.yaml
  BillingCreditGrantTestClock:
    discriminated: false
    docs: ID of the test clock this credit grant belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  BillingDetails:
    docs: ''
    properties:
      address:
        docs: Billing address.
        type: optional<Address>
      email:
        docs: Email address.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: Full name.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: Billing phone number (including extension).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BillingMeter:
    docs: >-
      Meters specify how to aggregate meter events over a billing period. Meter
      events represent the actions that customers take in your system. Meters
      attach to prices and form the basis of the bill.


      Related guide: [Usage based
      billing](https://docs.stripe.com/billing/subscriptions/usage-based)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer_mapping:
        type: BillingMeterResourceCustomerMappingSettings
      default_aggregation:
        type: BillingMeterResourceAggregationSettings
      display_name:
        docs: The meter's name.
        type: string
        validation:
          maxLength: 5000
      event_name:
        docs: >-
          The name of the meter event to record usage for. Corresponds with the
          `event_name` field on meter events.
        type: string
        validation:
          maxLength: 5000
      event_time_window:
        docs: The time window to pre-aggregate meter events for, if any.
        type: optional<BillingMeterEventTimeWindow>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.meter">
      status:
        docs: The meter's status.
        type: BillingMeterStatus
      status_transitions:
        type: BillingMeterResourceBillingMeterStatusTransitions
      updated:
        docs: >-
          Time at which the object was last updated. Measured in seconds since
          the Unix epoch.
        type: integer
      value_settings:
        type: BillingMeterResourceBillingMeterValue
    source:
      openapi: ../openapi.yaml
  BillingMeterEvent:
    docs: >-
      Meter events represent actions that customers take in your system. You can
      use meter events to bill a customer based on their usage. Meter events are
      associated with billing meters, which define both the contents of the
      event’s payload and how to aggregate those events.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      event_name:
        docs: >-
          The name of the meter event. Corresponds with the `event_name` field
          on a meter.
        type: string
        validation:
          maxLength: 100
      identifier:
        docs: A unique identifier for the event.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.meter_event">
      payload:
        docs: >-
          The payload of the event. This contains the fields corresponding to a
          meter's `customer_mapping.event_payload_key` (default is
          `stripe_customer_id`) and `value_settings.event_payload_key` (default
          is `value`). Read more about the
          [payload](https://stripe.com/docs/billing/subscriptions/usage-based/recording-usage#payload-key-overrides).
        type: map<string, string>
      timestamp:
        docs: >-
          The timestamp passed in when creating the event. Measured in seconds
          since the Unix epoch.
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingMeterEventAdjustment:
    docs: >-
      A billing meter event adjustment is a resource that allows you to cancel a
      meter event. For example, you might create a billing meter event
      adjustment to cancel a meter event that was created in error or attached
      to the wrong customer.
    properties:
      cancel:
        docs: Specifies which event to cancel.
        type: optional<BillingMeterResourceBillingMeterEventAdjustmentCancel>
      event_name:
        docs: >-
          The name of the meter event. Corresponds with the `event_name` field
          on a meter.
        type: string
        validation:
          maxLength: 100
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.meter_event_adjustment">
      status:
        docs: The meter event adjustment's status.
        type: BillingMeterEventAdjustmentStatus
      type:
        docs: >-
          Specifies whether to cancel a single event or a range of events for a
          time period. Time period cancellation is not supported yet.
        type: literal<"cancel">
    source:
      openapi: ../openapi.yaml
  BillingMeterEventAdjustmentStatus:
    docs: The meter event adjustment's status.
    enum:
      - complete
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingMeterEventSummary:
    docs: >-
      A billing meter event summary represents an aggregated view of a
      customer's billing meter events within a specified timeframe. It indicates
      how much

      usage was accrued by a customer for that period.
    properties:
      aggregated_value:
        docs: >-
          Aggregated value of all the events within `start_time` (inclusive) and
          `end_time` (inclusive). The aggregation strategy is defined on meter
          via `default_aggregation`.
        type: double
      end_time:
        docs: >-
          End timestamp for this event summary (exclusive). Must be aligned with
          minute boundaries.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      meter:
        docs: The meter associated with this event summary.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing.meter_event_summary">
      start_time:
        docs: >-
          Start timestamp for this event summary (inclusive). Must be aligned
          with minute boundaries.
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingMeterEventTimeWindow:
    docs: The time window to pre-aggregate meter events for, if any.
    enum:
      - day
      - hour
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceAggregationSettings:
    docs: ''
    properties:
      formula:
        docs: Specifies how events are aggregated.
        type: BillingMeterResourceAggregationSettingsFormula
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceAggregationSettingsFormula:
    docs: Specifies how events are aggregated.
    enum:
      - count
      - sum
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceBillingMeterEventAdjustmentCancel:
    docs: ''
    properties:
      identifier:
        docs: Unique identifier for the event.
        type: optional<string>
        validation:
          maxLength: 100
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceBillingMeterStatusTransitions:
    docs: ''
    properties:
      deactivated_at:
        docs: >-
          The time the meter was deactivated, if any. Measured in seconds since
          Unix epoch.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceBillingMeterValue:
    docs: ''
    properties:
      event_payload_key:
        docs: The key in the meter event payload to use as the value for this meter.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BillingMeterResourceCustomerMappingSettings:
    docs: ''
    properties:
      event_payload_key:
        docs: >-
          The key in the meter event payload to use for mapping the event to a
          customer.
        type: string
        validation:
          maxLength: 5000
      type:
        docs: The method for mapping a meter event to a customer.
        type: literal<"by_id">
    source:
      openapi: ../openapi.yaml
  BillingMeterStatus:
    docs: The meter's status.
    enum:
      - active
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  BillingPortalConfiguration:
    docs: >-
      A portal configuration describes the functionality and behavior of a
      portal session.
    properties:
      active:
        docs: >-
          Whether the configuration is active and can be used to create portal
          sessions.
        type: boolean
      application:
        docs: ID of the Connect Application that created the configuration.
        type: optional<BillingPortalConfigurationApplication>
      business_profile:
        type: PortalBusinessProfile
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      default_return_url:
        docs: >-
          The default URL to redirect customers to when they click on the
          portal's link to return to your website. This can be
          [overriden](https://stripe.com/docs/api/customer_portal/sessions/create#create_portal_session-return_url)
          when creating the session.
        type: optional<string>
        validation:
          maxLength: 5000
      features:
        type: PortalFeatures
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      is_default:
        docs: >-
          Whether the configuration is the default. If `true`, this
          configuration can be managed in the Dashboard and portal sessions will
          use this configuration unless it is overriden when creating the
          session.
        type: boolean
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      login_page:
        type: PortalLoginPage
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing_portal.configuration">
      updated:
        docs: >-
          Time at which the object was last updated. Measured in seconds since
          the Unix epoch.
        type: integer
    source:
      openapi: ../openapi.yaml
  BillingPortalConfigurationApplication:
    discriminated: false
    docs: ID of the Connect Application that created the configuration.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  BillingPortalConfigurationCreated:
    docs: Occurs whenever a portal configuration is created.
    properties:
      object:
        type: BillingPortalConfiguration
    source:
      openapi: ../openapi.yaml
  BillingPortalConfigurationUpdated:
    docs: Occurs whenever a portal configuration is updated.
    properties:
      object:
        type: BillingPortalConfiguration
    source:
      openapi: ../openapi.yaml
  BillingPortalSession:
    docs: >-
      The Billing customer portal is a Stripe-hosted UI for subscription and

      billing management.


      A portal configuration describes the functionality and features that you

      want to provide to your customers through the portal.


      A portal session describes the instantiation of the customer portal for

      a particular customer. By visiting the session's URL, the customer

      can manage their subscriptions and billing details. For security reasons,

      sessions are short-lived and will expire if the customer does not visit
      the URL.

      Create sessions on-demand when customers intend to manage their
      subscriptions

      and billing details.


      Related guide: [Customer management](/customer-management)
    properties:
      configuration:
        docs: >-
          The configuration used by this session, describing the features
          available.
        type: BillingPortalSessionConfiguration
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: The ID of the customer for this session.
        type: string
        validation:
          maxLength: 5000
      flow:
        docs: >-
          Information about a specific flow for the customer to go through. See
          the
          [docs](https://stripe.com/docs/customer-management/portal-deep-links)
          to learn more about using customer portal deep links and flows.
        type: optional<PortalFlowsFlow>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      locale:
        docs: >-
          The IETF language tag of the locale Customer Portal is displayed in.
          If blank or auto, the customer’s `preferred_locales` or browser’s
          locale is used.
        type: optional<BillingPortalSessionLocale>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"billing_portal.session">
      on_behalf_of:
        docs: >-
          The account for which the session was created on behalf of. When
          specified, only subscriptions and invoices with this `on_behalf_of`
          account appear in the portal. For more information, see the
          [docs](https://stripe.com/docs/connect/separate-charges-and-transfers#settlement-merchant).
          Use the [Accounts
          API](https://stripe.com/docs/api/accounts/object#account_object-settings-branding)
          to modify the `on_behalf_of` account's branding settings, which the
          portal displays.
        type: optional<string>
        validation:
          maxLength: 5000
      return_url:
        docs: >-
          The URL to redirect customers to when they click on the portal's link
          to return to your website.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: >-
          The short-lived URL of the session that gives customers access to the
          customer portal.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  BillingPortalSessionConfiguration:
    discriminated: false
    docs: The configuration used by this session, describing the features available.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BillingPortalConfiguration
  BillingPortalSessionCreated:
    docs: Occurs whenever a portal session is created.
    properties:
      object:
        type: BillingPortalSession
    source:
      openapi: ../openapi.yaml
  BillingPortalSessionLocale:
    docs: >-
      The IETF language tag of the locale Customer Portal is displayed in. If
      blank or auto, the customer’s `preferred_locales` or browser’s locale is
      used.
    enum:
      - auto
      - bg
      - cs
      - da
      - de
      - el
      - en
      - name: EnAu
        value: en-AU
      - name: EnCa
        value: en-CA
      - name: EnGb
        value: en-GB
      - name: EnIe
        value: en-IE
      - name: EnIn
        value: en-IN
      - name: EnNz
        value: en-NZ
      - name: EnSg
        value: en-SG
      - es
      - name: Es419
        value: es-419
      - et
      - fi
      - fil
      - fr
      - name: FrCa
        value: fr-CA
      - hr
      - hu
      - id
      - it
      - ja
      - ko
      - lt
      - lv
      - ms
      - mt
      - nb
      - nl
      - pl
      - pt
      - name: PtBr
        value: pt-BR
      - ro
      - ru
      - sk
      - sl
      - sv
      - th
      - tr
      - vi
      - zh
      - name: ZhHk
        value: zh-HK
      - name: ZhTw
        value: zh-TW
    inline: true
    source:
      openapi: ../openapi.yaml
  CancellationDetails:
    docs: ''
    properties:
      comment:
        docs: >-
          Additional comments about why the user canceled the subscription, if
          the subscription was canceled explicitly by the user.
        type: optional<string>
        validation:
          maxLength: 5000
      feedback:
        docs: >-
          The customer submitted reason for why they canceled, if the
          subscription was canceled explicitly by the user.
        type: optional<CancellationDetailsFeedback>
      reason:
        docs: Why this subscription was canceled.
        type: optional<CancellationDetailsReason>
    source:
      openapi: ../openapi.yaml
  CancellationDetailsFeedback:
    docs: >-
      The customer submitted reason for why they canceled, if the subscription
      was canceled explicitly by the user.
    enum:
      - customer_service
      - low_quality
      - missing_features
      - other
      - switched_service
      - too_complex
      - too_expensive
      - unused
    inline: true
    source:
      openapi: ../openapi.yaml
  CancellationDetailsReason:
    docs: Why this subscription was canceled.
    enum:
      - cancellation_requested
      - payment_disputed
      - payment_failed
    inline: true
    source:
      openapi: ../openapi.yaml
  Capability:
    docs: >-
      This is an object representing a capability for a Stripe account.


      Related guide: [Account
      capabilities](https://stripe.com/docs/connect/account-capabilities)
    properties:
      account:
        docs: The account for which the capability enables functionality.
        type: CapabilityAccount
      future_requirements:
        type: optional<AccountCapabilityFutureRequirements>
      id:
        docs: The identifier for the capability.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"capability">
      requested:
        docs: Whether the capability has been requested.
        type: boolean
      requested_at:
        docs: >-
          Time at which the capability was requested. Measured in seconds since
          the Unix epoch.
        type: optional<integer>
      requirements:
        type: optional<AccountCapabilityRequirements>
      status:
        docs: The status of the capability.
        type: CapabilityStatus
    source:
      openapi: ../openapi.yaml
  CapabilityAccount:
    discriminated: false
    docs: The account for which the capability enables functionality.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  CapabilityStatus:
    docs: The status of the capability.
    enum:
      - active
      - disabled
      - inactive
      - pending
      - unrequested
    inline: true
    source:
      openapi: ../openapi.yaml
  CapabilityUpdated:
    docs: Occurs whenever a capability has new requirements or a new status.
    properties:
      object:
        type: Capability
    source:
      openapi: ../openapi.yaml
  Card:
    docs: >-
      You can store multiple cards on a customer in order to charge the customer

      later. You can also store multiple debit cards on a recipient in order to

      transfer to those cards later.


      Related guide: [Card payments with
      Sources](https://stripe.com/docs/sources/cards)
    properties:
      account:
        docs: >-
          The account this card belongs to. This attribute will not be in the
          card object if the card belongs to a customer or recipient instead.
          This property is only available for accounts where
          [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts.
        type: optional<CardAccount>
      address_city:
        docs: City/District/Suburb/Town/Village.
        type: optional<string>
        validation:
          maxLength: 5000
      address_country:
        docs: Billing address country, if provided when creating card.
        type: optional<string>
        validation:
          maxLength: 5000
      address_line1:
        docs: Address line 1 (Street address/PO Box/Company name).
        type: optional<string>
        validation:
          maxLength: 5000
      address_line1_check:
        docs: >-
          If `address_line1` was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      address_line2:
        docs: Address line 2 (Apartment/Suite/Unit/Building).
        type: optional<string>
        validation:
          maxLength: 5000
      address_state:
        docs: State/County/Province/Region.
        type: optional<string>
        validation:
          maxLength: 5000
      address_zip:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      address_zip_check:
        docs: >-
          If `address_zip` was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      allow_redisplay:
        docs: >-
          This field indicates whether this payment method can be shown again to
          its customer in a checkout flow. Stripe products such as Checkout and
          Elements use this field to determine whether a payment method can be
          shown as a saved payment method in a checkout flow. The field defaults
          to “unspecified”.
        type: optional<CardAllowRedisplay>
      available_payout_methods:
        docs: >-
          A set of available payout methods for this card. Only values from this
          set should be passed as the `method` when creating a payout.
        type: optional<list<CardAvailablePayoutMethodsItem>>
      brand:
        docs: >-
          Card brand. Can be `American Express`, `Diners Club`, `Discover`,
          `Eftpos Australia`, `Girocard`, `JCB`, `MasterCard`, `UnionPay`,
          `Visa`, or `Unknown`.
        type: string
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      currency:
        docs: >-
          Three-letter [ISO code for
          currency](https://www.iso.org/iso-4217-currency-codes.html) in
          lowercase. Must be a [supported
          currency](https://docs.stripe.com/currencies). Only applicable on
          accounts (not customers or recipients). The card can be used as a
          transfer destination for funds in this currency. This property is only
          available for accounts where
          [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts.
        type: optional<string>
      customer:
        docs: >-
          The customer that this card belongs to. This attribute will not be in
          the card object if the card belongs to an account or recipient
          instead.
        type: optional<CardCustomer>
      cvc_check:
        docs: >-
          If a CVC was provided, results of the check: `pass`, `fail`,
          `unavailable`, or `unchecked`. A result of unchecked indicates that
          CVC was provided but hasn't been checked yet. Checks are typically
          performed when attaching a card to a Customer object, or when creating
          a charge. For more details, see [Check if a card is valid without a
          charge](https://support.stripe.com/questions/check-if-a-card-is-valid-without-a-charge).
        type: optional<string>
        validation:
          maxLength: 5000
      default_for_currency:
        docs: >-
          Whether this card is the default external account for its currency.
          This property is only available for accounts where
          [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
          is `application`, which includes Custom accounts.
        type: optional<boolean>
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      dynamic_last4:
        docs: >-
          (For tokenized numbers only.) The last four digits of the device
          account number.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      name:
        docs: Cardholder name.
        type: optional<string>
        validation:
          maxLength: 5000
      networks:
        type: optional<TokenCardNetworks>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"card">
      regulated_status:
        docs: Status of a card based on the card issuer.
        type: optional<CardRegulatedStatus>
      status:
        docs: >-
          For external accounts that are cards, possible values are `new` and
          `errored`. If a payout fails, the status is set to `errored` and
          [scheduled payouts](https://stripe.com/docs/payouts#payout-schedule)
          are stopped until account details are updated.
        type: optional<string>
        validation:
          maxLength: 5000
      tokenization_method:
        docs: >-
          If the card number is tokenized, this is the method that was used. Can
          be `android_pay` (includes Google Pay), `apple_pay`, `masterpass`,
          `visa_checkout`, or null.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CardAccount:
    discriminated: false
    docs: >-
      The account this card belongs to. This attribute will not be in the card
      object if the card belongs to a customer or recipient instead. This
      property is only available for accounts where
      [controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
      is `application`, which includes Custom accounts.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  CardAllowRedisplay:
    docs: >-
      This field indicates whether this payment method can be shown again to its
      customer in a checkout flow. Stripe products such as Checkout and Elements
      use this field to determine whether a payment method can be shown as a
      saved payment method in a checkout flow. The field defaults to
      “unspecified”.
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  CardAvailablePayoutMethodsItem:
    enum:
      - instant
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  CardCustomer:
    discriminated: false
    docs: >-
      The customer that this card belongs to. This attribute will not be in the
      card object if the card belongs to an account or recipient instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  CardGeneratedFromPaymentMethodDetails:
    docs: ''
    properties:
      card_present:
        type: optional<PaymentMethodDetailsCardPresent>
      type:
        docs: >-
          The type of payment method transaction-specific details from the
          transaction that generated this `card` payment method. Always
          `card_present`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CardIssuingAccountTermsOfService:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the account representative accepted
          the service agreement.
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the account representative accepted the
          service agreement.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the account representative
          accepted the service agreement.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CardMandatePaymentMethodDetails:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  CardRegulatedStatus:
    docs: Status of a card based on the card issuer.
    enum:
      - regulated
      - unregulated
    inline: true
    source:
      openapi: ../openapi.yaml
  CashBalance:
    docs: >-
      A customer's `Cash balance` represents real funds. Customers can add funds
      to their cash balance by sending a bank transfer. These funds can be used
      for payment and can eventually be paid out to your bank account.
    properties:
      available:
        docs: >-
          A hash of all cash balances available to this customer. You cannot
          delete a customer with any cash balances, even if the balance is 0.
          Amounts are represented in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<map<string, optional<integer>>>
      customer:
        docs: The ID of the customer whose cash balance this object represents.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"cash_balance">
      settings:
        type: CustomerBalanceCustomerBalanceSettings
    source:
      openapi: ../openapi.yaml
  CashBalanceFundsAvailable:
    docs: >-
      Occurs whenever there is a positive remaining cash balance after Stripe
      automatically reconciles new funds into the cash balance. If you enabled
      manual reconciliation, this webhook will fire whenever there are new funds
      into the cash balance.
    properties:
      object:
        type: CashBalance
    source:
      openapi: ../openapi.yaml
  Charge:
    docs: >-
      The `Charge` object represents a single attempt to move money into your
      Stripe account.

      PaymentIntent confirmation is the most common way to create Charges, but
      transferring

      money to a different Stripe account through Connect also creates Charges.

      Some legacy payment flows create Charges directly, which is not
      recommended for new integrations.
    properties:
      amount:
        docs: >-
          Amount intended to be collected by this payment. A positive integer
          representing how much to charge in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100
          cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge
          currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of
          99999999 for a USD charge of $999,999.99).
        type: integer
      amount_captured:
        docs: >-
          Amount in cents (or local equivalent) captured (can be less than the
          amount attribute on the charge if a partial capture was made).
        type: integer
      amount_refunded:
        docs: >-
          Amount in cents (or local equivalent) refunded (can be less than the
          amount attribute on the charge if a partial refund was issued).
        type: integer
      application:
        docs: ID of the Connect application that created the charge.
        type: optional<ChargeApplication>
      application_fee:
        docs: >-
          The application fee (if any) for the charge. [See the Connect
          documentation](https://stripe.com/docs/connect/direct-charges#collect-fees)
          for details.
        type: optional<ChargeApplicationFee>
      application_fee_amount:
        docs: >-
          The amount of the application fee (if any) requested for the charge.
          [See the Connect
          documentation](https://stripe.com/docs/connect/direct-charges#collect-fees)
          for details.
        type: optional<integer>
      authorization_code:
        docs: Authorization code on the charge.
        type: optional<string>
        validation:
          maxLength: 5000
      balance_transaction:
        docs: >-
          ID of the balance transaction that describes the impact of this charge
          on your account balance (not including refunds or disputes).
        type: optional<ChargeBalanceTransaction>
      billing_details:
        type: BillingDetails
      calculated_statement_descriptor:
        docs: >-
          The full statement descriptor that is passed to card networks, and
          that is displayed on your customers' credit card and bank statements.
          Allows you to see what the statement descriptor looks like after the
          static and dynamic portions are combined. This value only exists for
          card payments.
        type: optional<string>
        validation:
          maxLength: 5000
      captured:
        docs: >-
          If the charge was created without capturing, this Boolean represents
          whether it is still uncaptured or has since been captured.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: ID of the customer this charge is for if one exists.
        type: optional<ChargeCustomer>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 40000
      disputed:
        docs: Whether the charge has been disputed.
        type: boolean
      failure_balance_transaction:
        docs: >-
          ID of the balance transaction that describes the reversal of the
          balance on your account due to payment failure.
        type: optional<ChargeFailureBalanceTransaction>
      failure_code:
        docs: >-
          Error code explaining reason for charge failure if available (see [the
          errors section](https://stripe.com/docs/error-codes) for a list of
          codes).
        type: optional<string>
        validation:
          maxLength: 5000
      failure_message:
        docs: >-
          Message to user further explaining reason for charge failure if
          available.
        type: optional<string>
        validation:
          maxLength: 5000
      fraud_details:
        docs: Information on fraud assessments for the charge.
        type: optional<ChargeFraudDetails>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: ID of the invoice this charge is for if one exists.
        type: optional<ChargeInvoice>
      level3:
        type: optional<Level3>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"charge">
      on_behalf_of:
        docs: >-
          The account (if any) the charge was made on behalf of without
          triggering an automatic transfer. See the [Connect
          documentation](https://stripe.com/docs/connect/separate-charges-and-transfers)
          for details.
        type: optional<ChargeOnBehalfOf>
      outcome:
        docs: >-
          Details about whether the payment was accepted, and why. See
          [understanding declines](https://stripe.com/docs/declines) for
          details.
        type: optional<ChargeOutcome>
      paid:
        docs: >-
          `true` if the charge succeeded, or was successfully authorized for
          later capture.
        type: boolean
      payment_intent:
        docs: ID of the PaymentIntent associated with this charge, if one exists.
        type: optional<ChargePaymentIntent>
      payment_method:
        docs: ID of the payment method used in this charge.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_method_details:
        docs: Details about the payment method at the time of the transaction.
        type: optional<PaymentMethodDetails>
      radar_options:
        type: optional<RadarRadarOptions>
      receipt_email:
        docs: >-
          This is the email address that the receipt for this charge was sent
          to.
        type: optional<string>
        validation:
          maxLength: 5000
      receipt_number:
        docs: >-
          This is the transaction number that appears on email receipts sent for
          this charge. This attribute will be `null` until a receipt has been
          sent.
        type: optional<string>
        validation:
          maxLength: 5000
      receipt_url:
        docs: >-
          This is the URL to view the receipt for this charge. The receipt is
          kept up-to-date to the latest state of the charge, including any
          refunds. If the charge is for an Invoice, the receipt will be stylized
          as an Invoice receipt.
        type: optional<string>
        validation:
          maxLength: 5000
      refunded:
        docs: >-
          Whether the charge has been fully refunded. If the charge is only
          partially refunded, this attribute will still be false.
        type: boolean
      refunds:
        docs: A list of refunds that have been applied to the charge.
        type: optional<ChargeRefunds>
      review:
        docs: ID of the review associated with this charge if one exists.
        type: optional<ChargeReview>
      shipping:
        docs: Shipping information for the charge.
        type: optional<Shipping>
      source:
        docs: >-
          This is a legacy field that will be removed in the future. It contains
          the Source, Card, or BankAccount object used for the charge. For
          details about the payment method used for this charge, refer to
          `payment_method` or `payment_method_details` instead.
        type: optional<PaymentSource>
      source_transfer:
        docs: >-
          The transfer ID which created this charge. Only present if the charge
          came from another Stripe account. [See the Connect
          documentation](https://docs.stripe.com/connect/destination-charges)
          for details.
        type: optional<ChargeSourceTransfer>
      statement_descriptor:
        docs: >-
          For a non-card charge, text that appears on the customer's statement
          as the statement descriptor. This value overrides the account's
          default statement descriptor. For information about requirements,
          including the 22-character limit, see [the Statement Descriptor
          docs](https://docs.stripe.com/get-started/account/statement-descriptors).


          For a card charge, this value is ignored unless you don't specify a
          `statement_descriptor_suffix`, in which case this value is used as the
          suffix.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_suffix:
        docs: >-
          Provides information about a card charge. Concatenated to the
          account's [statement descriptor
          prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static)
          to form the complete statement descriptor that appears on the
          customer's statement. If the account has no prefix value, the suffix
          is concatenated to the account's statement descriptor.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the payment is either `succeeded`, `pending`, or
          `failed`.
        type: ChargeStatus
      transfer:
        docs: >-
          ID of the transfer to the `destination` account (only applicable if
          the charge was created using the `destination` parameter).
        type: optional<ChargeTransfer>
      transfer_data:
        docs: >-
          An optional dictionary including the account to automatically transfer
          to as part of a destination charge. [See the Connect
          documentation](https://stripe.com/docs/connect/destination-charges)
          for details.
        type: optional<ChargeTransferData>
      transfer_group:
        docs: >-
          A string that identifies this transaction as part of a group. See the
          [Connect
          documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
          for details.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ChargeApplication:
    discriminated: false
    docs: ID of the Connect application that created the charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  ChargeApplicationFee:
    discriminated: false
    docs: >-
      The application fee (if any) for the charge. [See the Connect
      documentation](https://stripe.com/docs/connect/direct-charges#collect-fees)
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ApplicationFee
  ChargeBalanceTransaction:
    discriminated: false
    docs: >-
      ID of the balance transaction that describes the impact of this charge on
      your account balance (not including refunds or disputes).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  ChargeCaptured:
    docs: Occurs whenever a previously uncaptured charge is captured.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeCustomer:
    discriminated: false
    docs: ID of the customer this charge is for if one exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  ChargeDisputeClosed:
    docs: >-
      Occurs when a dispute is closed and the dispute status changes to `lost`,
      `warning_closed`, or `won`.
    properties:
      object:
        type: Dispute
    source:
      openapi: ../openapi.yaml
  ChargeDisputeCreated:
    docs: Occurs whenever a customer disputes a charge with their bank.
    properties:
      object:
        type: Dispute
    source:
      openapi: ../openapi.yaml
  ChargeDisputeFundsReinstated:
    docs: >-
      Occurs when funds are reinstated to your account after a dispute is
      closed. This includes [partially refunded
      payments](https://docs.stripe.com/disputes#disputes-on-partially-refunded-payments).
    properties:
      object:
        type: Dispute
    source:
      openapi: ../openapi.yaml
  ChargeDisputeFundsWithdrawn:
    docs: Occurs when funds are removed from your account due to a dispute.
    properties:
      object:
        type: Dispute
    source:
      openapi: ../openapi.yaml
  ChargeDisputeUpdated:
    docs: Occurs when the dispute is updated (usually with evidence).
    properties:
      object:
        type: Dispute
    source:
      openapi: ../openapi.yaml
  ChargeExpired:
    docs: Occurs whenever an uncaptured charge expires.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeFailed:
    docs: Occurs whenever a failed charge attempt occurs.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeFailureBalanceTransaction:
    discriminated: false
    docs: >-
      ID of the balance transaction that describes the reversal of the balance
      on your account due to payment failure.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  ChargeFraudDetails:
    docs: ''
    properties:
      stripe_report:
        docs: Assessments from Stripe. If set, the value is `fraudulent`.
        type: optional<string>
        validation:
          maxLength: 5000
      user_report:
        docs: >-
          Assessments reported by you. If set, possible values of are `safe` and
          `fraudulent`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ChargeInvoice:
    discriminated: false
    docs: ID of the invoice this charge is for if one exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  ChargeOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) the charge was made on behalf of without triggering
      an automatic transfer. See the [Connect
      documentation](https://stripe.com/docs/connect/separate-charges-and-transfers)
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  ChargeOutcome:
    docs: ''
    properties:
      advice_code:
        docs: >-
          An enumerated value providing a more detailed explanation on [how to
          proceed with an
          error](https://stripe.com/docs/declines#retrying-issuer-declines).
        type: optional<ChargeOutcomeAdviceCode>
      network_advice_code:
        docs: >-
          For charges declined by the network, a 2 digit code which indicates
          the advice returned by the network on how to proceed with an error.
        type: optional<string>
        validation:
          maxLength: 5000
      network_decline_code:
        docs: >-
          For charges declined by the network, a brand specific 2, 3, or 4 digit
          code which indicates the reason the authorization failed.
        type: optional<string>
        validation:
          maxLength: 5000
      network_status:
        docs: >-
          Possible values are `approved_by_network`, `declined_by_network`,
          `not_sent_to_network`, and `reversed_after_approval`. The value
          `reversed_after_approval` indicates the payment was [blocked by
          Stripe](https://stripe.com/docs/declines#blocked-payments) after bank
          authorization, and may temporarily appear as "pending" on a
          cardholder's statement.
        type: optional<string>
        validation:
          maxLength: 5000
      reason:
        docs: >-
          An enumerated value providing a more detailed explanation of the
          outcome's `type`. Charges blocked by Radar's default block rule have
          the value `highest_risk_level`. Charges placed in review by Radar's
          default review rule have the value `elevated_risk_level`. Charges
          authorized, blocked, or placed in review by custom rules have the
          value `rule`. See [understanding
          declines](https://stripe.com/docs/declines) for more details.
        type: optional<string>
        validation:
          maxLength: 5000
      risk_level:
        docs: >-
          Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are `normal`, `elevated`, `highest`. For
          non-card payments, and card-based payments predating the public
          assignment of risk levels, this field will have the value
          `not_assessed`. In the event of an error in the evaluation, this field
          will have the value `unknown`. This field is only available with
          Radar.
        type: optional<string>
        validation:
          maxLength: 5000
      risk_score:
        docs: >-
          Stripe Radar's evaluation of the riskiness of the payment. Possible
          values for evaluated payments are between 0 and 100. For non-card
          payments, card-based payments predating the public assignment of risk
          scores, or in the event of an error during evaluation, this field will
          not be present. This field is only available with Radar for Fraud
          Teams.
        type: optional<integer>
      rule:
        docs: The ID of the Radar rule that matched the payment, if applicable.
        type: optional<ChargeOutcomeRule>
      seller_message:
        docs: >-
          A human-readable description of the outcome type and reason, designed
          for you (the recipient of the payment), not your customer.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: >-
          Possible values are `authorized`, `manual_review`, `issuer_declined`,
          `blocked`, and `invalid`. See [understanding
          declines](https://stripe.com/docs/declines) and [Radar
          reviews](https://stripe.com/docs/radar/reviews) for details.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ChargeOutcomeAdviceCode:
    docs: >-
      An enumerated value providing a more detailed explanation on [how to
      proceed with an
      error](https://stripe.com/docs/declines#retrying-issuer-declines).
    enum:
      - confirm_card_data
      - do_not_try_again
      - try_again_later
    inline: true
    source:
      openapi: ../openapi.yaml
  ChargeOutcomeRule:
    discriminated: false
    docs: The ID of the Radar rule that matched the payment, if applicable.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Rule
  ChargePaymentIntent:
    discriminated: false
    docs: ID of the PaymentIntent associated with this charge, if one exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  ChargePending:
    docs: Occurs whenever a pending charge is created.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeRefunded:
    docs: >-
      Occurs whenever a charge is refunded, including partial refunds. Listen to
      `refund.created` for information about the refund.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeRefunds:
    docs: A list of refunds that have been applied to the charge.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Refund>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ChargeRefundUpdated:
    docs: >-
      Occurs whenever a refund is updated on selected payment methods. For
      updates on all refunds, listen to `refund.updated` instead.
    properties:
      object:
        type: Refund
    source:
      openapi: ../openapi.yaml
  ChargeReview:
    discriminated: false
    docs: ID of the review associated with this charge if one exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Review
  ChargeSourceTransfer:
    discriminated: false
    docs: >-
      The transfer ID which created this charge. Only present if the charge came
      from another Stripe account. [See the Connect
      documentation](https://docs.stripe.com/connect/destination-charges) for
      details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Transfer
  ChargeStatus:
    docs: The status of the payment is either `succeeded`, `pending`, or `failed`.
    enum:
      - failed
      - pending
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  ChargeSucceeded:
    docs: Occurs whenever a charge is successful.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  ChargeTransfer:
    discriminated: false
    docs: >-
      ID of the transfer to the `destination` account (only applicable if the
      charge was created using the `destination` parameter).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Transfer
  ChargeTransferData:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount transferred to the destination account, if specified. By
          default, the entire charge amount is transferred to the destination
          account.
        type: optional<integer>
      destination:
        docs: >-
          ID of an existing, connected Stripe account to transfer funds to if
          `transfer_data` was specified in the charge request.
        type: ChargeTransferDataDestination
    source:
      openapi: ../openapi.yaml
  ChargeTransferDataDestination:
    discriminated: false
    docs: >-
      ID of an existing, connected Stripe account to transfer funds to if
      `transfer_data` was specified in the charge request.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  ChargeUpdated:
    docs: >-
      Occurs whenever a charge description or metadata is updated, or upon an
      asynchronous capture.
    properties:
      object:
        type: Charge
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitMandateOptions:
    docs: ''
    properties:
      custom_mandate_url:
        docs: A URL for custom mandate text
        type: optional<string>
        validation:
          maxLength: 5000
      default_for:
        docs: >-
          List of Stripe products where this mandate can be selected
          automatically. Returned when the Session is in `setup` mode.
        type: optional<list<CheckoutAcssDebitMandateOptionsDefaultForItem>>
      interval_description:
        docs: >-
          Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_schedule:
        docs: Payment schedule for the mandate.
        type: optional<CheckoutAcssDebitMandateOptionsPaymentSchedule>
      transaction_type:
        docs: Transaction type of the mandate.
        type: optional<CheckoutAcssDebitMandateOptionsTransactionType>
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitMandateOptionsDefaultForItem:
    enum:
      - invoice
      - subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitMandateOptionsPaymentSchedule:
    docs: Payment schedule for the mandate.
    enum:
      - combined
      - interval
      - sporadic
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitMandateOptionsTransactionType:
    docs: Transaction type of the mandate.
    enum:
      - business
      - personal
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitPaymentMethodOptions:
    docs: ''
    properties:
      currency:
        docs: >-
          Currency supported by the bank account. Returned when the Session is
          in `setup` mode.
        type: optional<CheckoutAcssDebitPaymentMethodOptionsCurrency>
      mandate_options:
        type: optional<CheckoutAcssDebitMandateOptions>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutAcssDebitPaymentMethodOptionsSetupFutureUsage>
      verification_method:
        docs: Bank account verification method.
        type: optional<CheckoutAcssDebitPaymentMethodOptionsVerificationMethod>
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitPaymentMethodOptionsCurrency:
    docs: >-
      Currency supported by the bank account. Returned when the Session is in
      `setup` mode.
    enum:
      - cad
      - usd
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAcssDebitPaymentMethodOptionsVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAffirmPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutAfterpayClearpayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutAlipayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutAmazonPayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutAmazonPayPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutAmazonPayPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutAuBecsDebitPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutBacsDebitPaymentMethodOptions:
    docs: ''
    properties:
      mandate_options:
        type: optional<CheckoutPaymentMethodOptionsMandateOptionsBacsDebit>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutBacsDebitPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutBacsDebitPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutBancontactPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutBoletoPaymentMethodOptions:
    docs: ''
    properties:
      expires_after_days:
        docs: >-
          The number of calendar days before a Boleto voucher expires. For
          example, if you create a Boleto voucher on Monday and you set
          expires_after_days to 2, the Boleto voucher will expire on Wednesday
          at 23:59 America/Sao_Paulo time.
        type: integer
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutBoletoPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutBoletoPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardInstallmentsOptions:
    docs: ''
    properties:
      enabled:
        docs: Indicates if installments are enabled
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptions:
    docs: ''
    properties:
      installments:
        type: optional<CheckoutCardInstallmentsOptions>
      request_extended_authorization:
        docs: >-
          Request ability to [capture beyond the standard authorization validity
          window](/payments/extended-authorization) for this CheckoutSession.
        type: optional<CheckoutCardPaymentMethodOptionsRequestExtendedAuthorization>
      request_incremental_authorization:
        docs: >-
          Request ability to [increment the
          authorization](/payments/incremental-authorization) for this
          CheckoutSession.
        type: >-
          optional<CheckoutCardPaymentMethodOptionsRequestIncrementalAuthorization>
      request_multicapture:
        docs: >-
          Request ability to make [multiple captures](/payments/multicapture)
          for this CheckoutSession.
        type: optional<CheckoutCardPaymentMethodOptionsRequestMulticapture>
      request_overcapture:
        docs: >-
          Request ability to [overcapture](/payments/overcapture) for this
          CheckoutSession.
        type: optional<CheckoutCardPaymentMethodOptionsRequestOvercapture>
      request_three_d_secure:
        docs: >-
          We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and
          [other
          requirements](https://stripe.com/docs/strong-customer-authentication).
          However, if you wish to request 3D Secure based on logic from your own
          fraud engine, provide this option. If not provided, this value
          defaults to `automatic`. Read our guide on [manually requesting 3D
          Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar
          and our SCA Engine.
        type: CheckoutCardPaymentMethodOptionsRequestThreeDSecure
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutCardPaymentMethodOptionsSetupFutureUsage>
      statement_descriptor_suffix_kana:
        docs: >-
          Provides information about a card payment that customers see on their
          statements. Concatenated with the Kana prefix (shortened Kana
          descriptor) or Kana statement descriptor that’s set on the account to
          form the complete statement descriptor. Maximum 22 characters. On card
          statements, the *concatenation* of both prefix and suffix (including
          separators) will appear truncated to 22 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_suffix_kanji:
        docs: >-
          Provides information about a card payment that customers see on their
          statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that’s set on the account to
          form the complete statement descriptor. Maximum 17 characters. On card
          statements, the *concatenation* of both prefix and suffix (including
          separators) will appear truncated to 17 characters.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsRequestExtendedAuthorization:
    docs: >-
      Request ability to [capture beyond the standard authorization validity
      window](/payments/extended-authorization) for this CheckoutSession.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsRequestIncrementalAuthorization:
    docs: >-
      Request ability to [increment the
      authorization](/payments/incremental-authorization) for this
      CheckoutSession.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsRequestMulticapture:
    docs: >-
      Request ability to make [multiple captures](/payments/multicapture) for
      this CheckoutSession.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsRequestOvercapture:
    docs: >-
      Request ability to [overcapture](/payments/overcapture) for this
      CheckoutSession.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsRequestThreeDSecure:
    docs: >-
      We strongly recommend that you rely on our SCA Engine to automatically
      prompt your customers for authentication based on risk level and [other
      requirements](https://stripe.com/docs/strong-customer-authentication).
      However, if you wish to request 3D Secure based on logic from your own
      fraud engine, provide this option. If not provided, this value defaults to
      `automatic`. Read our guide on [manually requesting 3D
      Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
      for more information on how this configuration interacts with Radar and
      our SCA Engine.
    enum:
      - any
      - automatic
      - challenge
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCardPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCashappPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutCustomerBalanceBankTransferPaymentMethodOptions:
    docs: ''
    properties:
      eu_bank_transfer:
        type: optional<PaymentMethodOptionsCustomerBalanceEuBankAccount>
      requested_address_types:
        docs: >-
          List of address types that should be returned in the
          financial_addresses response. If not specified, all valid types will
          be returned.


          Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
        type: >-
          optional<list<CheckoutCustomerBalanceBankTransferPaymentMethodOptionsRequestedAddressTypesItem>>
      type:
        docs: >-
          The bank transfer type that this PaymentIntent is allowed to use for
          funding Permitted values include: `eu_bank_transfer`,
          `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or
          `us_bank_transfer`.
        type: optional<CheckoutCustomerBalanceBankTransferPaymentMethodOptionsType>
    source:
      openapi: ../openapi.yaml
  CheckoutCustomerBalanceBankTransferPaymentMethodOptionsRequestedAddressTypesItem:
    enum:
      - aba
      - iban
      - sepa
      - sort_code
      - spei
      - swift
      - zengin
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCustomerBalanceBankTransferPaymentMethodOptionsType:
    docs: >-
      The bank transfer type that this PaymentIntent is allowed to use for
      funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`,
      `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    enum:
      - eu_bank_transfer
      - gb_bank_transfer
      - jp_bank_transfer
      - mx_bank_transfer
      - us_bank_transfer
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutCustomerBalancePaymentMethodOptions:
    docs: ''
    properties:
      bank_transfer:
        type: optional<CheckoutCustomerBalanceBankTransferPaymentMethodOptions>
      funding_type:
        docs: >-
          The funding method type to be used when there are not enough funds in
          the customer balance. Permitted values include: `bank_transfer`.
        type: optional<literal<"bank_transfer">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutEpsPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutFpxPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutGiropayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutGrabPayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutIdealPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutKakaoPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutKakaoPayPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutKakaoPayPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutKlarnaPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutKlarnaPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutKlarnaPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutKonbiniPaymentMethodOptions:
    docs: ''
    properties:
      expires_after_days:
        docs: >-
          The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is
          confirmed with Konbini and `expires_after_days` set to 2 on Monday
          JST, the instructions will expire on Wednesday 23:59:59 JST.
        type: optional<integer>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutKrCardPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutKrCardPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutKrCardPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutLinkPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutLinkPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutLinkPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutMobilepayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutMultibancoPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutNaverPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  CheckoutOxxoPaymentMethodOptions:
    docs: ''
    properties:
      expires_after_days:
        docs: >-
          The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set
          expires_after_days to 2, the OXXO invoice will expire on Wednesday at
          23:59 America/Mexico_City time.
        type: integer
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutP24PaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutPaycoPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  CheckoutPaymentMethodOptionsMandateOptionsBacsDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'DDIC' or 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutPaymentMethodOptionsMandateOptionsSepaDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutPaynowPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutPaypalPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      preferred_locale:
        docs: >-
          Preferred locale of the PayPal checkout page that the customer is
          redirected to.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: >-
          A reference of the PayPal transaction visible to customer which is
          mapped to PayPal's invoice ID. This must be a globally unique ID if
          you have configured in your PayPal settings to block multiple payments
          per invoice ID.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutPaypalPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutPaypalPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutPixPaymentMethodOptions:
    docs: ''
    properties:
      expires_after_seconds:
        docs: The number of seconds after which Pix payment will expire.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  CheckoutRevolutPayPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutRevolutPayPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutRevolutPayPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSamsungPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  CheckoutSepaDebitPaymentMethodOptions:
    docs: ''
    properties:
      mandate_options:
        type: optional<CheckoutPaymentMethodOptionsMandateOptionsSepaDebit>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutSepaDebitPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  CheckoutSepaDebitPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSession:
    docs: >-
      A Checkout Session represents your customer's session as they pay for

      one-time purchases or subscriptions through
      [Checkout](https://stripe.com/docs/payments/checkout)

      or [Payment Links](https://stripe.com/docs/payments/payment-links). We
      recommend creating a

      new Session each time your customer attempts to pay.


      Once payment is successful, the Checkout Session will contain a reference

      to the [Customer](https://stripe.com/docs/api/customers), and either the
      successful

      [PaymentIntent](https://stripe.com/docs/api/payment_intents) or an active

      [Subscription](https://stripe.com/docs/api/subscriptions).


      You can create a Checkout Session on your server and redirect to its URL

      to begin Checkout.


      Related guide: [Checkout
      quickstart](https://stripe.com/docs/checkout/quickstart)
    properties:
      adaptive_pricing:
        docs: >-
          Settings for price localization with [Adaptive
          Pricing](https://docs.stripe.com/payments/checkout/adaptive-pricing).
        type: optional<PaymentPagesCheckoutSessionAdaptivePricing>
      after_expiration:
        docs: >-
          When set, provides configuration for actions to take if this Checkout
          Session expires.
        type: optional<PaymentPagesCheckoutSessionAfterExpiration>
      allow_promotion_codes:
        docs: Enables user redeemable promotion codes.
        type: optional<boolean>
      amount_subtotal:
        docs: Total of all items before discounts or taxes are applied.
        type: optional<integer>
      amount_total:
        docs: Total of all items after discounts and taxes are applied.
        type: optional<integer>
      automatic_tax:
        type: PaymentPagesCheckoutSessionAutomaticTax
      billing_address_collection:
        docs: >-
          Describes whether Checkout should collect the customer's billing
          address. Defaults to `auto`.
        type: optional<CheckoutSessionBillingAddressCollection>
      cancel_url:
        docs: >-
          If set, Checkout displays a back button and customers will be directed
          to this URL if they decide to cancel payment and return to your
          website.
        type: optional<string>
        validation:
          maxLength: 5000
      client_reference_id:
        docs: |-
          A unique string to reference the Checkout Session. This can be a
          customer ID, a cart ID, or similar, and can be used to reconcile the
          Session with your internal systems.
        type: optional<string>
        validation:
          maxLength: 5000
      client_secret:
        docs: >-
          Client secret to be used when initializing Stripe.js embedded
          checkout.
        type: optional<string>
        validation:
          maxLength: 5000
      consent:
        docs: Results of `consent_collection` for this session.
        type: optional<PaymentPagesCheckoutSessionConsent>
      consent_collection:
        docs: >-
          When set, provides configuration for the Checkout Session to gather
          active consent from customers.
        type: optional<PaymentPagesCheckoutSessionConsentCollection>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: optional<string>
      currency_conversion:
        docs: >-
          Currency conversion details for [Adaptive
          Pricing](https://docs.stripe.com/payments/checkout/adaptive-pricing)
          sessions
        type: optional<PaymentPagesCheckoutSessionCurrencyConversion>
      custom_fields:
        docs: >-
          Collect additional information from your customer using custom fields.
          Up to 3 fields are supported.
        type: list<PaymentPagesCheckoutSessionCustomFields>
      custom_text:
        type: PaymentPagesCheckoutSessionCustomText
      customer:
        docs: >-
          The ID of the customer for this Session.

          For Checkout Sessions in `subscription` mode or Checkout Sessions with
          `customer_creation` set as `always` in `payment` mode, Checkout

          will create a new customer object based on information provided

          during the payment flow unless an existing customer was provided when

          the Session was created.
        type: optional<CheckoutSessionCustomer>
      customer_creation:
        docs: >-
          Configure whether a Checkout Session creates a Customer when the
          Checkout Session completes.
        type: optional<CheckoutSessionCustomerCreation>
      customer_details:
        docs: >-
          The customer details including the customer's tax exempt status and
          the customer's tax IDs. Customer's address details are not present on
          Sessions in `setup` mode.
        type: optional<PaymentPagesCheckoutSessionCustomerDetails>
      customer_email:
        docs: >-
          If provided, this value will be used when the Customer object is
          created.

          If not provided, customers will be asked to enter their email address.

          Use this parameter to prefill customer data if you already have an
          email

          on file. To access information about the customer once the payment
          flow is

          complete, use the `customer` attribute.
        type: optional<string>
        validation:
          maxLength: 5000
      discounts:
        docs: List of coupons and promotion codes attached to the Checkout Session.
        type: optional<list<PaymentPagesCheckoutSessionDiscount>>
      expires_at:
        docs: The timestamp at which the Checkout Session will expire.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: ID of the invoice created by the Checkout Session, if it exists.
        type: optional<CheckoutSessionInvoice>
      invoice_creation:
        docs: Details on the state of invoice creation for the Checkout Session.
        type: optional<PaymentPagesCheckoutSessionInvoiceCreation>
      line_items:
        docs: The line items purchased by the customer.
        type: optional<CheckoutSessionLineItems>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      locale:
        docs: >-
          The IETF language tag of the locale Checkout is displayed in. If blank
          or `auto`, the browser's locale is used.
        type: optional<CheckoutSessionLocale>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      mode:
        docs: The mode of the Checkout Session.
        type: CheckoutSessionMode
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"checkout.session">
      payment_intent:
        docs: >-
          The ID of the PaymentIntent for Checkout Sessions in `payment` mode.
          You can't confirm or cancel the PaymentIntent for a Checkout Session.
          To cancel, [expire the Checkout
          Session](https://stripe.com/docs/api/checkout/sessions/expire)
          instead.
        type: optional<CheckoutSessionPaymentIntent>
      payment_link:
        docs: The ID of the Payment Link that created this Session.
        type: optional<CheckoutSessionPaymentLink>
      payment_method_collection:
        docs: >-
          Configure whether a Checkout Session should collect a payment method.
          Defaults to `always`.
        type: optional<CheckoutSessionPaymentMethodCollection>
      payment_method_configuration_details:
        docs: >-
          Information about the payment method configuration used for this
          Checkout session if using dynamic payment methods.
        type: optional<PaymentMethodConfigBizPaymentMethodConfigurationDetails>
      payment_method_options:
        docs: >-
          Payment-method-specific configuration for the PaymentIntent or
          SetupIntent of this CheckoutSession.
        type: optional<CheckoutSessionPaymentMethodOptions>
      payment_method_types:
        docs: |-
          A list of the types of payment methods (e.g. card) this Checkout
          Session is allowed to accept.
        type: list<string>
      payment_status:
        docs: >-
          The payment status of the Checkout Session, one of `paid`, `unpaid`,
          or `no_payment_required`.

          You can use this value to decide when to fulfill your customer's
          order.
        type: CheckoutSessionPaymentStatus
      phone_number_collection:
        type: optional<PaymentPagesCheckoutSessionPhoneNumberCollection>
      recovered_from:
        docs: >-
          The ID of the original expired Checkout Session that triggered the
          recovery flow.
        type: optional<string>
        validation:
          maxLength: 5000
      redirect_on_completion:
        docs: >-
          This parameter applies to `ui_mode: embedded`. Learn more about the
          [redirect
          behavior](https://stripe.com/docs/payments/checkout/custom-success-page?payment-ui=embedded-form)
          of embedded sessions. Defaults to `always`.
        type: optional<CheckoutSessionRedirectOnCompletion>
      return_url:
        docs: >-
          Applies to Checkout Sessions with `ui_mode: embedded`. The URL to
          redirect your customer back to after they authenticate or cancel their
          payment on the payment method's app or site.
        type: optional<string>
        validation:
          maxLength: 5000
      saved_payment_method_options:
        docs: >-
          Controls saved payment method settings for the session. Only available
          in `payment` and `subscription` mode.
        type: optional<PaymentPagesCheckoutSessionSavedPaymentMethodOptions>
      setup_intent:
        docs: >-
          The ID of the SetupIntent for Checkout Sessions in `setup` mode. You
          can't confirm or cancel the SetupIntent for a Checkout Session. To
          cancel, [expire the Checkout
          Session](https://stripe.com/docs/api/checkout/sessions/expire)
          instead.
        type: optional<CheckoutSessionSetupIntent>
      shipping_address_collection:
        docs: >-
          When set, provides configuration for Checkout to collect a shipping
          address from a customer.
        type: optional<PaymentPagesCheckoutSessionShippingAddressCollection>
      shipping_cost:
        docs: >-
          The details of the customer cost of shipping, including the customer
          chosen ShippingRate.
        type: optional<PaymentPagesCheckoutSessionShippingCost>
      shipping_details:
        docs: Shipping information for this Checkout Session.
        type: optional<Shipping>
      shipping_options:
        docs: The shipping rate options applied to this Session.
        type: list<PaymentPagesCheckoutSessionShippingOption>
      status:
        docs: >-
          The status of the Checkout Session, one of `open`, `complete`, or
          `expired`.
        type: optional<CheckoutSessionStatus>
      submit_type:
        docs: >-
          Describes the type of transaction being performed by Checkout in order
          to customize

          relevant text on the page, such as the submit button. `submit_type`
          can only be

          specified on Checkout Sessions in `payment` mode. If blank or `auto`,
          `pay` is used.
        type: optional<CheckoutSessionSubmitType>
      subscription:
        docs: >-
          The ID of the subscription for Checkout Sessions in `subscription`
          mode.
        type: optional<CheckoutSessionSubscription>
      success_url:
        docs: |-
          The URL the customer will be directed to after the payment or
          subscription creation is successful.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_id_collection:
        type: optional<PaymentPagesCheckoutSessionTaxIdCollection>
      total_details:
        docs: Tax and discount details for the computed total amount.
        type: optional<PaymentPagesCheckoutSessionTotalDetails>
      ui_mode:
        docs: The UI mode of the Session. Defaults to `hosted`.
        type: optional<CheckoutSessionUiMode>
      url:
        docs: >-
          The URL to the Checkout Session. Redirect customers to this URL to
          take them to Checkout. If you’re using [Custom
          Domains](https://stripe.com/docs/payments/checkout/custom-domains),
          the URL will use your subdomain. Otherwise, it’ll use
          `checkout.stripe.com.`

          This value is only present when the session is active.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutSessionAsyncPaymentFailed:
    docs: Occurs when a payment intent using a delayed payment method fails.
    properties:
      object:
        type: CheckoutSession
    source:
      openapi: ../openapi.yaml
  CheckoutSessionAsyncPaymentSucceeded:
    docs: >-
      Occurs when a payment intent using a delayed payment method finally
      succeeds.
    properties:
      object:
        type: CheckoutSession
    source:
      openapi: ../openapi.yaml
  CheckoutSessionBillingAddressCollection:
    docs: >-
      Describes whether Checkout should collect the customer's billing address.
      Defaults to `auto`.
    enum:
      - auto
      - required
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionCompleted:
    docs: Occurs when a Checkout Session has been successfully completed.
    properties:
      object:
        type: CheckoutSession
    source:
      openapi: ../openapi.yaml
  CheckoutSessionCustomer:
    discriminated: false
    docs: >-
      The ID of the customer for this Session.

      For Checkout Sessions in `subscription` mode or Checkout Sessions with
      `customer_creation` set as `always` in `payment` mode, Checkout

      will create a new customer object based on information provided

      during the payment flow unless an existing customer was provided when

      the Session was created.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  CheckoutSessionCustomerCreation:
    docs: >-
      Configure whether a Checkout Session creates a Customer when the Checkout
      Session completes.
    enum:
      - always
      - if_required
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionExpired:
    docs: Occurs when a Checkout Session is expired.
    properties:
      object:
        type: CheckoutSession
    source:
      openapi: ../openapi.yaml
  CheckoutSessionInvoice:
    discriminated: false
    docs: ID of the invoice created by the Checkout Session, if it exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  CheckoutSessionLineItems:
    docs: The line items purchased by the customer.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Item>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutSessionLocale:
    docs: >-
      The IETF language tag of the locale Checkout is displayed in. If blank or
      `auto`, the browser's locale is used.
    enum:
      - auto
      - bg
      - cs
      - da
      - de
      - el
      - en
      - name: EnGb
        value: en-GB
      - es
      - name: Es419
        value: es-419
      - et
      - fi
      - fil
      - fr
      - name: FrCa
        value: fr-CA
      - hr
      - hu
      - id
      - it
      - ja
      - ko
      - lt
      - lv
      - ms
      - mt
      - nb
      - nl
      - pl
      - pt
      - name: PtBr
        value: pt-BR
      - ro
      - ru
      - sk
      - sl
      - sv
      - th
      - tr
      - vi
      - zh
      - name: ZhHk
        value: zh-HK
      - name: ZhTw
        value: zh-TW
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionMode:
    docs: The mode of the Checkout Session.
    enum:
      - payment
      - setup
      - subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionPaymentIntent:
    discriminated: false
    docs: >-
      The ID of the PaymentIntent for Checkout Sessions in `payment` mode. You
      can't confirm or cancel the PaymentIntent for a Checkout Session. To
      cancel, [expire the Checkout
      Session](https://stripe.com/docs/api/checkout/sessions/expire) instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  CheckoutSessionPaymentLink:
    discriminated: false
    docs: The ID of the Payment Link that created this Session.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentLink
  CheckoutSessionPaymentMethodCollection:
    docs: >-
      Configure whether a Checkout Session should collect a payment method.
      Defaults to `always`.
    enum:
      - always
      - if_required
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionPaymentMethodOptions:
    docs: ''
    properties:
      acss_debit:
        type: optional<CheckoutAcssDebitPaymentMethodOptions>
      affirm:
        type: optional<CheckoutAffirmPaymentMethodOptions>
      afterpay_clearpay:
        type: optional<CheckoutAfterpayClearpayPaymentMethodOptions>
      alipay:
        type: optional<CheckoutAlipayPaymentMethodOptions>
      amazon_pay:
        type: optional<CheckoutAmazonPayPaymentMethodOptions>
      au_becs_debit:
        type: optional<CheckoutAuBecsDebitPaymentMethodOptions>
      bacs_debit:
        type: optional<CheckoutBacsDebitPaymentMethodOptions>
      bancontact:
        type: optional<CheckoutBancontactPaymentMethodOptions>
      boleto:
        type: optional<CheckoutBoletoPaymentMethodOptions>
      card:
        type: optional<CheckoutCardPaymentMethodOptions>
      cashapp:
        type: optional<CheckoutCashappPaymentMethodOptions>
      customer_balance:
        type: optional<CheckoutCustomerBalancePaymentMethodOptions>
      eps:
        type: optional<CheckoutEpsPaymentMethodOptions>
      fpx:
        type: optional<CheckoutFpxPaymentMethodOptions>
      giropay:
        type: optional<CheckoutGiropayPaymentMethodOptions>
      grabpay:
        type: optional<CheckoutGrabPayPaymentMethodOptions>
      ideal:
        type: optional<CheckoutIdealPaymentMethodOptions>
      kakao_pay:
        type: optional<CheckoutKakaoPayPaymentMethodOptions>
      klarna:
        type: optional<CheckoutKlarnaPaymentMethodOptions>
      konbini:
        type: optional<CheckoutKonbiniPaymentMethodOptions>
      kr_card:
        type: optional<CheckoutKrCardPaymentMethodOptions>
      link:
        type: optional<CheckoutLinkPaymentMethodOptions>
      mobilepay:
        type: optional<CheckoutMobilepayPaymentMethodOptions>
      multibanco:
        type: optional<CheckoutMultibancoPaymentMethodOptions>
      naver_pay:
        type: optional<CheckoutNaverPayPaymentMethodOptions>
      oxxo:
        type: optional<CheckoutOxxoPaymentMethodOptions>
      p24:
        type: optional<CheckoutP24PaymentMethodOptions>
      payco:
        type: optional<CheckoutPaycoPaymentMethodOptions>
      paynow:
        type: optional<CheckoutPaynowPaymentMethodOptions>
      paypal:
        type: optional<CheckoutPaypalPaymentMethodOptions>
      pix:
        type: optional<CheckoutPixPaymentMethodOptions>
      revolut_pay:
        type: optional<CheckoutRevolutPayPaymentMethodOptions>
      samsung_pay:
        type: optional<CheckoutSamsungPayPaymentMethodOptions>
      sepa_debit:
        type: optional<CheckoutSepaDebitPaymentMethodOptions>
      sofort:
        type: optional<CheckoutSofortPaymentMethodOptions>
      swish:
        type: optional<CheckoutSwishPaymentMethodOptions>
      us_bank_account:
        type: optional<CheckoutUsBankAccountPaymentMethodOptions>
    source:
      openapi: ../openapi.yaml
  CheckoutSessionPaymentStatus:
    docs: >-
      The payment status of the Checkout Session, one of `paid`, `unpaid`, or
      `no_payment_required`.

      You can use this value to decide when to fulfill your customer's order.
    enum:
      - no_payment_required
      - paid
      - unpaid
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionRedirectOnCompletion:
    docs: >-
      This parameter applies to `ui_mode: embedded`. Learn more about the
      [redirect
      behavior](https://stripe.com/docs/payments/checkout/custom-success-page?payment-ui=embedded-form)
      of embedded sessions. Defaults to `always`.
    enum:
      - always
      - if_required
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionSetupIntent:
    discriminated: false
    docs: >-
      The ID of the SetupIntent for Checkout Sessions in `setup` mode. You can't
      confirm or cancel the SetupIntent for a Checkout Session. To cancel,
      [expire the Checkout
      Session](https://stripe.com/docs/api/checkout/sessions/expire) instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupIntent
  CheckoutSessionStatus:
    docs: >-
      The status of the Checkout Session, one of `open`, `complete`, or
      `expired`.
    enum:
      - complete
      - expired
      - open
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionSubmitType:
    docs: >-
      Describes the type of transaction being performed by Checkout in order to
      customize

      relevant text on the page, such as the submit button. `submit_type` can
      only be

      specified on Checkout Sessions in `payment` mode. If blank or `auto`,
      `pay` is used.
    enum:
      - auto
      - book
      - donate
      - pay
      - subscribe
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSessionSubscription:
    discriminated: false
    docs: The ID of the subscription for Checkout Sessions in `subscription` mode.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  CheckoutSessionUiMode:
    docs: The UI mode of the Session. Defaults to `hosted`.
    enum:
      - embedded
      - hosted
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutSofortPaymentMethodOptions:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  CheckoutSwishPaymentMethodOptions:
    docs: ''
    properties:
      reference:
        docs: >-
          The order reference that will be displayed to customers in the Swish
          application. Defaults to the `id` of the Payment Intent.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CheckoutUsBankAccountPaymentMethodOptions:
    docs: ''
    properties:
      financial_connections:
        type: optional<LinkedAccountOptionsUsBankAccount>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<CheckoutUsBankAccountPaymentMethodOptionsSetupFutureUsage>
      verification_method:
        docs: Bank account verification method.
        type: optional<CheckoutUsBankAccountPaymentMethodOptionsVerificationMethod>
    source:
      openapi: ../openapi.yaml
  CheckoutUsBankAccountPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CheckoutUsBankAccountPaymentMethodOptionsVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
    inline: true
    source:
      openapi: ../openapi.yaml
  ClimateOrder:
    docs: >-
      Orders represent your intent to purchase a particular Climate product.
      When you create an order, the

      payment is deducted from your merchant balance.
    properties:
      amount_fees:
        docs: >-
          Total amount of [Frontier](https://frontierclimate.com/)'s service
          fees in the currency's smallest unit.
        type: integer
      amount_subtotal:
        docs: Total amount of the carbon removal in the currency's smallest unit.
        type: integer
      amount_total:
        docs: >-
          Total amount of the order including fees in the currency's smallest
          unit.
        type: integer
      beneficiary:
        type: optional<ClimateRemovalsBeneficiary>
      canceled_at:
        docs: >-
          Time at which the order was canceled. Measured in seconds since the
          Unix epoch.
        type: optional<integer>
      cancellation_reason:
        docs: Reason for the cancellation of this order.
        type: optional<ClimateOrderCancellationReason>
      certificate:
        docs: For delivered orders, a URL to a delivery certificate for the order.
        type: optional<string>
        validation:
          maxLength: 5000
      confirmed_at:
        docs: >-
          Time at which the order was confirmed. Measured in seconds since the
          Unix epoch.
        type: optional<integer>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase,
          representing the currency for this order.
        type: string
        validation:
          maxLength: 5000
      delayed_at:
        docs: >-
          Time at which the order's expected_delivery_year was delayed. Measured
          in seconds since the Unix epoch.
        type: optional<integer>
      delivered_at:
        docs: >-
          Time at which the order was delivered. Measured in seconds since the
          Unix epoch.
        type: optional<integer>
      delivery_details:
        docs: Details about the delivery of carbon removal for this order.
        type: list<ClimateRemovalsOrderDeliveries>
      expected_delivery_year:
        docs: The year this order is expected to be delivered.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      metric_tons:
        docs: Quantity of carbon removal that is included in this order.
        type: string
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"climate.order">
      product:
        docs: Unique ID for the Climate `Product` this order is purchasing.
        type: ClimateOrderProduct
      product_substituted_at:
        docs: >-
          Time at which the order's product was substituted for a different
          product. Measured in seconds since the Unix epoch.
        type: optional<integer>
      status:
        docs: The current status of this order.
        type: ClimateOrderStatus
    source:
      openapi: ../openapi.yaml
  ClimateOrderCanceled:
    docs: Occurs when a Climate order is canceled.
    properties:
      object:
        type: ClimateOrder
    source:
      openapi: ../openapi.yaml
  ClimateOrderCancellationReason:
    docs: Reason for the cancellation of this order.
    enum:
      - expired
      - product_unavailable
      - requested
    inline: true
    source:
      openapi: ../openapi.yaml
  ClimateOrderCreated:
    docs: Occurs when a Climate order is created.
    properties:
      object:
        type: ClimateOrder
    source:
      openapi: ../openapi.yaml
  ClimateOrderDelayed:
    docs: Occurs when a Climate order is delayed.
    properties:
      object:
        type: ClimateOrder
    source:
      openapi: ../openapi.yaml
  ClimateOrderDelivered:
    docs: Occurs when a Climate order is delivered.
    properties:
      object:
        type: ClimateOrder
    source:
      openapi: ../openapi.yaml
  ClimateOrderProduct:
    discriminated: false
    docs: Unique ID for the Climate `Product` this order is purchasing.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ClimateProduct
  ClimateOrderProductSubstituted:
    docs: Occurs when a Climate order's product is substituted for another.
    properties:
      object:
        type: ClimateOrder
    source:
      openapi: ../openapi.yaml
  ClimateOrderStatus:
    docs: The current status of this order.
    enum:
      - awaiting_funds
      - canceled
      - confirmed
      - delivered
      - open
    inline: true
    source:
      openapi: ../openapi.yaml
  ClimateProduct:
    docs: >-
      A Climate product represents a type of carbon removal unit available for
      reservation.

      You can retrieve it to see the current price and availability.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      current_prices_per_metric_ton:
        docs: >-
          Current prices for a metric ton of carbon removal in a currency's
          smallest unit.
        type: map<string, ClimateRemovalsProductsPrice>
      delivery_year:
        docs: The year in which the carbon removal is expected to be delivered.
        type: optional<integer>
      id:
        docs: >-
          Unique identifier for the object. For convenience, Climate product IDs
          are human-readable strings

          that start with `climsku_`. See [carbon removal
          inventory](https://stripe.com/docs/climate/orders/carbon-removal-inventory)

          for a list of available carbon removal products.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metric_tons_available:
        docs: The quantity of metric tons available for reservation.
        type: string
      name:
        docs: The Climate product's name.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"climate.product">
      suppliers:
        docs: >-
          The carbon removal suppliers that fulfill orders for this Climate
          product.
        type: list<ClimateSupplier>
    source:
      openapi: ../openapi.yaml
  ClimateProductCreated:
    docs: Occurs when a Climate product is created.
    properties:
      object:
        type: ClimateProduct
    source:
      openapi: ../openapi.yaml
  ClimateProductPricingUpdated:
    docs: Occurs when a Climate product is updated.
    properties:
      object:
        type: ClimateProduct
    source:
      openapi: ../openapi.yaml
  ClimateRemovalsBeneficiary:
    docs: ''
    properties:
      public_name:
        docs: Publicly displayable name for the end beneficiary of carbon removal.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ClimateRemovalsLocation:
    docs: ''
    properties:
      city:
        docs: The city where the supplier is located.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country where the supplier is
          located.
        type: string
        validation:
          maxLength: 5000
      latitude:
        docs: The geographic latitude where the supplier is located.
        type: optional<double>
      longitude:
        docs: The geographic longitude where the supplier is located.
        type: optional<double>
      region:
        docs: The state/county/province/region where the supplier is located.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ClimateRemovalsOrderDeliveries:
    docs: The delivery of a specified quantity of carbon for an order.
    properties:
      delivered_at:
        docs: >-
          Time at which the delivery occurred. Measured in seconds since the
          Unix epoch.
        type: integer
      location:
        docs: Specific location of this delivery.
        type: optional<ClimateRemovalsLocation>
      metric_tons:
        docs: Quantity of carbon removal supplied by this delivery.
        type: string
        validation:
          maxLength: 5000
      registry_url:
        docs: >-
          Once retired, a URL to the registry entry for the tons from this
          delivery.
        type: optional<string>
        validation:
          maxLength: 5000
      supplier:
        type: ClimateSupplier
    source:
      openapi: ../openapi.yaml
  ClimateRemovalsProductsPrice:
    docs: ''
    properties:
      amount_fees:
        docs: >-
          Fees for one metric ton of carbon removal in the currency's smallest
          unit.
        type: integer
      amount_subtotal:
        docs: >-
          Subtotal for one metric ton of carbon removal (excluding fees) in the
          currency's smallest unit.
        type: integer
      amount_total:
        docs: >-
          Total for one metric ton of carbon removal (including fees) in the
          currency's smallest unit.
        type: integer
    source:
      openapi: ../openapi.yaml
  ClimateSupplier:
    docs: A supplier of carbon removal.
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      info_url:
        docs: Link to a webpage to learn more about the supplier.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      locations:
        docs: The locations in which this supplier operates.
        type: list<ClimateRemovalsLocation>
      name:
        docs: Name of this carbon removal supplier.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object’s type. Objects of the same type share
          the same value.
        type: literal<"climate.supplier">
      removal_pathway:
        docs: The scientific pathway used for carbon removal.
        type: ClimateSupplierRemovalPathway
    source:
      openapi: ../openapi.yaml
  ClimateSupplierRemovalPathway:
    docs: The scientific pathway used for carbon removal.
    enum:
      - biomass_carbon_removal_and_storage
      - direct_air_capture
      - enhanced_weathering
    inline: true
    source:
      openapi: ../openapi.yaml
  ConfirmationToken:
    docs: >-
      ConfirmationTokens help transport client side data collected by Stripe JS
      over

      to your server for confirming a PaymentIntent or SetupIntent. If the
      confirmation

      is successful, values present on the ConfirmationToken are written onto
      the Intent.


      To learn more about how to use ConfirmationToken, visit the related
      guides:

      - [Finalize payments on the
      server](https://stripe.com/docs/payments/finalize-payments-on-the-server)

      - [Build two-step
      confirmation](https://stripe.com/docs/payments/build-a-two-step-confirmation).
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expires_at:
        docs: >-
          Time at which this ConfirmationToken expires and can no longer be used
          to confirm a PaymentIntent or SetupIntent.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      mandate_data:
        docs: Data used for generating a Mandate.
        type: optional<ConfirmationTokensResourceMandateData>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"confirmation_token">
      payment_intent:
        docs: >-
          ID of the PaymentIntent that this ConfirmationToken was used to
          confirm, or null if this ConfirmationToken has not yet been used.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_method_options:
        docs: Payment-method-specific configuration for this ConfirmationToken.
        type: optional<ConfirmationTokensResourcePaymentMethodOptions>
      payment_method_preview:
        docs: >-
          Payment details collected by the Payment Element, used to create a
          PaymentMethod when a PaymentIntent or SetupIntent is confirmed with
          this ConfirmationToken.
        type: optional<ConfirmationTokensResourcePaymentMethodPreview>
      return_url:
        docs: Return URL used to confirm the Intent.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          ConfirmationToken's payment method.


          The presence of this property will [attach the payment
          method](https://stripe.com/docs/payments/save-during-payment) to the
          PaymentIntent's Customer, if present, after the PaymentIntent is
          confirmed and any required actions from the user are complete.
        type: optional<ConfirmationTokenSetupFutureUsage>
      setup_intent:
        docs: >-
          ID of the SetupIntent that this ConfirmationToken was used to confirm,
          or null if this ConfirmationToken has not yet been used.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping:
        docs: Shipping information collected on this ConfirmationToken.
        type: optional<ConfirmationTokensResourceShipping>
      use_stripe_sdk:
        docs: >-
          Indicates whether the Stripe SDK is used to handle confirmation flow.
          Defaults to `true` on ConfirmationToken.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConfirmationTokenSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      ConfirmationToken's payment method.


      The presence of this property will [attach the payment
      method](https://stripe.com/docs/payments/save-during-payment) to the
      PaymentIntent's Customer, if present, after the PaymentIntent is confirmed
      and any required actions from the user are complete.
    enum:
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourceMandateData:
    docs: Data used for generating a Mandate.
    properties:
      customer_acceptance:
        type: ConfirmationTokensResourceMandateDataResourceCustomerAcceptance
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourceMandateDataResourceCustomerAcceptance:
    docs: This hash contains details about the customer acceptance of the Mandate.
    properties:
      online:
        docs: >-
          If this is a Mandate accepted online, this hash contains details about
          the online acceptance.
        type: >-
          optional<ConfirmationTokensResourceMandateDataResourceCustomerAcceptanceResourceOnline>
      type:
        docs: The type of customer acceptance information included with the Mandate.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourceMandateDataResourceCustomerAcceptanceResourceOnline:
    docs: This hash contains details about the online acceptance.
    properties:
      ip_address:
        docs: The IP address from which the Mandate was accepted by the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the Mandate was accepted by
          the customer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourcePaymentMethodOptions:
    docs: Payment-method-specific configuration
    properties:
      card:
        docs: This hash contains the card payment method options.
        type: optional<ConfirmationTokensResourcePaymentMethodOptionsResourceCard>
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourcePaymentMethodOptionsResourceCard:
    docs: This hash contains the card payment method options.
    properties:
      cvc_token:
        docs: The `cvc_update` Token collected from the Payment Element.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourcePaymentMethodPreview:
    docs: Details of the PaymentMethod collected by Payment Element
    properties:
      acss_debit:
        type: optional<PaymentMethodAcssDebit>
      affirm:
        type: optional<PaymentMethodAffirm>
      afterpay_clearpay:
        type: optional<PaymentMethodAfterpayClearpay>
      alipay:
        type: optional<PaymentFlowsPrivatePaymentMethodsAlipay>
      allow_redisplay:
        docs: >-
          This field indicates whether this payment method can be shown again to
          its customer in a checkout flow. Stripe products such as Checkout and
          Elements use this field to determine whether a payment method can be
          shown as a saved payment method in a checkout flow. The field defaults
          to “unspecified”.
        type: optional<ConfirmationTokensResourcePaymentMethodPreviewAllowRedisplay>
      alma:
        type: optional<PaymentMethodAlma>
      amazon_pay:
        type: optional<PaymentMethodAmazonPay>
      au_becs_debit:
        type: optional<PaymentMethodAuBecsDebit>
      bacs_debit:
        type: optional<PaymentMethodBacsDebit>
      bancontact:
        type: optional<PaymentMethodBancontact>
      billing_details:
        type: BillingDetails
      blik:
        type: optional<PaymentMethodBlik>
      boleto:
        type: optional<PaymentMethodBoleto>
      card:
        type: optional<PaymentMethodCard>
      card_present:
        type: optional<PaymentMethodCardPresent>
      cashapp:
        type: optional<PaymentMethodCashapp>
      customer:
        docs: >-
          The ID of the Customer to which this PaymentMethod is saved. This will
          not be set when the PaymentMethod has not been saved to a Customer.
        type: optional<ConfirmationTokensResourcePaymentMethodPreviewCustomer>
      customer_balance:
        type: optional<PaymentMethodCustomerBalance>
      eps:
        type: optional<PaymentMethodEps>
      fpx:
        type: optional<PaymentMethodFpx>
      giropay:
        type: optional<PaymentMethodGiropay>
      grabpay:
        type: optional<PaymentMethodGrabpay>
      ideal:
        type: optional<PaymentMethodIdeal>
      interac_present:
        type: optional<PaymentMethodInteracPresent>
      kakao_pay:
        type: optional<PaymentMethodKakaoPay>
      klarna:
        type: optional<PaymentMethodKlarna>
      konbini:
        type: optional<PaymentMethodKonbini>
      kr_card:
        type: optional<PaymentMethodKrCard>
      link:
        type: optional<PaymentMethodLink>
      mobilepay:
        type: optional<PaymentMethodMobilepay>
      multibanco:
        type: optional<PaymentMethodMultibanco>
      naver_pay:
        type: optional<PaymentMethodNaverPay>
      oxxo:
        type: optional<PaymentMethodOxxo>
      p24:
        type: optional<PaymentMethodP24>
      pay_by_bank:
        type: optional<PaymentMethodPayByBank>
      payco:
        type: optional<PaymentMethodPayco>
      paynow:
        type: optional<PaymentMethodPaynow>
      paypal:
        type: optional<PaymentMethodPaypal>
      pix:
        type: optional<PaymentMethodPix>
      promptpay:
        type: optional<PaymentMethodPromptpay>
      revolut_pay:
        type: optional<PaymentMethodRevolutPay>
      samsung_pay:
        type: optional<PaymentMethodSamsungPay>
      sepa_debit:
        type: optional<PaymentMethodSepaDebit>
      sofort:
        type: optional<PaymentMethodSofort>
      swish:
        type: optional<PaymentMethodSwish>
      twint:
        type: optional<PaymentMethodTwint>
      type:
        docs: >-
          The type of the PaymentMethod. An additional hash is included on the
          PaymentMethod with a name matching this value. It contains additional
          information specific to the PaymentMethod type.
        type: ConfirmationTokensResourcePaymentMethodPreviewType
      us_bank_account:
        type: optional<PaymentMethodUsBankAccount>
      wechat_pay:
        type: optional<PaymentMethodWechatPay>
      zip:
        type: optional<PaymentMethodZip>
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourcePaymentMethodPreviewAllowRedisplay:
    docs: >-
      This field indicates whether this payment method can be shown again to its
      customer in a checkout flow. Stripe products such as Checkout and Elements
      use this field to determine whether a payment method can be shown as a
      saved payment method in a checkout flow. The field defaults to
      “unspecified”.
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourcePaymentMethodPreviewCustomer:
    discriminated: false
    docs: >-
      The ID of the Customer to which this PaymentMethod is saved. This will not
      be set when the PaymentMethod has not been saved to a Customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  ConfirmationTokensResourcePaymentMethodPreviewType:
    docs: >-
      The type of the PaymentMethod. An additional hash is included on the
      PaymentMethod with a name matching this value. It contains additional
      information specific to the PaymentMethod type.
    enum:
      - acss_debit
      - affirm
      - afterpay_clearpay
      - alipay
      - alma
      - amazon_pay
      - au_becs_debit
      - bacs_debit
      - bancontact
      - blik
      - boleto
      - card
      - card_present
      - cashapp
      - customer_balance
      - eps
      - fpx
      - giropay
      - grabpay
      - ideal
      - interac_present
      - kakao_pay
      - klarna
      - konbini
      - kr_card
      - link
      - mobilepay
      - multibanco
      - naver_pay
      - oxxo
      - p24
      - pay_by_bank
      - payco
      - paynow
      - paypal
      - pix
      - promptpay
      - revolut_pay
      - samsung_pay
      - sepa_debit
      - sofort
      - swish
      - twint
      - us_bank_account
      - wechat_pay
      - zip
    inline: true
    source:
      openapi: ../openapi.yaml
  ConfirmationTokensResourceShipping:
    docs: ''
    properties:
      address:
        type: Address
      name:
        docs: Recipient name.
        type: string
        validation:
          maxLength: 5000
      phone:
        docs: Recipient phone (including extension).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ConnectAccountReference:
    docs: ''
    properties:
      account:
        docs: The connected account being referenced when `type` is `account`.
        type: optional<ConnectAccountReferenceAccount>
      type:
        docs: Type of the account referenced.
        type: ConnectAccountReferenceType
    source:
      openapi: ../openapi.yaml
  ConnectAccountReferenceAccount:
    discriminated: false
    docs: The connected account being referenced when `type` is `account`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  ConnectAccountReferenceType:
    docs: Type of the account referenced.
    enum:
      - account
      - self
    inline: true
    source:
      openapi: ../openapi.yaml
  ConnectCollectionTransfer:
    docs: ''
    properties:
      amount:
        docs: Amount transferred, in cents (or local equivalent).
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      destination:
        docs: ID of the account that funds are being collected for.
        type: ConnectCollectionTransferDestination
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"connect_collection_transfer">
    source:
      openapi: ../openapi.yaml
  ConnectCollectionTransferDestination:
    discriminated: false
    docs: ID of the account that funds are being collected for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  ConnectEmbeddedAccountConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedAccountFeaturesClaim
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedAccountFeaturesClaim:
    docs: ''
    properties:
      disable_stripe_user_authentication:
        docs: >-
          Disables Stripe user authentication for this embedded component. This
          value can only be true for accounts where
          `controller.requirement_collection` is `application`. The default
          value is the opposite of the `external_account_collection` value. For
          example, if you don’t set `external_account_collection`, it defaults
          to true and `disable_stripe_user_authentication` defaults to false.
        type: boolean
      external_account_collection:
        docs: >-
          Whether to allow platforms to control bank account collection for
          their connected accounts. This feature can only be false for accounts
          where you’re responsible for collecting updated information when
          requirements are due or change, like custom accounts. Otherwise, bank
          account collection is determined by compliance requirements. The
          default value for this feature is `true`.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedAccountSessionCreateComponents:
    docs: ''
    properties:
      account_management:
        type: ConnectEmbeddedAccountConfigClaim
      account_onboarding:
        type: ConnectEmbeddedAccountConfigClaim
      balances:
        type: ConnectEmbeddedPayoutsConfigClaim
      documents:
        type: ConnectEmbeddedBaseConfigClaim
      financial_account:
        type: ConnectEmbeddedFinancialAccountConfigClaim
      financial_account_transactions:
        type: ConnectEmbeddedFinancialAccountTransactionsConfigClaim
      issuing_card:
        type: ConnectEmbeddedIssuingCardConfigClaim
      issuing_cards_list:
        type: ConnectEmbeddedIssuingCardsListConfigClaim
      notification_banner:
        type: ConnectEmbeddedAccountConfigClaim
      payment_details:
        type: ConnectEmbeddedPaymentsConfigClaim
      payments:
        type: ConnectEmbeddedPaymentsConfigClaim
      payouts:
        type: ConnectEmbeddedPayoutsConfigClaim
      payouts_list:
        type: ConnectEmbeddedBaseConfigClaim
      tax_registrations:
        type: ConnectEmbeddedBaseConfigClaim
      tax_settings:
        type: ConnectEmbeddedBaseConfigClaim
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedBaseConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedBaseFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedBaseFeatures:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedFinancialAccountConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedFinancialAccountFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedFinancialAccountFeatures:
    docs: ''
    properties:
      disable_stripe_user_authentication:
        docs: >-
          Disables Stripe user authentication for this embedded component. This
          value can only be true for accounts where
          `controller.requirement_collection` is `application`. The default
          value is the opposite of the `external_account_collection` value. For
          example, if you don’t set `external_account_collection`, it defaults
          to true and `disable_stripe_user_authentication` defaults to false.
        type: boolean
      external_account_collection:
        docs: Whether to allow external accounts to be linked for money transfer.
        type: boolean
      send_money:
        docs: Whether to allow sending money.
        type: boolean
      transfer_balance:
        docs: Whether to allow transferring balance.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedFinancialAccountTransactionsConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedFinancialAccountTransactionsFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedFinancialAccountTransactionsFeatures:
    docs: ''
    properties:
      card_spend_dispute_management:
        docs: Whether to allow card spend dispute management features.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedIssuingCardConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedIssuingCardFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedIssuingCardFeatures:
    docs: ''
    properties:
      card_management:
        docs: Whether to allow card management features.
        type: boolean
      card_spend_dispute_management:
        docs: Whether to allow card spend dispute management features.
        type: boolean
      cardholder_management:
        docs: Whether to allow cardholder management features.
        type: boolean
      spend_control_management:
        docs: Whether to allow spend control management features.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedIssuingCardsListConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedIssuingCardsListFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedIssuingCardsListFeatures:
    docs: ''
    properties:
      card_management:
        docs: Whether to allow card management features.
        type: boolean
      card_spend_dispute_management:
        docs: Whether to allow card spend dispute management features.
        type: boolean
      cardholder_management:
        docs: Whether to allow cardholder management features.
        type: boolean
      disable_stripe_user_authentication:
        docs: >-
          Disables Stripe user authentication for this embedded component. This
          feature can only be false for accounts where you’re responsible for
          collecting updated information when requirements are due or change,
          like custom accounts.
        type: boolean
      spend_control_management:
        docs: Whether to allow spend control management features.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedPaymentsConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedPaymentsFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedPaymentsFeatures:
    docs: ''
    properties:
      capture_payments:
        docs: >-
          Whether to allow capturing and cancelling payment intents. This is
          `true` by default.
        type: boolean
      destination_on_behalf_of_charge_management:
        docs: >-
          Whether to allow connected accounts to manage destination charges that
          are created on behalf of them. This is `false` by default.
        type: boolean
      dispute_management:
        docs: >-
          Whether to allow responding to disputes, including submitting evidence
          and accepting disputes. This is `true` by default.
        type: boolean
      refund_management:
        docs: Whether to allow sending refunds. This is `true` by default.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedPayoutsConfigClaim:
    docs: ''
    properties:
      enabled:
        docs: Whether the embedded component is enabled.
        type: boolean
      features:
        type: ConnectEmbeddedPayoutsFeatures
    source:
      openapi: ../openapi.yaml
  ConnectEmbeddedPayoutsFeatures:
    docs: ''
    properties:
      disable_stripe_user_authentication:
        docs: >-
          Disables Stripe user authentication for this embedded component. This
          value can only be true for accounts where
          `controller.requirement_collection` is `application`. The default
          value is the opposite of the `external_account_collection` value. For
          example, if you don’t set `external_account_collection`, it defaults
          to true and `disable_stripe_user_authentication` defaults to false.
        type: boolean
      edit_payout_schedule:
        docs: >-
          Whether to allow payout schedule to be changed. Default `true` when
          Stripe owns Loss Liability, default `false` otherwise.
        type: boolean
      external_account_collection:
        docs: >-
          Whether to allow platforms to control bank account collection for
          their connected accounts. This feature can only be false for accounts
          where you’re responsible for collecting updated information when
          requirements are due or change, like custom accounts. Otherwise, bank
          account collection is determined by compliance requirements. The
          default value for this feature is `true`.
        type: boolean
      instant_payouts:
        docs: >-
          Whether to allow creation of instant payouts. Default `true` when
          Stripe owns Loss Liability, default `false` otherwise.
        type: boolean
      standard_payouts:
        docs: >-
          Whether to allow creation of standard payouts. Default `true` when
          Stripe owns Loss Liability, default `false` otherwise.
        type: boolean
    source:
      openapi: ../openapi.yaml
  CountrySpec:
    docs: >-
      Stripe needs to collect certain pieces of information about each account

      created. These requirements can differ depending on the account's country.
      The

      Country Specs API makes these rules available to your integration.


      You can also view the information from this API call as [an online

      guide](/docs/connect/required-verification-information).
    properties:
      default_currency:
        docs: >-
          The default currency for this country. This applies to both payment
          methods and bank accounts.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: >-
          Unique identifier for the object. Represented as the ISO country code
          for this country.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"country_spec">
      supported_bank_account_currencies:
        docs: >-
          Currencies that can be accepted in the specific country (for
          transfers).
        type: map<string, list<string>>
      supported_payment_currencies:
        docs: >-
          Currencies that can be accepted in the specified country (for
          payments).
        type: list<string>
      supported_payment_methods:
        docs: >-
          Payment methods available in the specified country. You may need to
          enable some payment methods (e.g., [ACH](https://stripe.com/docs/ach))
          on your account before they appear in this list. The `stripe` payment
          method refers to [charging through your
          platform](https://stripe.com/docs/connect/destination-charges).
        type: list<string>
      supported_transfer_countries:
        docs: Countries that can accept transfers from the specified country.
        type: list<string>
      verification_fields:
        type: CountrySpecVerificationFields
    source:
      openapi: ../openapi.yaml
  CountrySpecVerificationFieldDetails:
    docs: ''
    properties:
      additional:
        docs: Additional fields which are only required for some users.
        type: list<string>
      minimum:
        docs: Fields which every account must eventually provide.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  CountrySpecVerificationFields:
    docs: ''
    properties:
      company:
        type: CountrySpecVerificationFieldDetails
      individual:
        type: CountrySpecVerificationFieldDetails
    source:
      openapi: ../openapi.yaml
  Coupon:
    docs: >-
      A coupon contains information about a percent-off or amount-off discount
      you

      might want to apply to a customer. Coupons may be applied to
      [subscriptions](https://stripe.com/docs/api#subscriptions),
      [invoices](https://stripe.com/docs/api#invoices),

      [checkout sessions](https://stripe.com/docs/api/checkout/sessions),
      [quotes](https://stripe.com/docs/api#quotes), and more. Coupons do not
      work with conventional one-off
      [charges](https://stripe.com/docs/api#create_charge) or [payment
      intents](https://stripe.com/docs/api/payment_intents).
    properties:
      amount_off:
        docs: >-
          Amount (in the `currency` specified) that will be taken off the
          subtotal of any invoices for this customer.
        type: optional<integer>
      applies_to:
        type: optional<CouponAppliesTo>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          If `amount_off` has been set, the three-letter [ISO code for the
          currency](https://stripe.com/docs/currencies) of the amount to take
          off.
        type: optional<string>
      currency_options:
        docs: >-
          Coupons defined in each available currency option. Each key must be a
          three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html) and a
          [supported currency](https://stripe.com/docs/currencies).
        type: optional<map<string, CouponCurrencyOption>>
      duration:
        docs: >-
          One of `forever`, `once`, and `repeating`. Describes how long a
          customer who applies this coupon will get the discount.
        type: CouponDuration
      duration_in_months:
        docs: >-
          If `duration` is `repeating`, the number of months the coupon applies.
          Null if coupon `duration` is `forever` or `once`.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      max_redemptions:
        docs: >-
          Maximum number of times this coupon can be redeemed, in total, across
          all customers, before it is no longer valid.
        type: optional<integer>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      name:
        docs: >-
          Name of the coupon displayed to customers on for instance invoices or
          receipts.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"coupon">
      percent_off:
        docs: >-
          Percent that will be taken off the subtotal of any invoices for this
          customer for the duration of the coupon. For example, a coupon with
          percent_off of 50 will make a $ (or local equivalent)100 invoice $ (or
          local equivalent)50 instead.
        type: optional<double>
      redeem_by:
        docs: Date after which the coupon can no longer be redeemed.
        type: optional<integer>
      times_redeemed:
        docs: Number of times this coupon has been applied to a customer.
        type: integer
      valid:
        docs: >-
          Taking account of the above properties, whether this coupon can still
          be applied to a customer.
        type: boolean
    source:
      openapi: ../openapi.yaml
  CouponAppliesTo:
    docs: ''
    properties:
      products:
        docs: A list of product IDs this coupon applies to
        type: list<string>
    source:
      openapi: ../openapi.yaml
  CouponCreated:
    docs: Occurs whenever a coupon is created.
    properties:
      object:
        type: Coupon
    source:
      openapi: ../openapi.yaml
  CouponCurrencyOption:
    docs: ''
    properties:
      amount_off:
        docs: >-
          Amount (in the `currency` specified) that will be taken off the
          subtotal of any invoices for this customer.
        type: integer
    source:
      openapi: ../openapi.yaml
  CouponDeleted:
    docs: Occurs whenever a coupon is deleted.
    properties:
      object:
        type: Coupon
    source:
      openapi: ../openapi.yaml
  CouponDuration:
    docs: >-
      One of `forever`, `once`, and `repeating`. Describes how long a customer
      who applies this coupon will get the discount.
    enum:
      - forever
      - once
      - repeating
    inline: true
    source:
      openapi: ../openapi.yaml
  CouponUpdated:
    docs: Occurs whenever a coupon is updated.
    properties:
      object:
        type: Coupon
    source:
      openapi: ../openapi.yaml
  CreditBalance:
    docs: ''
    properties:
      available_balance:
        type: BillingCreditGrantsResourceAmount
      ledger_balance:
        type: BillingCreditGrantsResourceAmount
    source:
      openapi: ../openapi.yaml
  CreditNote:
    docs: >-
      Issue a credit note to adjust an invoice's amount after the invoice is
      finalized.


      Related guide: [Credit
      notes](https://stripe.com/docs/billing/invoices/credit-notes)
    properties:
      amount:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          total amount of the credit note, including tax.
        type: integer
      amount_shipping:
        docs: This is the sum of all the shipping amounts.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: ID of the customer.
        type: CreditNoteCustomer
      customer_balance_transaction:
        docs: Customer balance transaction related to this credit note.
        type: optional<CreditNoteCustomerBalanceTransaction>
      discount_amount:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          total amount of discount that was credited.
        type: integer
      discount_amounts:
        docs: The aggregate amounts calculated per discount for all line items.
        type: list<DiscountsResourceDiscountAmount>
      effective_at:
        docs: >-
          The date when this credit note is in effect. Same as `created` unless
          overwritten. When defined, this value replaces the system-generated
          'Date of issue' printed on the credit note PDF.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: ID of the invoice.
        type: CreditNoteInvoice
      lines:
        docs: Line items that make up the credit note
        type: CreditNoteLines
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      memo:
        docs: Customer-facing text that appears on the credit note PDF.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      number:
        docs: >-
          A unique number that identifies this particular credit note and
          appears on the PDF of the credit note and its associated invoice.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"credit_note">
      out_of_band_amount:
        docs: Amount that was credited outside of Stripe.
        type: optional<integer>
      pdf:
        docs: The link to download the PDF of the credit note.
        type: string
        validation:
          maxLength: 5000
      pretax_credit_amounts:
        docs: >-
          The pretax credit amounts (ex: discount, credit grants, etc) for all
          line items.
        type: list<CreditNotesPretaxCreditAmount>
      reason:
        docs: >-
          Reason for issuing this credit note, one of `duplicate`, `fraudulent`,
          `order_change`, or `product_unsatisfactory`
        type: optional<CreditNoteReason>
      refund:
        docs: Refund related to this credit note.
        type: optional<CreditNoteRefund>
      shipping_cost:
        docs: >-
          The details of the cost of shipping, including the ShippingRate
          applied to the invoice.
        type: optional<InvoicesResourceShippingCost>
      status:
        docs: >-
          Status of this credit note, one of `issued` or `void`. Learn more
          about [voiding credit
          notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
        type: CreditNoteStatus
      subtotal:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          amount of the credit note, excluding exclusive tax and invoice level
          discounts.
        type: integer
      subtotal_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          amount of the credit note, excluding all tax and invoice level
          discounts.
        type: optional<integer>
      tax_amounts:
        docs: The aggregate amounts calculated per tax rate for all line items.
        type: list<CreditNoteTaxAmount>
      total:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          total amount of the credit note, including tax and all discount.
        type: integer
      total_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          total amount of the credit note, excluding tax, but including
          discounts.
        type: optional<integer>
      type:
        docs: >-
          Type of this credit note, one of `pre_payment` or `post_payment`. A
          `pre_payment` credit note means it was issued when the invoice was
          open. A `post_payment` credit note means it was issued when the
          invoice was paid.
        type: CreditNoteType
      voided_at:
        docs: The time that the credit note was voided.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  CreditNoteCreated:
    docs: Occurs whenever a credit note is created.
    properties:
      object:
        type: CreditNote
    source:
      openapi: ../openapi.yaml
  CreditNoteCustomer:
    discriminated: false
    docs: ID of the customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  CreditNoteCustomerBalanceTransaction:
    discriminated: false
    docs: Customer balance transaction related to this credit note.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: CustomerBalanceTransaction
  CreditNoteInvoice:
    discriminated: false
    docs: ID of the invoice.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  CreditNoteLineItem:
    docs: The credit note line item object
    properties:
      amount:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          gross amount being credited for this line item, excluding (exclusive)
          tax and discounts.
        type: integer
      amount_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          amount being credited for this line item, excluding all tax and
          discounts.
        type: optional<integer>
      description:
        docs: Description of the item being credited.
        type: optional<string>
        validation:
          maxLength: 5000
      discount_amount:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          discount being credited for this line item.
        type: integer
      discount_amounts:
        docs: The amount of discount calculated per discount for this line item
        type: list<DiscountsResourceDiscountAmount>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice_line_item:
        docs: ID of the invoice line item being credited
        type: optional<string>
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"credit_note_line_item">
      pretax_credit_amounts:
        docs: >-
          The pretax credit amounts (ex: discount, credit grants, etc) for this
          line item.
        type: list<CreditNotesPretaxCreditAmount>
      quantity:
        docs: The number of units of product being credited.
        type: optional<integer>
      tax_amounts:
        docs: The amount of tax calculated per tax rate for this line item
        type: list<CreditNoteTaxAmount>
      tax_rates:
        docs: The tax rates which apply to the line item.
        type: list<TaxRate>
      type:
        docs: >-
          The type of the credit note line item, one of `invoice_line_item` or
          `custom_line_item`. When the type is `invoice_line_item` there is an
          additional `invoice_line_item` property on the resource the value of
          which is the id of the credited line item on the invoice.
        type: CreditNoteLineItemType
      unit_amount:
        docs: The cost of each unit of product being credited.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          Same as `unit_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
      unit_amount_excluding_tax:
        docs: >-
          The amount in cents (or local equivalent) representing the unit amount
          being credited for this line item, excluding all tax and discounts.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  CreditNoteLineItemType:
    docs: >-
      The type of the credit note line item, one of `invoice_line_item` or
      `custom_line_item`. When the type is `invoice_line_item` there is an
      additional `invoice_line_item` property on the resource the value of which
      is the id of the credited line item on the invoice.
    enum:
      - custom_line_item
      - invoice_line_item
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteLines:
    docs: Line items that make up the credit note
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<CreditNoteLineItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CreditNoteReason:
    docs: >-
      Reason for issuing this credit note, one of `duplicate`, `fraudulent`,
      `order_change`, or `product_unsatisfactory`
    enum:
      - duplicate
      - fraudulent
      - order_change
      - product_unsatisfactory
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteRefund:
    discriminated: false
    docs: Refund related to this credit note.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Refund
  CreditNotesPretaxCreditAmount:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount, in cents (or local equivalent), of the pretax credit
          amount.
        type: integer
      credit_balance_transaction:
        docs: >-
          The credit balance transaction that was applied to get this pretax
          credit amount.
        type: optional<CreditNotesPretaxCreditAmountCreditBalanceTransaction>
      discount:
        docs: The discount that was applied to get this pretax credit amount.
        type: optional<CreditNotesPretaxCreditAmountDiscount>
      type:
        docs: Type of the pretax credit amount referenced.
        type: CreditNotesPretaxCreditAmountType
    source:
      openapi: ../openapi.yaml
  CreditNotesPretaxCreditAmountCreditBalanceTransaction:
    discriminated: false
    docs: >-
      The credit balance transaction that was applied to get this pretax credit
      amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BillingCreditBalanceTransaction
  CreditNotesPretaxCreditAmountDiscount:
    discriminated: false
    docs: The discount that was applied to get this pretax credit amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
      - type: DeletedDiscount
  CreditNotesPretaxCreditAmountType:
    docs: Type of the pretax credit amount referenced.
    enum:
      - credit_balance_transaction
      - discount
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteStatus:
    docs: >-
      Status of this credit note, one of `issued` or `void`. Learn more about
      [voiding credit
      notes](https://stripe.com/docs/billing/invoices/credit-notes#voiding).
    enum:
      - issued
      - void
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteTaxAmount:
    docs: ''
    properties:
      amount:
        docs: The amount, in cents (or local equivalent), of the tax.
        type: integer
      inclusive:
        docs: Whether this tax amount is inclusive or exclusive.
        type: boolean
      tax_rate:
        docs: The tax rate that was applied to get this tax amount.
        type: CreditNoteTaxAmountTaxRate
      taxability_reason:
        docs: >-
          The reasoning behind this tax, for example, if the product is tax
          exempt. The possible values for this field may be extended as new tax
          rules are supported.
        type: optional<CreditNoteTaxAmountTaxabilityReason>
      taxable_amount:
        docs: The amount on which tax is calculated, in cents (or local equivalent).
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  CreditNoteTaxAmountTaxabilityReason:
    docs: >-
      The reasoning behind this tax, for example, if the product is tax exempt.
      The possible values for this field may be extended as new tax rules are
      supported.
    enum:
      - customer_exempt
      - not_collecting
      - not_subject_to_tax
      - not_supported
      - portion_product_exempt
      - portion_reduced_rated
      - portion_standard_rated
      - product_exempt
      - product_exempt_holiday
      - proportionally_rated
      - reduced_rated
      - reverse_charge
      - standard_rated
      - taxable_basis_reduced
      - zero_rated
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteTaxAmountTaxRate:
    discriminated: false
    docs: The tax rate that was applied to get this tax amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxRate
  CreditNoteType:
    docs: >-
      Type of this credit note, one of `pre_payment` or `post_payment`. A
      `pre_payment` credit note means it was issued when the invoice was open. A
      `post_payment` credit note means it was issued when the invoice was paid.
    enum:
      - post_payment
      - pre_payment
    inline: true
    source:
      openapi: ../openapi.yaml
  CreditNoteUpdated:
    docs: Occurs whenever a credit note is updated.
    properties:
      object:
        type: CreditNote
    source:
      openapi: ../openapi.yaml
  CreditNoteVoided:
    docs: Occurs whenever a credit note is voided.
    properties:
      object:
        type: CreditNote
    source:
      openapi: ../openapi.yaml
  CurrencyOption:
    docs: ''
    properties:
      custom_unit_amount:
        docs: >-
          When set, provides configuration for the amount to be adjusted by the
          customer during Checkout Sessions and Payment Links.
        type: optional<CustomUnitAmount>
      tax_behavior:
        docs: >-
          Only required if a [default tax
          behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
          was not provided in the Stripe Tax settings. Specifies whether the
          price is considered inclusive of taxes or exclusive of taxes. One of
          `inclusive`, `exclusive`, or `unspecified`. Once specified as either
          `inclusive` or `exclusive`, it cannot be changed.
        type: optional<CurrencyOptionTaxBehavior>
      tiers:
        docs: >-
          Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for
          `billing_scheme`.
        type: optional<list<PriceTier>>
      unit_amount:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if
          `billing_scheme=per_unit`.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only
          set if `billing_scheme=per_unit`.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  CurrencyOptionTaxBehavior:
    docs: >-
      Only required if a [default tax
      behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
      was not provided in the Stripe Tax settings. Specifies whether the price
      is considered inclusive of taxes or exclusive of taxes. One of
      `inclusive`, `exclusive`, or `unspecified`. Once specified as either
      `inclusive` or `exclusive`, it cannot be changed.
    enum:
      - exclusive
      - inclusive
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  Customer:
    docs: >-
      This object represents a customer of your business. Use it to [create
      recurring charges](https://stripe.com/docs/invoicing/customer), [save
      payment](https://stripe.com/docs/payments/save-during-payment) and contact
      information,

      and track payments that belong to the same customer.
    properties:
      address:
        docs: The customer's address.
        type: optional<Address>
      balance:
        docs: >-
          The current balance, if any, that's stored on the customer. If
          negative, the customer has credit to apply to their next invoice. If
          positive, the customer has an amount owed that's added to their next
          invoice. The balance only considers amounts that Stripe hasn't
          successfully applied to any invoice. It doesn't reflect unpaid
          invoices. This balance is only taken into account after invoices
          finalize.
        type: optional<integer>
      cash_balance:
        docs: >-
          The current funds being held by Stripe on behalf of the customer. You
          can apply these funds towards payment intents when the source is
          "cash_balance". The `settings[reconciliation_mode]` field describes if
          these funds apply to these payment intents manually or automatically.
        type: optional<CashBalance>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO code for the
          currency](https://stripe.com/docs/currencies) the customer can be
          charged in for recurring billing purposes.
        type: optional<string>
        validation:
          maxLength: 5000
      default_source:
        docs: >-
          ID of the default payment source for the customer.


          If you use payment methods created through the PaymentMethods API, see
          the
          [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
          field instead.
        type: optional<CustomerDefaultSource>
      delinquent:
        docs: >-
          Tracks the most recent state change on any invoice belonging to the
          customer. Paying an invoice or marking it uncollectible via the API
          will set this field to false. An automatic payment failure or passing
          the `invoice.due_date` will set this field to `true`.


          If an invoice becomes uncollectible by
          [dunning](https://stripe.com/docs/billing/automatic-collection),
          `delinquent` doesn't reset to `false`.


          If you care whether the customer has paid their most recent
          subscription invoice, use `subscription.status` instead. Paying or
          marking uncollectible any customer invoice regardless of whether it is
          the latest invoice for a subscription will always set this field to
          `false`.
        type: optional<boolean>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      discount:
        docs: >-
          Describes the current discount active on the customer, if there is
          one.
        type: optional<Discount>
      email:
        docs: The customer's email address.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice_credit_balance:
        docs: >-
          The current multi-currency balances, if any, that's stored on the
          customer. If positive in a currency, the customer has a credit to
          apply to their next invoice denominated in that currency. If negative,
          the customer has an amount owed that's added to their next invoice
          denominated in that currency. These balances don't apply to unpaid
          invoices. They solely track amounts that Stripe hasn't successfully
          applied to any invoice. Stripe only applies a balance in a specific
          currency to an invoice after that invoice (which is in the same
          currency) finalizes.
        type: optional<map<string, integer>>
      invoice_prefix:
        docs: The prefix for the customer used to generate unique invoice numbers.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_settings:
        type: optional<InvoiceSettingCustomerSetting>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, string>>
      name:
        docs: The customer's full name or business name.
        type: optional<string>
        validation:
          maxLength: 5000
      next_invoice_sequence:
        docs: >-
          The suffix of the customer's next invoice number (for example, 0001).
          When the account uses account level sequencing, this parameter is
          ignored in API requests and the field omitted in API responses.
        type: optional<integer>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"customer">
      phone:
        docs: The customer's phone number.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_locales:
        docs: The customer's preferred locales (languages), ordered by preference.
        type: optional<list<string>>
      shipping:
        docs: >-
          Mailing and shipping address for the customer. Appears on invoices
          emailed to this customer.
        type: optional<Shipping>
      sources:
        docs: The customer's payment sources, if any.
        type: optional<CustomerSources>
      subscriptions:
        docs: The customer's current subscriptions, if any.
        type: optional<CustomerSubscriptions>
      tax:
        type: optional<CustomerTax>
      tax_exempt:
        docs: >-
          Describes the customer's tax exemption status, which is `none`,
          `exempt`, or `reverse`. When set to `reverse`, invoice and receipt
          PDFs include the following text: **"Reverse charge"**.
        type: optional<CustomerTaxExempt>
      tax_ids:
        docs: The customer's tax IDs.
        type: optional<CustomerTaxIds>
      test_clock:
        docs: ID of the test clock that this customer belongs to.
        type: optional<CustomerTestClock>
    source:
      openapi: ../openapi.yaml
  CustomerAcceptance:
    docs: ''
    properties:
      accepted_at:
        docs: The time that the customer accepts the mandate.
        type: optional<integer>
      offline:
        type: optional<OfflineAcceptance>
      online:
        type: optional<OnlineAcceptance>
      type:
        docs: >-
          The mandate includes the type of customer acceptance information, such
          as: `online` or `offline`.
        type: CustomerAcceptanceType
    source:
      openapi: ../openapi.yaml
  CustomerAcceptanceType:
    docs: >-
      The mandate includes the type of customer acceptance information, such as:
      `online` or `offline`.
    enum:
      - offline
      - online
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerBalanceCustomerBalanceSettings:
    docs: ''
    properties:
      reconciliation_mode:
        docs: >-
          The configuration for how funds that land in the customer cash balance
          are reconciled.
        type: CustomerBalanceCustomerBalanceSettingsReconciliationMode
      using_merchant_default:
        docs: >-
          A flag to indicate if reconciliation mode returned is the user's
          default or is specific to this customer cash balance
        type: boolean
    source:
      openapi: ../openapi.yaml
  CustomerBalanceCustomerBalanceSettingsReconciliationMode:
    docs: >-
      The configuration for how funds that land in the customer cash balance are
      reconciled.
    enum:
      - automatic
      - manual
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraft:
    docs: ''
    properties:
      balance_transaction:
        docs: >-
          The [Balance
          Transaction](https://stripe.com/docs/api/balance_transactions/object)
          that corresponds to funds taken out of your Stripe balance.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraftBalanceTransaction
      linked_transaction:
        docs: >-
          The [Cash Balance
          Transaction](https://stripe.com/docs/api/cash_balance_transactions/object)
          that brought the customer balance negative, triggering the clawback of
          funds.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraftLinkedTransaction
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraftBalanceTransaction:
    discriminated: false
    docs: >-
      The [Balance
      Transaction](https://stripe.com/docs/api/balance_transactions/object) that
      corresponds to funds taken out of your Stripe balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraftLinkedTransaction:
    discriminated: false
    docs: >-
      The [Cash Balance
      Transaction](https://stripe.com/docs/api/cash_balance_transactions/object)
      that brought the customer balance negative, triggering the clawback of
      funds.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: CustomerCashBalanceTransaction
  CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransaction:
    docs: ''
    properties:
      payment_intent:
        docs: >-
          The [Payment
          Intent](https://stripe.com/docs/api/payment_intents/object) that funds
          were applied to.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransactionPaymentIntent
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransactionPaymentIntent:
    discriminated: false
    docs: >-
      The [Payment Intent](https://stripe.com/docs/api/payment_intents/object)
      that funds were applied to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransaction:
    docs: ''
    properties:
      bank_transfer:
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransfer
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransfer:
    docs: ''
    properties:
      eu_bank_transfer:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceEuBankTransfer>
      gb_bank_transfer:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceGbBankTransfer>
      jp_bank_transfer:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceJpBankTransfer>
      reference:
        docs: The user-supplied reference field on the bank transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: >-
          The funding method type used to fund the customer balance. Permitted
          values include: `eu_bank_transfer`, `gb_bank_transfer`,
          `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferType
      us_bank_transfer:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransfer>
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceEuBankTransfer:
    docs: ''
    properties:
      bic:
        docs: The BIC of the bank of the sender of the funding.
        type: optional<string>
        validation:
          maxLength: 5000
      iban_last4:
        docs: The last 4 digits of the IBAN of the sender of the funding.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: The full name of the sender, as supplied by the sending bank.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceGbBankTransfer:
    docs: ''
    properties:
      account_number_last4:
        docs: The last 4 digits of the account number of the sender of the funding.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: The full name of the sender, as supplied by the sending bank.
        type: optional<string>
        validation:
          maxLength: 5000
      sort_code:
        docs: The sort code of the bank of the sender of the funding
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceJpBankTransfer:
    docs: ''
    properties:
      sender_bank:
        docs: The name of the bank of the sender of the funding.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_branch:
        docs: The name of the bank branch of the sender of the funding.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: The full name of the sender, as supplied by the sending bank.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransfer:
    docs: ''
    properties:
      network:
        docs: The banking network used for this funding.
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransferNetwork>
      sender_name:
        docs: The full name of the sender, as supplied by the sending bank.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferResourceUsBankTransferNetwork:
    docs: The banking network used for this funding.
    enum:
      - ach
      - domestic_wire_us
      - swift
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceFundedTransactionResourceBankTransferType:
    docs: >-
      The funding method type used to fund the customer balance. Permitted
      values include: `eu_bank_transfer`, `gb_bank_transfer`,
      `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    enum:
      - eu_bank_transfer
      - gb_bank_transfer
      - jp_bank_transfer
      - mx_bank_transfer
      - us_bank_transfer
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransaction:
    docs: ''
    properties:
      refund:
        docs: >-
          The [Refund](https://stripe.com/docs/api/refunds/object) that moved
          these funds into the customer's cash balance.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransactionRefund
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransactionRefund:
    discriminated: false
    docs: >-
      The [Refund](https://stripe.com/docs/api/refunds/object) that moved these
      funds into the customer's cash balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Refund
  CustomerBalanceResourceCashBalanceTransactionResourceTransferredToBalance:
    docs: ''
    properties:
      balance_transaction:
        docs: >-
          The [Balance
          Transaction](https://stripe.com/docs/api/balance_transactions/object)
          that corresponds to funds transferred to your Stripe balance.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceTransferredToBalanceBalanceTransaction
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceTransferredToBalanceBalanceTransaction:
    discriminated: false
    docs: >-
      The [Balance
      Transaction](https://stripe.com/docs/api/balance_transactions/object) that
      corresponds to funds transferred to your Stripe balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransaction:
    docs: ''
    properties:
      payment_intent:
        docs: >-
          The [Payment
          Intent](https://stripe.com/docs/api/payment_intents/object) that funds
          were unapplied from.
        type: >-
          CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransactionPaymentIntent
    source:
      openapi: ../openapi.yaml
  CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransactionPaymentIntent:
    discriminated: false
    docs: >-
      The [Payment Intent](https://stripe.com/docs/api/payment_intents/object)
      that funds were unapplied from.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  CustomerBalanceTransaction:
    docs: >-
      Each customer has a
      [Balance](https://stripe.com/docs/api/customers/object#customer_object-balance)
      value,

      which denotes a debit or credit that's automatically applied to their next
      invoice upon finalization.

      You may modify the value directly by using the [update customer
      API](https://stripe.com/docs/api/customers/update),

      or by creating a Customer Balance Transaction, which increments or
      decrements the customer's `balance` by the specified `amount`.


      Related guide: [Customer
      balance](https://stripe.com/docs/billing/customer/balance)
    properties:
      amount:
        docs: >-
          The amount of the transaction. A negative value is a credit for the
          customer's balance, and a positive value is a debit to the customer's
          `balance`.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      credit_note:
        docs: The ID of the credit note (if any) related to the transaction.
        type: optional<CustomerBalanceTransactionCreditNote>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: The ID of the customer the transaction belongs to.
        type: CustomerBalanceTransactionCustomer
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      ending_balance:
        docs: >-
          The customer's `balance` after the transaction was applied. A negative
          value decreases the amount due on the customer's next invoice. A
          positive value increases the amount due on the customer's next
          invoice.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The ID of the invoice (if any) related to the transaction.
        type: optional<CustomerBalanceTransactionInvoice>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"customer_balance_transaction">
      type:
        docs: >-
          Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`,
          `initial`, `invoice_overpaid`, `invoice_too_large`,
          `invoice_too_small`, `unspent_receiver_credit`, or
          `unapplied_from_invoice`. See the [Customer Balance
          page](https://stripe.com/docs/billing/customer/balance#types) to learn
          more about transaction types.
        type: CustomerBalanceTransactionType
    source:
      openapi: ../openapi.yaml
  CustomerBalanceTransactionCreditNote:
    discriminated: false
    docs: The ID of the credit note (if any) related to the transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: CreditNote
  CustomerBalanceTransactionCustomer:
    discriminated: false
    docs: The ID of the customer the transaction belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  CustomerBalanceTransactionInvoice:
    discriminated: false
    docs: The ID of the invoice (if any) related to the transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  CustomerBalanceTransactionType:
    docs: >-
      Transaction type: `adjustment`, `applied_to_invoice`, `credit_note`,
      `initial`, `invoice_overpaid`, `invoice_too_large`, `invoice_too_small`,
      `unspent_receiver_credit`, or `unapplied_from_invoice`. See the [Customer
      Balance page](https://stripe.com/docs/billing/customer/balance#types) to
      learn more about transaction types.
    enum:
      - adjustment
      - applied_to_invoice
      - credit_note
      - initial
      - invoice_overpaid
      - invoice_too_large
      - invoice_too_small
      - migration
      - unapplied_from_invoice
      - unspent_receiver_credit
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerCashBalanceTransaction:
    docs: >-
      Customers with certain payments enabled have a cash balance, representing
      funds that were paid

      by the customer to a merchant, but have not yet been allocated to a
      payment. Cash Balance Transactions

      represent when funds are moved into or out of this balance. This includes
      funding by the customer, allocation

      to payments, and refunds to the customer.
    properties:
      adjusted_for_overdraft:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceAdjustedForOverdraft>
      applied_to_payment:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceAppliedToPaymentTransaction>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      customer:
        docs: >-
          The customer whose available cash balance changed as a result of this
          transaction.
        type: CustomerCashBalanceTransactionCustomer
      ending_balance:
        docs: >-
          The total available cash balance for the specified currency after this
          transaction was applied. Represented in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      funded:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceFundedTransaction>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      net_amount:
        docs: >-
          The amount by which the cash balance changed, represented in the
          [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). A positive
          value represents funds being added to the cash balance, a negative
          value represents funds being removed from the cash balance.
        type: integer
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"customer_cash_balance_transaction">
      refunded_from_payment:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceRefundedFromPaymentTransaction>
      transferred_to_balance:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceTransferredToBalance>
      type:
        docs: >-
          The type of the cash balance transaction. New types may be added in
          future. See [Customer
          Balance](https://stripe.com/docs/payments/customer-balance#types) to
          learn more about these types.
        type: CustomerCashBalanceTransactionType
      unapplied_from_payment:
        type: >-
          optional<CustomerBalanceResourceCashBalanceTransactionResourceUnappliedFromPaymentTransaction>
    source:
      openapi: ../openapi.yaml
  CustomerCashBalanceTransactionCreated:
    docs: Occurs whenever a new customer cash balance transactions is created.
    properties:
      object:
        type: CustomerCashBalanceTransaction
    source:
      openapi: ../openapi.yaml
  CustomerCashBalanceTransactionCustomer:
    discriminated: false
    docs: >-
      The customer whose available cash balance changed as a result of this
      transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  CustomerCashBalanceTransactionType:
    docs: >-
      The type of the cash balance transaction. New types may be added in
      future. See [Customer
      Balance](https://stripe.com/docs/payments/customer-balance#types) to learn
      more about these types.
    enum:
      - adjusted_for_overdraft
      - applied_to_payment
      - funded
      - funding_reversed
      - refunded_from_payment
      - return_canceled
      - return_initiated
      - transferred_to_balance
      - unapplied_from_payment
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerCreated:
    docs: Occurs whenever a new customer is created.
    properties:
      object:
        type: Customer
    source:
      openapi: ../openapi.yaml
  CustomerDefaultSource:
    discriminated: false
    docs: >-
      ID of the default payment source for the customer.


      If you use payment methods created through the PaymentMethods API, see the
      [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
      field instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentSource
  CustomerDeleted:
    docs: Occurs whenever a customer is deleted.
    properties:
      object:
        type: Customer
    source:
      openapi: ../openapi.yaml
  CustomerDiscountCreated:
    docs: Occurs whenever a coupon is attached to a customer.
    properties:
      object:
        type: Discount
    source:
      openapi: ../openapi.yaml
  CustomerDiscountDeleted:
    docs: Occurs whenever a coupon is removed from a customer.
    properties:
      object:
        type: Discount
    source:
      openapi: ../openapi.yaml
  CustomerDiscountUpdated:
    docs: Occurs whenever a customer is switched from one coupon to another.
    properties:
      object:
        type: Discount
    source:
      openapi: ../openapi.yaml
  CustomerSession:
    docs: >-
      A Customer Session allows you to grant Stripe's frontend SDKs (like
      Stripe.js) client-side access

      control over a Customer.


      Related guides: [Customer Session with the Payment
      Element](/payments/accept-a-payment-deferred?platform=web&type=payment#save-payment-methods),

      [Customer Session with the Pricing
      Table](/payments/checkout/pricing-table#customer-session),

      [Customer Session with the Buy
      Button](/payment-links/buy-button#pass-an-existing-customer).
    properties:
      client_secret:
        docs: >-
          The client secret of this Customer Session. Used on the client to set
          up secure access to the given `customer`.


          The client secret can be used to provide access to `customer` from
          your frontend. It should not be stored, logged, or exposed to anyone
          other than the relevant customer. Make sure that you have TLS enabled
          on any page that includes the client secret.
        type: string
        validation:
          maxLength: 5000
      components:
        type: optional<CustomerSessionResourceComponents>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: The Customer the Customer Session was created for.
        type: CustomerSessionCustomer
      expires_at:
        docs: The timestamp at which this Customer Session will expire.
        type: integer
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"customer_session">
    source:
      openapi: ../openapi.yaml
  CustomerSessionCustomer:
    discriminated: false
    docs: The Customer the Customer Session was created for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  CustomerSessionResourceComponents:
    docs: Configuration for the components supported by this Customer Session.
    properties:
      buy_button:
        type: CustomerSessionResourceComponentsResourceBuyButton
      payment_element:
        type: CustomerSessionResourceComponentsResourcePaymentElement
      pricing_table:
        type: CustomerSessionResourceComponentsResourcePricingTable
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourceBuyButton:
    docs: This hash contains whether the buy button is enabled.
    properties:
      enabled:
        docs: Whether the buy button is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElement:
    docs: >-
      This hash contains whether the Payment Element is enabled and the features
      it supports.
    properties:
      enabled:
        docs: Whether the Payment Element is enabled.
        type: boolean
      features:
        docs: >-
          This hash defines whether the Payment Element supports certain
          features.
        type: >-
          optional<CustomerSessionResourceComponentsResourcePaymentElementResourceFeatures>
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeatures:
    docs: This hash contains the features the Payment Element supports.
    properties:
      payment_method_allow_redisplay_filters:
        docs: >-
          A list of
          [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)
          values that controls which saved payment methods the Payment Element
          displays by filtering to only show payment methods with an
          `allow_redisplay` value that is present in this list.


          If not specified, defaults to ["always"]. In order to display all
          saved payment methods, specify ["always", "limited", "unspecified"].
        type: >-
          list<CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodAllowRedisplayFiltersItem>
      payment_method_redisplay:
        docs: >-
          Controls whether or not the Payment Element shows saved payment
          methods. This parameter defaults to `disabled`.
        type: >-
          CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodRedisplay
      payment_method_redisplay_limit:
        docs: >-
          Determines the max number of saved payment methods for the Payment
          Element to display. This parameter defaults to `3`.
        type: optional<integer>
      payment_method_remove:
        docs: >-
          Controls whether the Payment Element displays the option to remove a
          saved payment method. This parameter defaults to `disabled`.


          Allowing buyers to remove their saved payment methods impacts
          subscriptions that depend on that payment method. Removing the payment
          method detaches the [`customer`
          object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer)
          from that
          [PaymentMethod](https://docs.stripe.com/api/payment_methods).
        type: >-
          CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodRemove
      payment_method_save:
        docs: >-
          Controls whether the Payment Element displays a checkbox offering to
          save a new payment method. This parameter defaults to `disabled`.


          If a customer checks the box, the
          [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)
          value on the PaymentMethod is set to `'always'` at confirmation time.
          For PaymentIntents, the
          [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage)
          value is also set to the value defined in `payment_method_save_usage`.
        type: >-
          CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodSave
      payment_method_save_usage:
        docs: >-
          When using PaymentIntents and the customer checks the save checkbox,
          this field determines the
          [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage)
          value used to confirm the PaymentIntent.


          When using SetupIntents, directly configure the
          [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage)
          value on SetupIntent creation.
        type: >-
          optional<CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodSaveUsage>
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodAllowRedisplayFiltersItem:
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodRedisplay:
    docs: >-
      Controls whether or not the Payment Element shows saved payment methods.
      This parameter defaults to `disabled`.
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodRemove:
    docs: >-
      Controls whether the Payment Element displays the option to remove a saved
      payment method. This parameter defaults to `disabled`.


      Allowing buyers to remove their saved payment methods impacts
      subscriptions that depend on that payment method. Removing the payment
      method detaches the [`customer`
      object](https://docs.stripe.com/api/payment_methods/object#payment_method_object-customer)
      from that [PaymentMethod](https://docs.stripe.com/api/payment_methods).
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodSave:
    docs: >-
      Controls whether the Payment Element displays a checkbox offering to save
      a new payment method. This parameter defaults to `disabled`.


      If a customer checks the box, the
      [`allow_redisplay`](https://docs.stripe.com/api/payment_methods/object#payment_method_object-allow_redisplay)
      value on the PaymentMethod is set to `'always'` at confirmation time. For
      PaymentIntents, the
      [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage)
      value is also set to the value defined in `payment_method_save_usage`.
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePaymentElementResourceFeaturesPaymentMethodSaveUsage:
    docs: >-
      When using PaymentIntents and the customer checks the save checkbox, this
      field determines the
      [`setup_future_usage`](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage)
      value used to confirm the PaymentIntent.


      When using SetupIntents, directly configure the
      [`usage`](https://docs.stripe.com/api/setup_intents/object#setup_intent_object-usage)
      value on SetupIntent creation.
    enum:
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerSessionResourceComponentsResourcePricingTable:
    docs: This hash contains whether the pricing table is enabled.
    properties:
      enabled:
        docs: Whether the pricing table is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  CustomerSourceCreated:
    docs: Occurs whenever a new source is created for a customer.
    properties:
      object: CustomerSourceCreatedObject
    source:
      openapi: ../openapi.yaml
  CustomerSourceCreatedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  CustomerSourceDeleted:
    docs: Occurs whenever a source is removed from a customer.
    properties:
      object: CustomerSourceDeletedObject
    source:
      openapi: ../openapi.yaml
  CustomerSourceDeletedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  CustomerSourceExpiring:
    docs: >-
      Occurs whenever a card or source will expire at the end of the month. This
      event only works with legacy integrations using Card or Source objects. If
      you use the PaymentMethod API, this event won't occur.
    properties:
      object: CustomerSourceExpiringObject
    source:
      openapi: ../openapi.yaml
  CustomerSourceExpiringObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: Card
      - type: Source
  CustomerSources:
    docs: The customer's payment sources, if any.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<PaymentSource>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerSourceUpdated:
    docs: Occurs whenever a source's details are changed.
    properties:
      object: CustomerSourceUpdatedObject
    source:
      openapi: ../openapi.yaml
  CustomerSourceUpdatedObject:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
      - type: Source
  CustomerSubscriptionCreated:
    docs: Occurs whenever a customer is signed up for a new plan.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionDeleted:
    docs: Occurs whenever a customer's subscription ends.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionPaused:
    docs: >-
      Occurs whenever a customer's subscription is paused. Only applies when
      subscriptions enter `status=paused`, not when [payment
      collection](https://docs.stripe.com/billing/subscriptions/pause) is
      paused.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionPendingUpdateApplied:
    docs: >-
      Occurs whenever a customer's subscription's pending update is applied, and
      the subscription is updated.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionPendingUpdateExpired:
    docs: >-
      Occurs whenever a customer's subscription's pending update expires before
      the related invoice is paid.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionResumed:
    docs: >-
      Occurs whenever a customer's subscription is no longer paused. Only
      applies when a `status=paused` subscription is
      [resumed](https://docs.stripe.com/api/subscriptions/resume), not when
      [payment collection](https://docs.stripe.com/billing/subscriptions/pause)
      is resumed.
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptions:
    docs: The customer's current subscriptions, if any.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Subscription>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionTrialWillEnd:
    docs: >-
      Occurs three days before a subscription's trial period is scheduled to
      end, or when a trial is ended immediately (using `trial_end=now`).
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerSubscriptionUpdated:
    docs: >-
      Occurs whenever a subscription changes (e.g., switching from one plan to
      another, or changing the status from trial to active).
    properties:
      object:
        type: Subscription
    source:
      openapi: ../openapi.yaml
  CustomerTax:
    docs: ''
    properties:
      automatic_tax:
        docs: >-
          Surfaces if automatic tax computation is possible given the current
          customer location information.
        type: CustomerTaxAutomaticTax
      ip_address:
        docs: >-
          A recent IP address of the customer used for tax reporting and tax
          location inference.
        type: optional<string>
        validation:
          maxLength: 5000
      location:
        docs: The customer's location as identified by Stripe Tax.
        type: optional<CustomerTaxLocation>
    source:
      openapi: ../openapi.yaml
  CustomerTaxAutomaticTax:
    docs: >-
      Surfaces if automatic tax computation is possible given the current
      customer location information.
    enum:
      - failed
      - not_collecting
      - supported
      - unrecognized_location
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerTaxExempt:
    docs: >-
      Describes the customer's tax exemption status, which is `none`, `exempt`,
      or `reverse`. When set to `reverse`, invoice and receipt PDFs include the
      following text: **"Reverse charge"**.
    enum:
      - exempt
      - none
      - reverse
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerTaxIdCreated:
    docs: Occurs whenever a tax ID is created for a customer.
    properties:
      object:
        type: TaxId
    source:
      openapi: ../openapi.yaml
  CustomerTaxIdDeleted:
    docs: Occurs whenever a tax ID is deleted from a customer.
    properties:
      object:
        type: TaxId
    source:
      openapi: ../openapi.yaml
  CustomerTaxIds:
    docs: The customer's tax IDs.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<TaxId>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerTaxIdUpdated:
    docs: Occurs whenever a customer's tax ID is updated.
    properties:
      object:
        type: TaxId
    source:
      openapi: ../openapi.yaml
  CustomerTaxLocation:
    docs: ''
    properties:
      country:
        docs: The customer's country as identified by Stripe Tax.
        type: string
        validation:
          maxLength: 5000
      source:
        docs: The data source used to infer the customer's location.
        type: CustomerTaxLocationSource
      state:
        docs: >-
          The customer's state, county, province, or region as identified by
          Stripe Tax.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  CustomerTaxLocationSource:
    docs: The data source used to infer the customer's location.
    enum:
      - billing_address
      - ip_address
      - payment_method
      - shipping_destination
    inline: true
    source:
      openapi: ../openapi.yaml
  CustomerTestClock:
    discriminated: false
    docs: ID of the test clock that this customer belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  CustomerUpdated:
    docs: Occurs whenever any property of a customer changes.
    properties:
      object:
        type: Customer
    source:
      openapi: ../openapi.yaml
  CustomUnitAmount:
    docs: ''
    properties:
      maximum:
        docs: The maximum unit amount the customer can specify for this item.
        type: optional<integer>
      minimum:
        docs: >-
          The minimum unit amount the customer can specify for this item. Must
          be at least the minimum charge amount.
        type: optional<integer>
      preset:
        docs: The starting unit amount which can be updated by the customer.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  DeletedAccount:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"account">
    source:
      openapi: ../openapi.yaml
  DeletedApplePayDomain:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"apple_pay_domain">
    source:
      openapi: ../openapi.yaml
  DeletedApplication:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      name:
        docs: The name of the application.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"application">
    source:
      openapi: ../openapi.yaml
  DeletedBankAccount:
    docs: ''
    properties:
      currency:
        docs: >-
          Three-letter [ISO code for the
          currency](https://stripe.com/docs/payouts) paid out to the bank
          account.
        type: optional<string>
        validation:
          maxLength: 5000
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"bank_account">
    source:
      openapi: ../openapi.yaml
  DeletedCard:
    docs: ''
    properties:
      currency:
        docs: >-
          Three-letter [ISO code for the
          currency](https://stripe.com/docs/payouts) paid out to the bank
          account.
        type: optional<string>
        validation:
          maxLength: 5000
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"card">
    source:
      openapi: ../openapi.yaml
  DeletedCoupon:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"coupon">
    source:
      openapi: ../openapi.yaml
  DeletedCustomer:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"customer">
    source:
      openapi: ../openapi.yaml
  DeletedDiscount:
    docs: ''
    properties:
      checkout_session:
        docs: >-
          The Checkout session that this coupon is applied to, if it is applied
          to a particular session in payment mode. Will not be present for
          subscription mode.
        type: optional<string>
        validation:
          maxLength: 5000
      coupon:
        type: Coupon
      customer:
        docs: The ID of the customer associated with this discount.
        type: optional<DeletedDiscountCustomer>
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: >-
          The ID of the discount object. Discounts cannot be fetched by ID. Use
          `expand[]=discounts` in API calls to expand discount IDs in an array.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: >-
          The invoice that the discount's coupon was applied to, if it was
          applied directly to a particular invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_item:
        docs: >-
          The invoice item `id` (or invoice line item `id` for invoice line
          items of type='subscription') that the discount's coupon was applied
          to, if it was applied directly to a particular invoice item or invoice
          line item.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"discount">
      promotion_code:
        docs: The promotion code applied to create this discount.
        type: optional<DeletedDiscountPromotionCode>
      start:
        docs: Date that the coupon was applied.
        type: integer
      subscription:
        docs: >-
          The subscription that this coupon is applied to, if it is applied to a
          particular subscription.
        type: optional<string>
        validation:
          maxLength: 5000
      subscription_item:
        docs: >-
          The subscription item that this coupon is applied to, if it is applied
          to a particular subscription item.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DeletedDiscountCustomer:
    discriminated: false
    docs: The ID of the customer associated with this discount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  DeletedDiscountPromotionCode:
    discriminated: false
    docs: The promotion code applied to create this discount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PromotionCode
  DeletedExternalAccount:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: DeletedBankAccount
      - type: DeletedCard
  DeletedInvoice:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"invoice">
    source:
      openapi: ../openapi.yaml
  DeletedInvoiceitem:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"invoiceitem">
    source:
      openapi: ../openapi.yaml
  DeletedPaymentSource:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: DeletedBankAccount
      - type: DeletedCard
  DeletedPerson:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"person">
    source:
      openapi: ../openapi.yaml
  DeletedPlan:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"plan">
    source:
      openapi: ../openapi.yaml
  DeletedPrice:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"price">
    source:
      openapi: ../openapi.yaml
  DeletedProduct:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"product">
    source:
      openapi: ../openapi.yaml
  DeletedProductFeature:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"product_feature">
    source:
      openapi: ../openapi.yaml
  DeletedRadarValueList:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"radar.value_list">
    source:
      openapi: ../openapi.yaml
  DeletedRadarValueListItem:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"radar.value_list_item">
    source:
      openapi: ../openapi.yaml
  DeletedSubscriptionItem:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"subscription_item">
    source:
      openapi: ../openapi.yaml
  DeletedTaxId:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax_id">
    source:
      openapi: ../openapi.yaml
  DeletedTerminalConfiguration:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.configuration">
    source:
      openapi: ../openapi.yaml
  DeletedTerminalLocation:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.location">
    source:
      openapi: ../openapi.yaml
  DeletedTerminalReader:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.reader">
    source:
      openapi: ../openapi.yaml
  DeletedTestHelpersTestClock:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"test_helpers.test_clock">
    source:
      openapi: ../openapi.yaml
  DeletedWebhookEndpoint:
    docs: ''
    properties:
      deleted:
        docs: Always true for a deleted object
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"webhook_endpoint">
    source:
      openapi: ../openapi.yaml
  DestinationDetailsUnimplemented:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  Discount:
    docs: >-
      A discount represents the actual application of a
      [coupon](https://stripe.com/docs/api#coupons) or [promotion
      code](https://stripe.com/docs/api#promotion_codes).

      It contains information about when the discount began, when it will end,
      and what it is applied to.


      Related guide: [Applying discounts to
      subscriptions](https://stripe.com/docs/billing/subscriptions/discounts)
    properties:
      checkout_session:
        docs: >-
          The Checkout session that this coupon is applied to, if it is applied
          to a particular session in payment mode. Will not be present for
          subscription mode.
        type: optional<string>
        validation:
          maxLength: 5000
      coupon:
        type: Coupon
      customer:
        docs: The ID of the customer associated with this discount.
        type: optional<DiscountCustomer>
      end:
        docs: >-
          If the coupon has a duration of `repeating`, the date that this
          discount will end. If the coupon has a duration of `once` or
          `forever`, this attribute will be null.
        type: optional<integer>
      id:
        docs: >-
          The ID of the discount object. Discounts cannot be fetched by ID. Use
          `expand[]=discounts` in API calls to expand discount IDs in an array.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: >-
          The invoice that the discount's coupon was applied to, if it was
          applied directly to a particular invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_item:
        docs: >-
          The invoice item `id` (or invoice line item `id` for invoice line
          items of type='subscription') that the discount's coupon was applied
          to, if it was applied directly to a particular invoice item or invoice
          line item.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"discount">
      promotion_code:
        docs: The promotion code applied to create this discount.
        type: optional<DiscountPromotionCode>
      start:
        docs: Date that the coupon was applied.
        type: integer
      subscription:
        docs: >-
          The subscription that this coupon is applied to, if it is applied to a
          particular subscription.
        type: optional<string>
        validation:
          maxLength: 5000
      subscription_item:
        docs: >-
          The subscription item that this coupon is applied to, if it is applied
          to a particular subscription item.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DiscountCustomer:
    discriminated: false
    docs: The ID of the customer associated with this discount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  DiscountPromotionCode:
    discriminated: false
    docs: The promotion code applied to create this discount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PromotionCode
  DiscountsResourceDiscountAmount:
    docs: ''
    properties:
      amount:
        docs: The amount, in cents (or local equivalent), of the discount.
        type: integer
      discount:
        docs: The discount that was applied to get this discount amount.
        type: DiscountsResourceDiscountAmountDiscount
    source:
      openapi: ../openapi.yaml
  DiscountsResourceDiscountAmountDiscount:
    discriminated: false
    docs: The discount that was applied to get this discount amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
      - type: DeletedDiscount
  DiscountsResourceStackableDiscount:
    docs: ''
    properties:
      coupon:
        docs: ID of the coupon to create a new discount for.
        type: optional<DiscountsResourceStackableDiscountCoupon>
      discount:
        docs: >-
          ID of an existing discount on the object (or one of its ancestors) to
          reuse.
        type: optional<DiscountsResourceStackableDiscountDiscount>
      promotion_code:
        docs: ID of the promotion code to create a new discount for.
        type: optional<DiscountsResourceStackableDiscountPromotionCode>
    source:
      openapi: ../openapi.yaml
  DiscountsResourceStackableDiscountCoupon:
    discriminated: false
    docs: ID of the coupon to create a new discount for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Coupon
  DiscountsResourceStackableDiscountDiscount:
    discriminated: false
    docs: >-
      ID of an existing discount on the object (or one of its ancestors) to
      reuse.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  DiscountsResourceStackableDiscountPromotionCode:
    discriminated: false
    docs: ID of the promotion code to create a new discount for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PromotionCode
  Dispute:
    docs: >-
      A dispute occurs when a customer questions your charge with their card
      issuer.

      When this happens, you have the opportunity to respond to the dispute with

      evidence that shows that the charge is legitimate.


      Related guide: [Disputes and fraud](https://stripe.com/docs/disputes)
    properties:
      amount:
        docs: >-
          Disputed amount. Usually the amount of the charge, but it can differ
          (usually because of currency fluctuation or because only part of the
          order is disputed).
        type: integer
      balance_transactions:
        docs: >-
          List of zero, one, or two balance transactions that show funds
          withdrawn and reinstated to your Stripe account as a result of this
          dispute.
        type: list<BalanceTransaction>
      charge:
        docs: ID of the charge that's disputed.
        type: DisputeCharge
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      enhanced_eligibility_types:
        docs: List of eligibility types that are included in `enhanced_evidence`.
        type: list<literal<"visa_compelling_evidence_3">>
      evidence:
        type: DisputeEvidence
      evidence_details:
        type: DisputeEvidenceDetails
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      is_charge_refundable:
        docs: >-
          If true, it's still possible to refund the disputed payment. After the
          payment has been fully refunded, no further funds are withdrawn from
          your Stripe account as a result of this dispute.
        type: boolean
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      network_reason_code:
        docs: Network-dependent reason code for the dispute.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"dispute">
      payment_intent:
        docs: ID of the PaymentIntent that's disputed.
        type: optional<DisputePaymentIntent>
      payment_method_details:
        type: optional<DisputePaymentMethodDetails>
      reason:
        docs: >-
          Reason given by cardholder for dispute. Possible values are
          `bank_cannot_process`, `check_returned`, `credit_not_processed`,
          `customer_initiated`, `debit_not_authorized`, `duplicate`,
          `fraudulent`, `general`, `incorrect_account_details`,
          `insufficient_funds`, `product_not_received`, `product_unacceptable`,
          `subscription_canceled`, or `unrecognized`. Learn more about [dispute
          reasons](https://stripe.com/docs/disputes/categories).
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          Current status of dispute. Possible values are
          `warning_needs_response`, `warning_under_review`, `warning_closed`,
          `needs_response`, `under_review`, `won`, or `lost`.
        type: DisputeStatus
    source:
      openapi: ../openapi.yaml
  DisputeCharge:
    discriminated: false
    docs: ID of the charge that's disputed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  DisputeEnhancedEligibility:
    docs: ''
    properties:
      visa_compelling_evidence_3:
        type: optional<DisputeEnhancedEligibilityVisaCompellingEvidence3>
      visa_compliance:
        type: optional<DisputeEnhancedEligibilityVisaCompliance>
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEligibilityVisaCompellingEvidence3:
    docs: ''
    properties:
      required_actions:
        docs: >-
          List of actions required to qualify dispute for Visa Compelling
          Evidence 3.0 evidence submission.
        type: >-
          list<DisputeEnhancedEligibilityVisaCompellingEvidence3RequiredActionsItem>
      status:
        docs: Visa Compelling Evidence 3.0 eligibility status.
        type: DisputeEnhancedEligibilityVisaCompellingEvidence3Status
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEligibilityVisaCompellingEvidence3RequiredActionsItem:
    enum:
      - missing_customer_identifiers
      - missing_disputed_transaction_description
      - missing_merchandise_or_services
      - missing_prior_undisputed_transaction_description
      - missing_prior_undisputed_transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEligibilityVisaCompellingEvidence3Status:
    docs: Visa Compelling Evidence 3.0 eligibility status.
    enum:
      - not_qualified
      - qualified
      - requires_action
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEligibilityVisaCompliance:
    docs: ''
    properties:
      status:
        docs: Visa compliance eligibility status.
        type: DisputeEnhancedEligibilityVisaComplianceStatus
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEligibilityVisaComplianceStatus:
    docs: Visa compliance eligibility status.
    enum:
      - fee_acknowledged
      - requires_fee_acknowledgement
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEvidence:
    docs: ''
    properties:
      visa_compelling_evidence_3:
        type: optional<DisputeEnhancedEvidenceVisaCompellingEvidence3>
      visa_compliance:
        type: optional<DisputeEnhancedEvidenceVisaCompliance>
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEvidenceVisaCompellingEvidence3:
    docs: ''
    properties:
      disputed_transaction:
        docs: >-
          Disputed transaction details for Visa Compelling Evidence 3.0 evidence
          submission.
        type: optional<DisputeVisaCompellingEvidence3DisputedTransaction>
      prior_undisputed_transactions:
        docs: >-
          List of exactly two prior undisputed transaction objects for Visa
          Compelling Evidence 3.0 evidence submission.
        type: list<DisputeVisaCompellingEvidence3PriorUndisputedTransaction>
    source:
      openapi: ../openapi.yaml
  DisputeEnhancedEvidenceVisaCompliance:
    docs: ''
    properties:
      fee_acknowledged:
        docs: >-
          A field acknowledging the fee incurred when countering a Visa
          compliance dispute. If this field is set to true, evidence can be
          submitted for the compliance dispute. Stripe collects a 500 USD (or
          local equivalent) amount to cover the network costs associated with
          resolving compliance disputes. Stripe refunds the 500 USD network fee
          if you win the dispute.
        type: boolean
    source:
      openapi: ../openapi.yaml
  DisputeEvidence:
    docs: ''
    properties:
      access_activity_log:
        docs: >-
          Any server or activity logs showing proof that the customer accessed
          or downloaded the purchased digital product. This information should
          include IP addresses, corresponding timestamps, and any detailed
          recorded activity.
        type: optional<string>
        validation:
          maxLength: 150000
      billing_address:
        docs: The billing address provided by the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      cancellation_policy:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Your subscription cancellation policy, as shown to the customer.
        type: optional<DisputeEvidenceCancellationPolicy>
      cancellation_policy_disclosure:
        docs: >-
          An explanation of how and when the customer was shown your refund
          policy prior to purchase.
        type: optional<string>
        validation:
          maxLength: 150000
      cancellation_rebuttal:
        docs: A justification for why the customer's subscription was not canceled.
        type: optional<string>
        validation:
          maxLength: 150000
      customer_communication:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any communication with the customer that you feel is relevant to your
          case. Examples include emails proving that the customer received the
          product or service, or demonstrating their use of or satisfaction with
          the product or service.
        type: optional<DisputeEvidenceCustomerCommunication>
      customer_email_address:
        docs: The email address of the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_name:
        docs: The name of the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_purchase_ip:
        docs: The IP address that the customer used when making the purchase.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_signature:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A
          relevant document or contract showing the customer's signature.
        type: optional<DisputeEvidenceCustomerSignature>
      duplicate_charge_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation for the prior charge that can uniquely identify the
          charge, such as a receipt, shipping label, work order, etc. This
          document should be paired with a similar document from the disputed
          payment that proves the two payments are separate.
        type: optional<DisputeEvidenceDuplicateChargeDocumentation>
      duplicate_charge_explanation:
        docs: >-
          An explanation of the difference between the disputed charge versus
          the prior charge that appears to be a duplicate.
        type: optional<string>
        validation:
          maxLength: 150000
      duplicate_charge_id:
        docs: >-
          The Stripe ID for the prior charge which appears to be a duplicate of
          the disputed charge.
        type: optional<string>
        validation:
          maxLength: 5000
      enhanced_evidence:
        type: DisputeEnhancedEvidence
      product_description:
        docs: A description of the product or service that was sold.
        type: optional<string>
        validation:
          maxLength: 150000
      receipt:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any receipt or message sent to the customer notifying them of the
          charge.
        type: optional<DisputeEvidenceReceipt>
      refund_policy:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Your refund policy, as shown to the customer.
        type: optional<DisputeEvidenceRefundPolicy>
      refund_policy_disclosure:
        docs: >-
          Documentation demonstrating that the customer was shown your refund
          policy prior to purchase.
        type: optional<string>
        validation:
          maxLength: 150000
      refund_refusal_explanation:
        docs: A justification for why the customer is not entitled to a refund.
        type: optional<string>
        validation:
          maxLength: 150000
      service_date:
        docs: >-
          The date on which the customer received or began receiving the
          purchased service, in a clear human-readable format.
        type: optional<string>
        validation:
          maxLength: 5000
      service_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation showing proof that a service was provided to the
          customer. This could include a copy of a signed contract, work order,
          or other form of written agreement.
        type: optional<DisputeEvidenceServiceDocumentation>
      shipping_address:
        docs: >-
          The address to which a physical product was shipped. You should try to
          include as complete address information as possible.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_carrier:
        docs: >-
          The delivery service that shipped a physical product, such as Fedex,
          UPS, USPS, etc. If multiple carriers were used for this purchase,
          please separate them with commas.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_date:
        docs: >-
          The date on which a physical product began its route to the shipping
          address, in a clear human-readable format.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Documentation showing proof that a product was shipped to the customer
          at the same address the customer provided to you. This could include a
          copy of the shipment receipt, shipping label, etc. It should show the
          customer's full shipping address, if possible.
        type: optional<DisputeEvidenceShippingDocumentation>
      shipping_tracking_number:
        docs: >-
          The tracking number for a physical product, obtained from the delivery
          service. If multiple tracking numbers were generated for this
          purchase, please separate them with commas.
        type: optional<string>
        validation:
          maxLength: 5000
      uncategorized_file:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Any additional evidence or statements.
        type: optional<DisputeEvidenceUncategorizedFile>
      uncategorized_text:
        docs: Any additional evidence or statements.
        type: optional<string>
        validation:
          maxLength: 150000
    source:
      openapi: ../openapi.yaml
  DisputeEvidenceCancellationPolicy:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your
      subscription cancellation policy, as shown to the customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceCustomerCommunication:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any
      communication with the customer that you feel is relevant to your case.
      Examples include emails proving that the customer received the product or
      service, or demonstrating their use of or satisfaction with the product or
      service.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceCustomerSignature:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) A
      relevant document or contract showing the customer's signature.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceDetails:
    docs: ''
    properties:
      due_by:
        docs: >-
          Date by which evidence must be submitted in order to successfully
          challenge dispute. Will be 0 if the customer's bank or credit card
          company doesn't allow a response for this particular dispute.
        type: optional<integer>
      enhanced_eligibility:
        type: DisputeEnhancedEligibility
      has_evidence:
        docs: Whether evidence has been staged for this dispute.
        type: boolean
      past_due:
        docs: >-
          Whether the last evidence submission was submitted past the due date.
          Defaults to `false` if no evidence submissions have occurred. If
          `true`, then delivery of the latest evidence is *not* guaranteed.
        type: boolean
      submission_count:
        docs: >-
          The number of times evidence has been submitted. Typically, you may
          only submit evidence once.
        type: integer
    source:
      openapi: ../openapi.yaml
  DisputeEvidenceDuplicateChargeDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Documentation for the prior charge that can uniquely identify the charge,
      such as a receipt, shipping label, work order, etc. This document should
      be paired with a similar document from the disputed payment that proves
      the two payments are separate.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceReceipt:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any
      receipt or message sent to the customer notifying them of the charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceRefundPolicy:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Your
      refund policy, as shown to the customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceServiceDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Documentation showing proof that a service was provided to the customer.
      This could include a copy of a signed contract, work order, or other form
      of written agreement.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceShippingDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Documentation showing proof that a product was shipped to the customer at
      the same address the customer provided to you. This could include a copy
      of the shipment receipt, shipping label, etc. It should show the
      customer's full shipping address, if possible.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputeEvidenceUncategorizedFile:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Any
      additional evidence or statements.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  DisputePaymentIntent:
    discriminated: false
    docs: ID of the PaymentIntent that's disputed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  DisputePaymentMethodDetails:
    docs: ''
    properties:
      amazon_pay:
        type: optional<DisputePaymentMethodDetailsAmazonPay>
      card:
        type: optional<DisputePaymentMethodDetailsCard>
      klarna:
        type: optional<DisputePaymentMethodDetailsKlarna>
      paypal:
        type: optional<DisputePaymentMethodDetailsPaypal>
      type:
        docs: Payment method type.
        type: DisputePaymentMethodDetailsType
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsAmazonPay:
    docs: ''
    properties:
      dispute_type:
        docs: The AmazonPay dispute type, chargeback or claim
        type: optional<DisputePaymentMethodDetailsAmazonPayDisputeType>
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsAmazonPayDisputeType:
    docs: The AmazonPay dispute type, chargeback or claim
    enum:
      - chargeback
      - claim
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsCard:
    docs: ''
    properties:
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
        validation:
          maxLength: 5000
      case_type:
        docs: >-
          The type of dispute opened. Different case types may have varying fees
          and financial impact.
        type: DisputePaymentMethodDetailsCardCaseType
      network_reason_code:
        docs: >-
          The card network's specific dispute reason code, which maps to one of
          Stripe's primary dispute categories to simplify response guidance. The
          [Network code
          map](https://stripe.com/docs/disputes/categories#network-code-map)
          lists all available dispute reason codes by network.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsCardCaseType:
    docs: >-
      The type of dispute opened. Different case types may have varying fees and
      financial impact.
    enum:
      - chargeback
      - inquiry
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsKlarna:
    docs: ''
    properties:
      reason_code:
        docs: The reason for the dispute as defined by Klarna
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsPaypal:
    docs: ''
    properties:
      case_id:
        docs: The ID of the dispute in PayPal.
        type: optional<string>
        validation:
          maxLength: 5000
      reason_code:
        docs: The reason for the dispute as defined by PayPal
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DisputePaymentMethodDetailsType:
    docs: Payment method type.
    enum:
      - amazon_pay
      - card
      - klarna
      - paypal
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeStatus:
    docs: >-
      Current status of dispute. Possible values are `warning_needs_response`,
      `warning_under_review`, `warning_closed`, `needs_response`,
      `under_review`, `won`, or `lost`.
    enum:
      - lost
      - needs_response
      - under_review
      - warning_closed
      - warning_needs_response
      - warning_under_review
      - won
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeTransactionShippingAddress:
    docs: ''
    properties:
      city:
        docs: City, district, suburb, town, or village.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      line1:
        docs: Address line 1 (e.g., street, PO Box, or company name).
        type: optional<string>
        validation:
          maxLength: 5000
      line2:
        docs: Address line 2 (e.g., apartment, suite, unit, or building).
        type: optional<string>
        validation:
          maxLength: 5000
      postal_code:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: State, county, province, or region.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  DisputeVisaCompellingEvidence3DisputedTransaction:
    docs: ''
    properties:
      customer_account_id:
        docs: >-
          User Account ID used to log into business platform. Must be
          recognizable by the user.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_device_fingerprint:
        docs: >-
          Unique identifier of the cardholder’s device derived from a
          combination of at least two hardware and software attributes. Must be
          at least 20 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_device_id:
        docs: >-
          Unique identifier of the cardholder’s device such as a device serial
          number (e.g., International Mobile Equipment Identity [IMEI]). Must be
          at least 15 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_email_address:
        docs: The email address of the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_purchase_ip:
        docs: The IP address that the customer used when making the purchase.
        type: optional<string>
        validation:
          maxLength: 5000
      merchandise_or_services:
        docs: Categorization of disputed payment.
        type: >-
          optional<DisputeVisaCompellingEvidence3DisputedTransactionMerchandiseOrServices>
      product_description:
        docs: A description of the product or service that was sold.
        type: optional<string>
        validation:
          maxLength: 150000
      shipping_address:
        docs: >-
          The address to which a physical product was shipped. All fields are
          required for Visa Compelling Evidence 3.0 evidence submission.
        type: optional<DisputeTransactionShippingAddress>
    source:
      openapi: ../openapi.yaml
  DisputeVisaCompellingEvidence3DisputedTransactionMerchandiseOrServices:
    docs: Categorization of disputed payment.
    enum:
      - merchandise
      - services
    inline: true
    source:
      openapi: ../openapi.yaml
  DisputeVisaCompellingEvidence3PriorUndisputedTransaction:
    docs: ''
    properties:
      charge:
        docs: >-
          Stripe charge ID for the Visa Compelling Evidence 3.0 eligible prior
          charge.
        type: string
        validation:
          maxLength: 5000
      customer_account_id:
        docs: >-
          User Account ID used to log into business platform. Must be
          recognizable by the user.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_device_fingerprint:
        docs: >-
          Unique identifier of the cardholder’s device derived from a
          combination of at least two hardware and software attributes. Must be
          at least 20 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_device_id:
        docs: >-
          Unique identifier of the cardholder’s device such as a device serial
          number (e.g., International Mobile Equipment Identity [IMEI]). Must be
          at least 15 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_email_address:
        docs: The email address of the customer.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_purchase_ip:
        docs: The IP address that the customer used when making the purchase.
        type: optional<string>
        validation:
          maxLength: 5000
      product_description:
        docs: A description of the product or service that was sold.
        type: optional<string>
        validation:
          maxLength: 150000
      shipping_address:
        docs: >-
          The address to which a physical product was shipped. All fields are
          required for Visa Compelling Evidence 3.0 evidence submission.
        type: optional<DisputeTransactionShippingAddress>
    source:
      openapi: ../openapi.yaml
  EmailSent:
    docs: ''
    properties:
      email_sent_at:
        docs: The timestamp when the email was sent.
        type: integer
      email_sent_to:
        docs: The recipient's email address.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  EntitlementsActiveEntitlement:
    docs: An active entitlement describes access to a feature for a customer.
    properties:
      feature:
        docs: >-
          The [Feature](https://stripe.com/docs/api/entitlements/feature) that
          the customer is entitled to.
        type: EntitlementsActiveEntitlementFeature
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      lookup_key:
        docs: >-
          A unique key you provide as your own system identifier. This may be up
          to 80 characters.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"entitlements.active_entitlement">
    source:
      openapi: ../openapi.yaml
  EntitlementsActiveEntitlementFeature:
    discriminated: false
    docs: >-
      The [Feature](https://stripe.com/docs/api/entitlements/feature) that the
      customer is entitled to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: EntitlementsFeature
  EntitlementsActiveEntitlementSummary:
    docs: A summary of a customer's active entitlements.
    properties:
      customer:
        docs: The customer that is entitled to this feature.
        type: string
        validation:
          maxLength: 5000
      entitlements:
        docs: The list of entitlements this customer has.
        type: EntitlementsActiveEntitlementSummaryEntitlements
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"entitlements.active_entitlement_summary">
    source:
      openapi: ../openapi.yaml
  EntitlementsActiveEntitlementSummaryEntitlements:
    docs: The list of entitlements this customer has.
    inline: true
    properties:
      data: list<EntitlementsActiveEntitlement>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  EntitlementsActiveEntitlementSummaryUpdated:
    docs: Occurs whenever a customer's entitlements change.
    properties:
      object:
        type: EntitlementsActiveEntitlementSummary
    source:
      openapi: ../openapi.yaml
  EntitlementsFeature:
    docs: >-
      A feature represents a monetizable ability or functionality in your
      system.

      Features can be assigned to products, and when those products are
      purchased, Stripe will create an entitlement to the feature for the
      purchasing customer.
    properties:
      active:
        docs: >-
          Inactive features cannot be attached to new products and will not be
          returned from the features list endpoint.
        type: boolean
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      lookup_key:
        docs: >-
          A unique key you provide as your own system identifier. This may be up
          to 80 characters.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of key-value pairs that you can attach to an object. This can be
          useful for storing additional information about the object in a
          structured format.
        type: map<string, string>
      name:
        docs: >-
          The feature's name, for your own purpose, not meant to be displayable
          to the customer.
        type: string
        validation:
          maxLength: 80
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"entitlements.feature">
    source:
      openapi: ../openapi.yaml
  EphemeralKey:
    docs: ''
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expires:
        docs: >-
          Time at which the key will expire. Measured in seconds since the Unix
          epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"ephemeral_key">
      secret:
        docs: >-
          The key's secret. You can use this value to make authorized requests
          to the Stripe API.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Error:
    docs: An error response from the Stripe API
    properties:
      error:
        type: ApiErrors
    source:
      openapi: ../openapi.yaml
  Event:
    docs: >-
      Events are our way of letting you know when something interesting happens
      in

      your account. When an interesting event occurs, we create a new `Event`

      object. For example, when a charge succeeds, we create a
      `charge.succeeded`

      event, and when an invoice payment attempt fails, we create an

      `invoice.payment_failed` event. Certain API requests might create multiple

      events. For example, if you create a new subscription for a

      customer, you receive both a `customer.subscription.created` event and a

      `charge.succeeded` event.


      Events occur when the state of another API resource changes. The event's
      data

      field embeds the resource's state at the time of the change. For

      example, a `charge.succeeded` event contains a charge, and an

      `invoice.payment_failed` event contains an invoice.


      As with other API resources, you can use endpoints to retrieve an

      [individual event](https://stripe.com/docs/api#retrieve_event) or a [list
      of events](https://stripe.com/docs/api#list_events)

      from the API. We also have a separate

      [webhooks](http://en.wikipedia.org/wiki/Webhook) system for sending the

      `Event` objects directly to an endpoint on your server. You can manage

      webhooks in your

      [account settings](https://dashboard.stripe.com/account/webhooks). Learn
      how

      to [listen for events](https://docs.stripe.com/webhooks)

      so that your integration can automatically trigger reactions.


      When using [Connect](https://docs.stripe.com/connect), you can also
      receive event notifications

      that occur in connected accounts. For these events, there's an

      additional `account` attribute in the received `Event` object.


      We only guarantee access to events through the [Retrieve Event
      API](https://stripe.com/docs/api#retrieve_event)

      for 30 days.
    properties:
      account:
        docs: The connected account that originates the event.
        type: optional<string>
        validation:
          maxLength: 5000
      api_version:
        docs: >-
          The Stripe API version used to render `data`. This property is
          populated only for events on or after October 31, 2014.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      data:
        type: NotificationEventData
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"event">
      pending_webhooks:
        docs: >-
          Number of webhooks that haven't been successfully delivered (for
          example, to return a 20x response) to the URLs you specify.
        type: integer
      request:
        docs: Information on the API request that triggers the event.
        type: optional<NotificationEventRequest>
      type:
        docs: >-
          Description of the event (for example, `invoice.created` or
          `charge.refunded`).
        type: EventType
    source:
      openapi: ../openapi.yaml
  EventType:
    docs: >-
      Description of the event (for example, `invoice.created` or
      `charge.refunded`).
    enum:
      - name: AccountApplicationAuthorized
        value: account.application.authorized
      - name: AccountApplicationDeauthorized
        value: account.application.deauthorized
      - name: AccountExternalAccountCreated
        value: account.external_account.created
      - name: AccountExternalAccountDeleted
        value: account.external_account.deleted
      - name: AccountExternalAccountUpdated
        value: account.external_account.updated
      - name: AccountUpdated
        value: account.updated
      - name: ApplicationFeeCreated
        value: application_fee.created
      - name: ApplicationFeeRefundUpdated
        value: application_fee.refund.updated
      - name: ApplicationFeeRefunded
        value: application_fee.refunded
      - name: BalanceAvailable
        value: balance.available
      - name: BillingAlertTriggered
        value: billing.alert.triggered
      - name: BillingPortalConfigurationCreated
        value: billing_portal.configuration.created
      - name: BillingPortalConfigurationUpdated
        value: billing_portal.configuration.updated
      - name: BillingPortalSessionCreated
        value: billing_portal.session.created
      - name: CapabilityUpdated
        value: capability.updated
      - name: CashBalanceFundsAvailable
        value: cash_balance.funds_available
      - name: ChargeCaptured
        value: charge.captured
      - name: ChargeDisputeClosed
        value: charge.dispute.closed
      - name: ChargeDisputeCreated
        value: charge.dispute.created
      - name: ChargeDisputeFundsReinstated
        value: charge.dispute.funds_reinstated
      - name: ChargeDisputeFundsWithdrawn
        value: charge.dispute.funds_withdrawn
      - name: ChargeDisputeUpdated
        value: charge.dispute.updated
      - name: ChargeExpired
        value: charge.expired
      - name: ChargeFailed
        value: charge.failed
      - name: ChargePending
        value: charge.pending
      - name: ChargeRefundUpdated
        value: charge.refund.updated
      - name: ChargeRefunded
        value: charge.refunded
      - name: ChargeSucceeded
        value: charge.succeeded
      - name: ChargeUpdated
        value: charge.updated
      - name: CheckoutSessionAsyncPaymentFailed
        value: checkout.session.async_payment_failed
      - name: CheckoutSessionAsyncPaymentSucceeded
        value: checkout.session.async_payment_succeeded
      - name: CheckoutSessionCompleted
        value: checkout.session.completed
      - name: CheckoutSessionExpired
        value: checkout.session.expired
      - name: ClimateOrderCanceled
        value: climate.order.canceled
      - name: ClimateOrderCreated
        value: climate.order.created
      - name: ClimateOrderDelayed
        value: climate.order.delayed
      - name: ClimateOrderDelivered
        value: climate.order.delivered
      - name: ClimateOrderProductSubstituted
        value: climate.order.product_substituted
      - name: ClimateProductCreated
        value: climate.product.created
      - name: ClimateProductPricingUpdated
        value: climate.product.pricing_updated
      - name: CouponCreated
        value: coupon.created
      - name: CouponDeleted
        value: coupon.deleted
      - name: CouponUpdated
        value: coupon.updated
      - name: CreditNoteCreated
        value: credit_note.created
      - name: CreditNoteUpdated
        value: credit_note.updated
      - name: CreditNoteVoided
        value: credit_note.voided
      - name: CustomerCreated
        value: customer.created
      - name: CustomerDeleted
        value: customer.deleted
      - name: CustomerDiscountCreated
        value: customer.discount.created
      - name: CustomerDiscountDeleted
        value: customer.discount.deleted
      - name: CustomerDiscountUpdated
        value: customer.discount.updated
      - name: CustomerSourceCreated
        value: customer.source.created
      - name: CustomerSourceDeleted
        value: customer.source.deleted
      - name: CustomerSourceExpiring
        value: customer.source.expiring
      - name: CustomerSourceUpdated
        value: customer.source.updated
      - name: CustomerSubscriptionCreated
        value: customer.subscription.created
      - name: CustomerSubscriptionDeleted
        value: customer.subscription.deleted
      - name: CustomerSubscriptionPaused
        value: customer.subscription.paused
      - name: CustomerSubscriptionPendingUpdateApplied
        value: customer.subscription.pending_update_applied
      - name: CustomerSubscriptionPendingUpdateExpired
        value: customer.subscription.pending_update_expired
      - name: CustomerSubscriptionResumed
        value: customer.subscription.resumed
      - name: CustomerSubscriptionTrialWillEnd
        value: customer.subscription.trial_will_end
      - name: CustomerSubscriptionUpdated
        value: customer.subscription.updated
      - name: CustomerTaxIdCreated
        value: customer.tax_id.created
      - name: CustomerTaxIdDeleted
        value: customer.tax_id.deleted
      - name: CustomerTaxIdUpdated
        value: customer.tax_id.updated
      - name: CustomerUpdated
        value: customer.updated
      - name: CustomerCashBalanceTransactionCreated
        value: customer_cash_balance_transaction.created
      - name: EntitlementsActiveEntitlementSummaryUpdated
        value: entitlements.active_entitlement_summary.updated
      - name: FileCreated
        value: file.created
      - name: FinancialConnectionsAccountCreated
        value: financial_connections.account.created
      - name: FinancialConnectionsAccountDeactivated
        value: financial_connections.account.deactivated
      - name: FinancialConnectionsAccountDisconnected
        value: financial_connections.account.disconnected
      - name: FinancialConnectionsAccountReactivated
        value: financial_connections.account.reactivated
      - name: FinancialConnectionsAccountRefreshedBalance
        value: financial_connections.account.refreshed_balance
      - name: FinancialConnectionsAccountRefreshedOwnership
        value: financial_connections.account.refreshed_ownership
      - name: FinancialConnectionsAccountRefreshedTransactions
        value: financial_connections.account.refreshed_transactions
      - name: IdentityVerificationSessionCanceled
        value: identity.verification_session.canceled
      - name: IdentityVerificationSessionCreated
        value: identity.verification_session.created
      - name: IdentityVerificationSessionProcessing
        value: identity.verification_session.processing
      - name: IdentityVerificationSessionRedacted
        value: identity.verification_session.redacted
      - name: IdentityVerificationSessionRequiresInput
        value: identity.verification_session.requires_input
      - name: IdentityVerificationSessionVerified
        value: identity.verification_session.verified
      - name: InvoiceCreated
        value: invoice.created
      - name: InvoiceDeleted
        value: invoice.deleted
      - name: InvoiceFinalizationFailed
        value: invoice.finalization_failed
      - name: InvoiceFinalized
        value: invoice.finalized
      - name: InvoiceMarkedUncollectible
        value: invoice.marked_uncollectible
      - name: InvoiceOverdue
        value: invoice.overdue
      - name: InvoicePaid
        value: invoice.paid
      - name: InvoicePaymentActionRequired
        value: invoice.payment_action_required
      - name: InvoicePaymentFailed
        value: invoice.payment_failed
      - name: InvoicePaymentSucceeded
        value: invoice.payment_succeeded
      - name: InvoiceSent
        value: invoice.sent
      - name: InvoiceUpcoming
        value: invoice.upcoming
      - name: InvoiceUpdated
        value: invoice.updated
      - name: InvoiceVoided
        value: invoice.voided
      - name: InvoiceWillBeDue
        value: invoice.will_be_due
      - name: InvoiceitemCreated
        value: invoiceitem.created
      - name: InvoiceitemDeleted
        value: invoiceitem.deleted
      - name: IssuingAuthorizationCreated
        value: issuing_authorization.created
      - name: IssuingAuthorizationRequest
        value: issuing_authorization.request
      - name: IssuingAuthorizationUpdated
        value: issuing_authorization.updated
      - name: IssuingCardCreated
        value: issuing_card.created
      - name: IssuingCardUpdated
        value: issuing_card.updated
      - name: IssuingCardholderCreated
        value: issuing_cardholder.created
      - name: IssuingCardholderUpdated
        value: issuing_cardholder.updated
      - name: IssuingDisputeClosed
        value: issuing_dispute.closed
      - name: IssuingDisputeCreated
        value: issuing_dispute.created
      - name: IssuingDisputeFundsReinstated
        value: issuing_dispute.funds_reinstated
      - name: IssuingDisputeFundsRescinded
        value: issuing_dispute.funds_rescinded
      - name: IssuingDisputeSubmitted
        value: issuing_dispute.submitted
      - name: IssuingDisputeUpdated
        value: issuing_dispute.updated
      - name: IssuingPersonalizationDesignActivated
        value: issuing_personalization_design.activated
      - name: IssuingPersonalizationDesignDeactivated
        value: issuing_personalization_design.deactivated
      - name: IssuingPersonalizationDesignRejected
        value: issuing_personalization_design.rejected
      - name: IssuingPersonalizationDesignUpdated
        value: issuing_personalization_design.updated
      - name: IssuingTokenCreated
        value: issuing_token.created
      - name: IssuingTokenUpdated
        value: issuing_token.updated
      - name: IssuingTransactionCreated
        value: issuing_transaction.created
      - name: IssuingTransactionPurchaseDetailsReceiptUpdated
        value: issuing_transaction.purchase_details_receipt_updated
      - name: IssuingTransactionUpdated
        value: issuing_transaction.updated
      - name: MandateUpdated
        value: mandate.updated
      - name: PaymentIntentAmountCapturableUpdated
        value: payment_intent.amount_capturable_updated
      - name: PaymentIntentCanceled
        value: payment_intent.canceled
      - name: PaymentIntentCreated
        value: payment_intent.created
      - name: PaymentIntentPartiallyFunded
        value: payment_intent.partially_funded
      - name: PaymentIntentPaymentFailed
        value: payment_intent.payment_failed
      - name: PaymentIntentProcessing
        value: payment_intent.processing
      - name: PaymentIntentRequiresAction
        value: payment_intent.requires_action
      - name: PaymentIntentSucceeded
        value: payment_intent.succeeded
      - name: PaymentLinkCreated
        value: payment_link.created
      - name: PaymentLinkUpdated
        value: payment_link.updated
      - name: PaymentMethodAttached
        value: payment_method.attached
      - name: PaymentMethodAutomaticallyUpdated
        value: payment_method.automatically_updated
      - name: PaymentMethodDetached
        value: payment_method.detached
      - name: PaymentMethodUpdated
        value: payment_method.updated
      - name: PayoutCanceled
        value: payout.canceled
      - name: PayoutCreated
        value: payout.created
      - name: PayoutFailed
        value: payout.failed
      - name: PayoutPaid
        value: payout.paid
      - name: PayoutReconciliationCompleted
        value: payout.reconciliation_completed
      - name: PayoutUpdated
        value: payout.updated
      - name: PersonCreated
        value: person.created
      - name: PersonDeleted
        value: person.deleted
      - name: PersonUpdated
        value: person.updated
      - name: PlanCreated
        value: plan.created
      - name: PlanDeleted
        value: plan.deleted
      - name: PlanUpdated
        value: plan.updated
      - name: PriceCreated
        value: price.created
      - name: PriceDeleted
        value: price.deleted
      - name: PriceUpdated
        value: price.updated
      - name: ProductCreated
        value: product.created
      - name: ProductDeleted
        value: product.deleted
      - name: ProductUpdated
        value: product.updated
      - name: PromotionCodeCreated
        value: promotion_code.created
      - name: PromotionCodeUpdated
        value: promotion_code.updated
      - name: QuoteAccepted
        value: quote.accepted
      - name: QuoteCanceled
        value: quote.canceled
      - name: QuoteCreated
        value: quote.created
      - name: QuoteFinalized
        value: quote.finalized
      - name: RadarEarlyFraudWarningCreated
        value: radar.early_fraud_warning.created
      - name: RadarEarlyFraudWarningUpdated
        value: radar.early_fraud_warning.updated
      - name: RefundCreated
        value: refund.created
      - name: RefundFailed
        value: refund.failed
      - name: RefundUpdated
        value: refund.updated
      - name: ReportingReportRunFailed
        value: reporting.report_run.failed
      - name: ReportingReportRunSucceeded
        value: reporting.report_run.succeeded
      - name: ReportingReportTypeUpdated
        value: reporting.report_type.updated
      - name: ReviewClosed
        value: review.closed
      - name: ReviewOpened
        value: review.opened
      - name: SetupIntentCanceled
        value: setup_intent.canceled
      - name: SetupIntentCreated
        value: setup_intent.created
      - name: SetupIntentRequiresAction
        value: setup_intent.requires_action
      - name: SetupIntentSetupFailed
        value: setup_intent.setup_failed
      - name: SetupIntentSucceeded
        value: setup_intent.succeeded
      - name: SigmaScheduledQueryRunCreated
        value: sigma.scheduled_query_run.created
      - name: SourceCanceled
        value: source.canceled
      - name: SourceChargeable
        value: source.chargeable
      - name: SourceFailed
        value: source.failed
      - name: SourceMandateNotification
        value: source.mandate_notification
      - name: SourceRefundAttributesRequired
        value: source.refund_attributes_required
      - name: SourceTransactionCreated
        value: source.transaction.created
      - name: SourceTransactionUpdated
        value: source.transaction.updated
      - name: SubscriptionScheduleAborted
        value: subscription_schedule.aborted
      - name: SubscriptionScheduleCanceled
        value: subscription_schedule.canceled
      - name: SubscriptionScheduleCompleted
        value: subscription_schedule.completed
      - name: SubscriptionScheduleCreated
        value: subscription_schedule.created
      - name: SubscriptionScheduleExpiring
        value: subscription_schedule.expiring
      - name: SubscriptionScheduleReleased
        value: subscription_schedule.released
      - name: SubscriptionScheduleUpdated
        value: subscription_schedule.updated
      - name: TaxSettingsUpdated
        value: tax.settings.updated
      - name: TaxRateCreated
        value: tax_rate.created
      - name: TaxRateUpdated
        value: tax_rate.updated
      - name: TerminalReaderActionFailed
        value: terminal.reader.action_failed
      - name: TerminalReaderActionSucceeded
        value: terminal.reader.action_succeeded
      - name: TestHelpersTestClockAdvancing
        value: test_helpers.test_clock.advancing
      - name: TestHelpersTestClockCreated
        value: test_helpers.test_clock.created
      - name: TestHelpersTestClockDeleted
        value: test_helpers.test_clock.deleted
      - name: TestHelpersTestClockInternalFailure
        value: test_helpers.test_clock.internal_failure
      - name: TestHelpersTestClockReady
        value: test_helpers.test_clock.ready
      - name: TopupCanceled
        value: topup.canceled
      - name: TopupCreated
        value: topup.created
      - name: TopupFailed
        value: topup.failed
      - name: TopupReversed
        value: topup.reversed
      - name: TopupSucceeded
        value: topup.succeeded
      - name: TransferCreated
        value: transfer.created
      - name: TransferReversed
        value: transfer.reversed
      - name: TransferUpdated
        value: transfer.updated
      - name: TreasuryCreditReversalCreated
        value: treasury.credit_reversal.created
      - name: TreasuryCreditReversalPosted
        value: treasury.credit_reversal.posted
      - name: TreasuryDebitReversalCompleted
        value: treasury.debit_reversal.completed
      - name: TreasuryDebitReversalCreated
        value: treasury.debit_reversal.created
      - name: TreasuryDebitReversalInitialCreditGranted
        value: treasury.debit_reversal.initial_credit_granted
      - name: TreasuryFinancialAccountClosed
        value: treasury.financial_account.closed
      - name: TreasuryFinancialAccountCreated
        value: treasury.financial_account.created
      - name: TreasuryFinancialAccountFeaturesStatusUpdated
        value: treasury.financial_account.features_status_updated
      - name: TreasuryInboundTransferCanceled
        value: treasury.inbound_transfer.canceled
      - name: TreasuryInboundTransferCreated
        value: treasury.inbound_transfer.created
      - name: TreasuryInboundTransferFailed
        value: treasury.inbound_transfer.failed
      - name: TreasuryInboundTransferSucceeded
        value: treasury.inbound_transfer.succeeded
      - name: TreasuryOutboundPaymentCanceled
        value: treasury.outbound_payment.canceled
      - name: TreasuryOutboundPaymentCreated
        value: treasury.outbound_payment.created
      - name: TreasuryOutboundPaymentExpectedArrivalDateUpdated
        value: treasury.outbound_payment.expected_arrival_date_updated
      - name: TreasuryOutboundPaymentFailed
        value: treasury.outbound_payment.failed
      - name: TreasuryOutboundPaymentPosted
        value: treasury.outbound_payment.posted
      - name: TreasuryOutboundPaymentReturned
        value: treasury.outbound_payment.returned
      - name: TreasuryOutboundPaymentTrackingDetailsUpdated
        value: treasury.outbound_payment.tracking_details_updated
      - name: TreasuryOutboundTransferCanceled
        value: treasury.outbound_transfer.canceled
      - name: TreasuryOutboundTransferCreated
        value: treasury.outbound_transfer.created
      - name: TreasuryOutboundTransferExpectedArrivalDateUpdated
        value: treasury.outbound_transfer.expected_arrival_date_updated
      - name: TreasuryOutboundTransferFailed
        value: treasury.outbound_transfer.failed
      - name: TreasuryOutboundTransferPosted
        value: treasury.outbound_transfer.posted
      - name: TreasuryOutboundTransferReturned
        value: treasury.outbound_transfer.returned
      - name: TreasuryOutboundTransferTrackingDetailsUpdated
        value: treasury.outbound_transfer.tracking_details_updated
      - name: TreasuryReceivedCreditCreated
        value: treasury.received_credit.created
      - name: TreasuryReceivedCreditFailed
        value: treasury.received_credit.failed
      - name: TreasuryReceivedCreditSucceeded
        value: treasury.received_credit.succeeded
      - name: TreasuryReceivedDebitCreated
        value: treasury.received_debit.created
    inline: true
    source:
      openapi: ../openapi.yaml
  ExchangeRate:
    docs: >-
      `ExchangeRate` objects allow you to determine the rates that Stripe is
      currently

      using to convert from one currency to another. Since this number is
      variable

      throughout the day, there are various reasons why you might want to know
      the current

      rate (for example, to dynamically price an item for a user with a default

      payment in a foreign currency).


      Please refer to our [Exchange Rates API](https://stripe.com/docs/fx-rates)
      guide for more details.


      *[Note: this integration path is supported but no longer recommended]*
      Additionally,

      you can guarantee that a charge is made with an exchange rate that you
      expect is

      current. To do so, you must pass in the exchange_rate to charges
      endpoints. If the

      value is no longer up to date, the charge won't go through. Please refer
      to our

      [Using with charges](https://stripe.com/docs/exchange-rates) guide for
      more details.


      -----


      &nbsp;


      *This Exchange Rates API is a Beta Service and is subject to Stripe's
      terms of service. You may use the API solely for the purpose of
      transacting on Stripe. For example, the API may be queried in order to:*


      - *localize prices for processing payments on Stripe*

      - *reconcile Stripe transactions*

      - *determine how much money to send to a connected account*

      - *determine app fees to charge a connected account*


      *Using this Exchange Rates API beta for any purpose other than to transact
      on Stripe is strictly prohibited and constitutes a violation of Stripe's
      terms of service.*
    properties:
      id:
        docs: >-
          Unique identifier for the object. Represented as the three-letter [ISO
          currency code](https://www.iso.org/iso-4217-currency-codes.html) in
          lowercase.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"exchange_rate">
      rates:
        docs: >-
          Hash where the keys are supported currencies and the values are the
          exchange rate at which the base id currency converts to the key
          currency.
        type: map<string, double>
    source:
      openapi: ../openapi.yaml
  ExternalAccount:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: BankAccount
      - type: Card
  ExternalAccountRequirements:
    docs: ''
    properties:
      currently_due:
        docs: >-
          Fields that need to be collected to keep the external account enabled.
          If not collected by `current_deadline`, these fields appear in
          `past_due` as well, and the account is disabled.
        type: optional<list<string>>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: optional<list<AccountRequirementsError>>
      past_due:
        docs: >-
          Fields that weren't collected by `current_deadline`. These fields need
          to be collected to enable the external account.
        type: optional<list<string>>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due`, `currently_due`, or `past_due`. Fields might appear
          in `eventually_due`, `currently_due`, or `past_due` and in
          `pending_verification` if verification fails but another verification
          is still pending.
        type: optional<list<string>>
    source:
      openapi: ../openapi.yaml
  Fee:
    docs: ''
    properties:
      amount:
        docs: Amount of the fee, in cents.
        type: integer
      application:
        docs: ID of the Connect application that earned the fee.
        type: optional<string>
        validation:
          maxLength: 5000
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: >-
          Type of the fee, one of: `application_fee`,
          `payment_method_passthrough_fee`, `stripe_fee` or `tax`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FeeRefund:
    docs: >-
      `Application Fee Refund` objects allow you to refund an application fee
      that

      has previously been created but not yet refunded. Funds will be refunded
      to

      the Stripe account from which the fee was originally collected.


      Related guide: [Refunding application
      fees](https://stripe.com/docs/connect/destination-charges#refunding-app-fee)
    properties:
      amount:
        docs: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        docs: Balance transaction that describes the impact on your account balance.
        type: optional<FeeRefundBalanceTransaction>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      fee:
        docs: ID of the application fee that was refunded.
        type: FeeRefundFee
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"fee_refund">
    source:
      openapi: ../openapi.yaml
  FeeRefundBalanceTransaction:
    discriminated: false
    docs: Balance transaction that describes the impact on your account balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  FeeRefundFee:
    discriminated: false
    docs: ID of the application fee that was refunded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ApplicationFee
  File:
    docs: >-
      This object represents files hosted on Stripe's servers. You can upload

      files with the [create file](https://stripe.com/docs/api#create_file)
      request

      (for example, when uploading dispute evidence). Stripe also

      creates files independently (for example, the results of a [Sigma
      scheduled

      query](#scheduled_queries)).


      Related guide: [File upload guide](https://stripe.com/docs/file-upload)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expires_at:
        docs: The file expires and isn't available at this time in epoch seconds.
        type: optional<integer>
      filename:
        docs: The suitable name for saving the file to a filesystem.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      links:
        docs: >-
          A list of [file links](https://stripe.com/docs/api#file_links) that
          point at this file.
        type: optional<FileLinks>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"file">
      purpose:
        docs: >-
          The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of
          the uploaded file.
        type: FilePurpose
      size:
        docs: The size of the file object in bytes.
        type: integer
      title:
        docs: A suitable title for the document.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The returned file type (for example, `csv`, `pdf`, `jpg`, or `png`).
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: Use your live secret API key to download the file from this URL.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FileCreated:
    docs: Occurs whenever a new Stripe-generated file is available for your account.
    properties:
      object:
        type: File
    source:
      openapi: ../openapi.yaml
  FileLink:
    docs: |-
      To share the contents of a `File` object with non-Stripe users, you can
      create a `FileLink`. `FileLink`s contain a URL that you can use to
      retrieve the contents of the file without authentication.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expired:
        docs: Returns if the link is already expired.
        type: boolean
      expires_at:
        docs: Time that the link expires.
        type: optional<integer>
      file:
        docs: The file object this link points to.
        type: FileLinkFile
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"file_link">
      url:
        docs: The publicly accessible URL to download the file.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FileLinkFile:
    discriminated: false
    docs: The file object this link points to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  FileLinks:
    docs: >-
      A list of [file links](https://stripe.com/docs/api#file_links) that point
      at this file.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<FileLink>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
          pattern: ^/v1/file_links
    source:
      openapi: ../openapi.yaml
  FilePurpose:
    docs: >-
      The [purpose](https://stripe.com/docs/file-upload#uploading-a-file) of the
      uploaded file.
    enum:
      - account_requirement
      - additional_verification
      - business_icon
      - business_logo
      - customer_signature
      - dispute_evidence
      - document_provider_identity_document
      - finance_report_run
      - financial_account_statement
      - identity_document
      - identity_document_downloadable
      - issuing_regulatory_reporting
      - pci_document
      - selfie
      - sigma_scheduled_query
      - tax_document_user_upload
      - terminal_reader_splashscreen
    inline: true
    source:
      openapi: ../openapi.yaml
  financial_connections_account_ownership_or_id:
    discriminated: false
    docs: The most recent information about the account's owners.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: FinancialConnectionsAccountOwnership
  FinancialConnectionsAccount:
    docs: >-
      A Financial Connections Account represents an account that exists outside
      of Stripe, to which you have been granted some degree of access.
    properties:
      account_holder:
        docs: The account holder that this account belongs to.
        type: optional<BankConnectionsResourceAccountholder>
      balance:
        docs: The most recent information about the account's balance.
        type: optional<BankConnectionsResourceBalance>
      balance_refresh:
        docs: The state of the most recent attempt to refresh the account balance.
        type: optional<BankConnectionsResourceBalanceRefresh>
      category:
        docs: >-
          The type of the account. Account category is further divided in
          `subcategory`.
        type: FinancialConnectionsAccountCategory
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      display_name:
        docs: >-
          A human-readable name that has been assigned to this account, either
          by the account holder or by the institution.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      institution_name:
        docs: The name of the institution that holds this account.
        type: string
        validation:
          maxLength: 5000
      last4:
        docs: >-
          The last 4 digits of the account number. If present, this will be 4
          numeric characters.
        type: optional<string>
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"financial_connections.account">
      ownership:
        docs: The most recent information about the account's owners.
        type: optional<financial_connections_account_ownership_or_id>
      ownership_refresh:
        docs: The state of the most recent attempt to refresh the account owners.
        type: optional<BankConnectionsResourceOwnershipRefresh>
      permissions:
        docs: The list of permissions granted by this account.
        type: optional<list<FinancialConnectionsAccountPermissionsItem>>
      status:
        docs: The status of the link to the account.
        type: FinancialConnectionsAccountStatus
      subcategory:
        docs: |-
          If `category` is `cash`, one of:

           - `checking`
           - `savings`
           - `other`

          If `category` is `credit`, one of:

           - `mortgage`
           - `line_of_credit`
           - `credit_card`
           - `other`

          If `category` is `investment` or `other`, this will be `other`.
        type: FinancialConnectionsAccountSubcategory
      subscriptions:
        docs: The list of data refresh subscriptions requested on this account.
        type: optional<list<literal<"transactions">>>
      supported_payment_method_types:
        docs: >-
          The [PaymentMethod
          type](https://stripe.com/docs/api/payment_methods/object#payment_method_object-type)(s)
          that can be created from this account.
        type: list<FinancialConnectionsAccountSupportedPaymentMethodTypesItem>
      transaction_refresh:
        docs: >-
          The state of the most recent attempt to refresh the account
          transactions.
        type: optional<BankConnectionsResourceTransactionRefresh>
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountCategory:
    docs: >-
      The type of the account. Account category is further divided in
      `subcategory`.
    enum:
      - cash
      - credit
      - investment
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountCreated:
    docs: Occurs when a new Financial Connections account is created.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountDeactivated:
    docs: >-
      Occurs when a Financial Connections account's status is updated from
      `active` to `inactive`.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountDisconnected:
    docs: Occurs when a Financial Connections account is disconnected.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountOwner:
    docs: Describes an owner of an account.
    properties:
      email:
        docs: The email address of the owner.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      name:
        docs: The full name of the owner.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"financial_connections.account_owner">
      ownership:
        docs: The ownership object that this owner belongs to.
        type: string
        validation:
          maxLength: 5000
      phone:
        docs: The raw phone number of the owner.
        type: optional<string>
        validation:
          maxLength: 5000
      raw_address:
        docs: The raw physical address of the owner.
        type: optional<string>
        validation:
          maxLength: 5000
      refreshed_at:
        docs: The timestamp of the refresh that updated this owner.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountOwnership:
    docs: >-
      Describes a snapshot of the owners of an account at a particular point in
      time.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"financial_connections.account_ownership">
      owners:
        docs: A paginated list of owners for this account.
        type: FinancialConnectionsAccountOwnershipOwners
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountOwnershipOwners:
    docs: A paginated list of owners for this account.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<FinancialConnectionsAccountOwner>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountPermissionsItem:
    enum:
      - balances
      - ownership
      - payment_method
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountReactivated:
    docs: >-
      Occurs when a Financial Connections account's status is updated from
      `inactive` to `active`.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountRefreshedBalance:
    docs: >-
      Occurs when an Account’s `balance_refresh` status transitions from
      `pending` to either `succeeded` or `failed`.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountRefreshedOwnership:
    docs: >-
      Occurs when an Account’s `ownership_refresh` status transitions from
      `pending` to either `succeeded` or `failed`.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountRefreshedTransactions:
    docs: >-
      Occurs when an Account’s `transaction_refresh` status transitions from
      `pending` to either `succeeded` or `failed`.
    properties:
      object:
        type: FinancialConnectionsAccount
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountStatus:
    docs: The status of the link to the account.
    enum:
      - active
      - disconnected
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountSubcategory:
    docs: |-
      If `category` is `cash`, one of:

       - `checking`
       - `savings`
       - `other`

      If `category` is `credit`, one of:

       - `mortgage`
       - `line_of_credit`
       - `credit_card`
       - `other`

      If `category` is `investment` or `other`, this will be `other`.
    enum:
      - checking
      - credit_card
      - line_of_credit
      - mortgage
      - other
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsAccountSupportedPaymentMethodTypesItem:
    enum:
      - link
      - us_bank_account
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsSession:
    docs: >-
      A Financial Connections Session is the secure way to programmatically
      launch the client-side Stripe.js modal that lets your users link their
      accounts.
    properties:
      account_holder:
        docs: The account holder for whom accounts are collected in this session.
        type: optional<BankConnectionsResourceAccountholder>
      accounts:
        docs: The accounts that were collected as part of this Session.
        type: FinancialConnectionsSessionAccounts
      client_secret:
        docs: >-
          A value that will be passed to the client to launch the authentication
          flow.
        type: string
        validation:
          maxLength: 5000
      filters:
        type: optional<BankConnectionsResourceLinkAccountSessionFilters>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"financial_connections.session">
      permissions:
        docs: Permissions requested for accounts collected during this session.
        type: list<FinancialConnectionsSessionPermissionsItem>
      prefetch:
        docs: Data features requested to be retrieved upon account creation.
        type: optional<list<FinancialConnectionsSessionPrefetchItem>>
      return_url:
        docs: >-
          For webview integrations only. Upon completing OAuth login in the
          native browser, the user will be redirected to this URL to return to
          your app.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsSessionAccounts:
    docs: The accounts that were collected as part of this Session.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<FinancialConnectionsAccount>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
          pattern: ^/v1/financial_connections/accounts
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsSessionPermissionsItem:
    enum:
      - balances
      - ownership
      - payment_method
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsSessionPrefetchItem:
    enum:
      - balances
      - ownership
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsTransaction:
    docs: >-
      A Transaction represents a real transaction that affects a Financial
      Connections Account balance.
    properties:
      account:
        docs: >-
          The ID of the Financial Connections Account this transaction belongs
          to.
        type: string
        validation:
          maxLength: 5000
      amount:
        docs: The amount of this transaction, in cents (or local equivalent).
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      description:
        docs: The description of this transaction.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"financial_connections.transaction">
      status:
        docs: The status of the transaction.
        type: FinancialConnectionsTransactionStatus
      status_transitions:
        type: BankConnectionsResourceTransactionResourceStatusTransitions
      transacted_at:
        docs: >-
          Time at which the transaction was transacted. Measured in seconds
          since the Unix epoch.
        type: integer
      transaction_refresh:
        docs: >-
          The token of the transaction refresh that last updated or created this
          transaction.
        type: string
        validation:
          maxLength: 5000
      updated:
        docs: >-
          Time at which the object was last updated. Measured in seconds since
          the Unix epoch.
        type: integer
    source:
      openapi: ../openapi.yaml
  FinancialConnectionsTransactionStatus:
    docs: The status of the transaction.
    enum:
      - pending
      - posted
      - void
    inline: true
    source:
      openapi: ../openapi.yaml
  FinancialReportingFinanceReportRunRunParameters:
    docs: ''
    properties:
      columns:
        docs: The set of output columns requested for inclusion in the report run.
        type: optional<list<string>>
      connected_account:
        docs: Connected account ID by which to filter the report run.
        type: optional<string>
        validation:
          maxLength: 5000
      currency:
        docs: Currency of objects to be included in the report run.
        type: optional<string>
      interval_end:
        docs: >-
          Ending timestamp of data to be included in the report run. Can be any
          UTC timestamp between 1 second after the user specified
          `interval_start` and 1 second before this report's last
          `data_available_end` value.
        type: optional<integer>
      interval_start:
        docs: >-
          Starting timestamp of data to be included in the report run. Can be
          any UTC timestamp between 1 second after this report's
          `data_available_start` and 1 second before the user specified
          `interval_end` value.
        type: optional<integer>
      payout:
        docs: Payout ID by which to filter the report run.
        type: optional<string>
        validation:
          maxLength: 5000
      reporting_category:
        docs: Category of balance transactions to be included in the report run.
        type: optional<string>
        validation:
          maxLength: 5000
      timezone:
        docs: >-
          Defaults to `Etc/UTC`. The output timezone for all timestamps in the
          report. A list of possible time zone values is maintained at the [IANA
          Time Zone Database](http://www.iana.org/time-zones). Has no effect on
          `interval_start` or `interval_end`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ForwardedRequestContext:
    docs: Metadata about the forwarded request.
    properties:
      destination_duration:
        docs: >-
          The time it took in milliseconds for the destination endpoint to
          respond.
        type: integer
      destination_ip_address:
        docs: The IP address of the destination.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ForwardedRequestDetails:
    docs: Details about the request forwarded to the destination endpoint.
    properties:
      body:
        docs: The body payload to send to the destination endpoint.
        type: string
        validation:
          maxLength: 5000
      headers:
        docs: >-
          The headers to include in the forwarded request. Can be omitted if no
          additional headers (excluding Stripe-generated ones such as the
          Content-Type header) should be included.
        type: list<ForwardedRequestHeader>
      http_method:
        docs: The HTTP method used to call the destination endpoint.
        type: literal<"POST">
    source:
      openapi: ../openapi.yaml
  ForwardedRequestHeader:
    docs: Header data.
    properties:
      name:
        docs: The header name.
        type: string
        validation:
          maxLength: 5000
      value:
        docs: The header value.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ForwardedResponseDetails:
    docs: Details about the response from the destination endpoint.
    properties:
      body:
        docs: The response body from the destination endpoint to Stripe.
        type: string
        validation:
          maxLength: 5000
      headers:
        docs: HTTP headers that the destination endpoint returned.
        type: list<ForwardedRequestHeader>
      status:
        docs: The HTTP status code that the destination endpoint returned.
        type: integer
    source:
      openapi: ../openapi.yaml
  ForwardingRequest:
    docs: >-
      Instructs Stripe to make a request on your behalf using the destination
      URL. The destination URL

      is activated by Stripe at the time of onboarding. Stripe verifies requests
      with your credentials

      provided during onboarding, and injects card details from the
      payment_method into the request.


      Stripe redacts all sensitive fields and headers, including authentication
      credentials and card numbers,

      before storing the request and response data in the forwarding Request
      object, which are subject to a

      30-day retention period.


      You can provide a Stripe idempotency key to make sure that requests with
      the same key result in only one

      outbound request. The Stripe idempotency key provided should be unique and
      different from any idempotency

      keys provided on the underlying third-party request.


      Forwarding Requests are synchronous requests that return a response or
      time out according to

      Stripe’s limits.


      Related guide: [Forward card details to third-party API
      endpoints](https://docs.stripe.com/payments/forwarding).
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"forwarding.request">
      payment_method:
        docs: >-
          The PaymentMethod to insert into the forwarded request. Forwarding
          previously consumed PaymentMethods is allowed.
        type: string
        validation:
          maxLength: 5000
      replacements:
        docs: The field kinds to be replaced in the forwarded request.
        type: list<ForwardingRequestReplacementsItem>
      request_context:
        docs: >-
          Context about the request from Stripe's servers to the destination
          endpoint.
        type: optional<ForwardedRequestContext>
      request_details:
        docs: >-
          The request that was sent to the destination endpoint. We redact any
          sensitive fields.
        type: optional<ForwardedRequestDetails>
      response_details:
        docs: >-
          The response that the destination endpoint returned to us. We redact
          any sensitive fields.
        type: optional<ForwardedResponseDetails>
      url:
        docs: >-
          The destination URL for the forwarded request. Must be supported by
          the config.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ForwardingRequestReplacementsItem:
    enum:
      - card_cvc
      - card_expiry
      - card_number
      - cardholder_name
      - request_signature
    inline: true
    source:
      openapi: ../openapi.yaml
  FundingInstructions:
    docs: >-
      Each customer has a
      [`balance`](https://stripe.com/docs/api/customers/object#customer_object-balance)
      that is

      automatically applied to future invoices and payments using the
      `customer_balance` payment method.

      Customers can fund this balance by initiating a bank transfer to any
      account in the

      `financial_addresses` field.

      Related guide: [Customer balance funding
      instructions](https://stripe.com/docs/payments/customer-balance/funding-instructions)
    properties:
      bank_transfer:
        type: FundingInstructionsBankTransfer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      funding_type:
        docs: The `funding_type` of the returned instructions
        type: literal<"bank_transfer">
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"funding_instructions">
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransfer:
    docs: ''
    properties:
      country:
        docs: The country of the bank account to fund
        type: string
        validation:
          maxLength: 5000
      financial_addresses:
        docs: >-
          A list of financial addresses that can be used to fund a particular
          balance
        type: list<FundingInstructionsBankTransferFinancialAddress>
      type:
        docs: The bank_transfer type
        type: FundingInstructionsBankTransferType
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferAbaRecord:
    docs: ABA Records contain U.S. bank account details per the ABA format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The account holder name
        type: string
        validation:
          maxLength: 5000
      account_number:
        docs: The ABA account number
        type: string
        validation:
          maxLength: 5000
      account_type:
        docs: The account type
        type: string
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      bank_name:
        docs: The bank name
        type: string
        validation:
          maxLength: 5000
      routing_number:
        docs: The ABA routing number
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferFinancialAddress:
    docs: >-
      FinancialAddresses contain identifying information that resolves to a
      FinancialAccount.
    properties:
      aba:
        type: optional<FundingInstructionsBankTransferAbaRecord>
      iban:
        type: optional<FundingInstructionsBankTransferIbanRecord>
      sort_code:
        type: optional<FundingInstructionsBankTransferSortCodeRecord>
      spei:
        type: optional<FundingInstructionsBankTransferSpeiRecord>
      supported_networks:
        docs: The payment networks supported by this FinancialAddress
        type: >-
          optional<list<FundingInstructionsBankTransferFinancialAddressSupportedNetworksItem>>
      swift:
        type: optional<FundingInstructionsBankTransferSwiftRecord>
      type:
        docs: The type of financial address
        type: FundingInstructionsBankTransferFinancialAddressType
      zengin:
        type: optional<FundingInstructionsBankTransferZenginRecord>
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferFinancialAddressSupportedNetworksItem:
    enum:
      - ach
      - bacs
      - domestic_wire_us
      - fps
      - sepa
      - spei
      - swift
      - zengin
    inline: true
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferFinancialAddressType:
    docs: The type of financial address
    enum:
      - aba
      - iban
      - sort_code
      - spei
      - swift
      - zengin
    inline: true
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferIbanRecord:
    docs: Iban Records contain E.U. bank account details per the SEPA format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The name of the person or business that owns the bank account
        type: string
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      bic:
        docs: The BIC/SWIFT code of the account.
        type: string
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
        validation:
          maxLength: 5000
      iban:
        docs: The IBAN of the account.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferSortCodeRecord:
    docs: >-
      Sort Code Records contain U.K. bank account details per the sort code
      format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The name of the person or business that owns the bank account
        type: string
        validation:
          maxLength: 5000
      account_number:
        docs: The account number
        type: string
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      sort_code:
        docs: The six-digit sort code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferSpeiRecord:
    docs: SPEI Records contain Mexico bank account details per the SPEI format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The account holder name
        type: string
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      bank_code:
        docs: The three-digit bank code
        type: string
        validation:
          maxLength: 5000
      bank_name:
        docs: The short banking institution name
        type: string
        validation:
          maxLength: 5000
      clabe:
        docs: The CLABE number
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferSwiftRecord:
    docs: SWIFT Records contain U.S. bank account details per the SWIFT format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The account holder name
        type: string
        validation:
          maxLength: 5000
      account_number:
        docs: The account number
        type: string
        validation:
          maxLength: 5000
      account_type:
        docs: The account type
        type: string
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      bank_name:
        docs: The bank name
        type: string
        validation:
          maxLength: 5000
      swift_code:
        docs: The SWIFT code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferType:
    docs: The bank_transfer type
    enum:
      - eu_bank_transfer
      - jp_bank_transfer
    inline: true
    source:
      openapi: ../openapi.yaml
  FundingInstructionsBankTransferZenginRecord:
    docs: Zengin Records contain Japan bank account details per the Zengin format.
    properties:
      account_holder_address:
        type: Address
      account_holder_name:
        docs: The account holder name
        type: optional<string>
        validation:
          maxLength: 5000
      account_number:
        docs: The account number
        type: optional<string>
        validation:
          maxLength: 5000
      account_type:
        docs: The bank account type. In Japan, this can only be `futsu` or `toza`.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_address:
        type: Address
      bank_code:
        docs: The bank code of the account
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: The bank name of the account
        type: optional<string>
        validation:
          maxLength: 5000
      branch_code:
        docs: The branch code of the account
        type: optional<string>
        validation:
          maxLength: 5000
      branch_name:
        docs: The branch name of the account
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoDataDocumentReportDateOfBirth:
    docs: Point in Time
    properties:
      day:
        docs: Numerical day between 1 and 31.
        type: optional<integer>
      month:
        docs: Numerical month between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  GelatoDataDocumentReportExpirationDate:
    docs: Point in Time
    properties:
      day:
        docs: Numerical day between 1 and 31.
        type: optional<integer>
      month:
        docs: Numerical month between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  GelatoDataDocumentReportIssuedDate:
    docs: Point in Time
    properties:
      day:
        docs: Numerical day between 1 and 31.
        type: optional<integer>
      month:
        docs: Numerical month between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  GelatoDataIdNumberReportDate:
    docs: Point in Time
    properties:
      day:
        docs: Numerical day between 1 and 31.
        type: optional<integer>
      month:
        docs: Numerical month between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  GelatoDataVerifiedOutputsDate:
    docs: Point in Time
    properties:
      day:
        docs: Numerical day between 1 and 31.
        type: optional<integer>
      month:
        docs: Numerical month between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  GelatoDocumentReport:
    docs: Result from a document check
    properties:
      address:
        docs: Address as it appears in the document.
        type: optional<Address>
      dob:
        docs: Date of birth as it appears in the document.
        type: optional<GelatoDataDocumentReportDateOfBirth>
      error:
        docs: >-
          Details on the verification error. Present when status is
          `unverified`.
        type: optional<GelatoDocumentReportError>
      expiration_date:
        docs: Expiration date of the document.
        type: optional<GelatoDataDocumentReportExpirationDate>
      files:
        docs: >-
          Array of [File](https://stripe.com/docs/api/files) ids containing
          images for this document.
        type: optional<list<string>>
      first_name:
        docs: First name as it appears in the document.
        type: optional<string>
        validation:
          maxLength: 5000
      issued_date:
        docs: Issued date of the document.
        type: optional<GelatoDataDocumentReportIssuedDate>
      issuing_country:
        docs: Issuing country of the document.
        type: optional<string>
        validation:
          maxLength: 5000
      last_name:
        docs: Last name as it appears in the document.
        type: optional<string>
        validation:
          maxLength: 5000
      number:
        docs: Document ID number.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: Status of this `document` check.
        type: GelatoDocumentReportStatus
      type:
        docs: Type of the document.
        type: optional<GelatoDocumentReportType>
    source:
      openapi: ../openapi.yaml
  GelatoDocumentReportError:
    docs: ''
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          failure.
        type: optional<GelatoDocumentReportErrorCode>
      reason:
        docs: >-
          A human-readable message giving the reason for the failure. These
          messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoDocumentReportErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification
      failure.
    enum:
      - document_expired
      - document_type_not_supported
      - document_unverified_other
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoDocumentReportStatus:
    docs: Status of this `document` check.
    enum:
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoDocumentReportType:
    docs: Type of the document.
    enum:
      - driving_license
      - id_card
      - passport
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoEmailReport:
    docs: Result from a email check
    properties:
      email:
        docs: Email to be verified.
        type: optional<string>
        validation:
          maxLength: 5000
      error:
        docs: >-
          Details on the verification error. Present when status is
          `unverified`.
        type: optional<GelatoEmailReportError>
      status:
        docs: Status of this `email` check.
        type: GelatoEmailReportStatus
    source:
      openapi: ../openapi.yaml
  GelatoEmailReportError:
    docs: ''
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          failure.
        type: optional<GelatoEmailReportErrorCode>
      reason:
        docs: >-
          A human-readable message giving the reason for the failure. These
          messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoEmailReportErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification
      failure.
    enum:
      - email_unverified_other
      - email_verification_declined
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoEmailReportStatus:
    docs: Status of this `email` check.
    enum:
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoIdNumberReport:
    docs: Result from an id_number check
    properties:
      dob:
        docs: Date of birth.
        type: optional<GelatoDataIdNumberReportDate>
      error:
        docs: >-
          Details on the verification error. Present when status is
          `unverified`.
        type: optional<GelatoIdNumberReportError>
      first_name:
        docs: First name.
        type: optional<string>
        validation:
          maxLength: 5000
      id_number:
        docs: >-
          ID number. When `id_number_type` is `us_ssn`, only the last 4 digits
          are present.
        type: optional<string>
        validation:
          maxLength: 5000
      id_number_type:
        docs: Type of ID number.
        type: optional<GelatoIdNumberReportIdNumberType>
      last_name:
        docs: Last name.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: Status of this `id_number` check.
        type: GelatoIdNumberReportStatus
    source:
      openapi: ../openapi.yaml
  GelatoIdNumberReportError:
    docs: ''
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          failure.
        type: optional<GelatoIdNumberReportErrorCode>
      reason:
        docs: >-
          A human-readable message giving the reason for the failure. These
          messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoIdNumberReportErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification
      failure.
    enum:
      - id_number_insufficient_document_data
      - id_number_mismatch
      - id_number_unverified_other
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoIdNumberReportIdNumberType:
    docs: Type of ID number.
    enum:
      - br_cpf
      - sg_nric
      - us_ssn
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoIdNumberReportStatus:
    docs: Status of this `id_number` check.
    enum:
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoPhoneReport:
    docs: Result from a phone check
    properties:
      error:
        docs: >-
          Details on the verification error. Present when status is
          `unverified`.
        type: optional<GelatoPhoneReportError>
      phone:
        docs: Phone to be verified.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: Status of this `phone` check.
        type: GelatoPhoneReportStatus
    source:
      openapi: ../openapi.yaml
  GelatoPhoneReportError:
    docs: ''
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          failure.
        type: optional<GelatoPhoneReportErrorCode>
      reason:
        docs: >-
          A human-readable message giving the reason for the failure. These
          messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoPhoneReportErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification
      failure.
    enum:
      - phone_unverified_other
      - phone_verification_declined
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoPhoneReportStatus:
    docs: Status of this `phone` check.
    enum:
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoProvidedDetails:
    docs: ''
    properties:
      email:
        docs: Email of user being verified
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: Phone number of user being verified
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoReportDocumentOptions:
    docs: ''
    properties:
      allowed_types:
        docs: >-
          Array of strings of allowed identity document types. If the provided
          identity document isn’t one of the allowed types, the verification
          check will fail with a document_type_not_allowed error code.
        type: optional<list<GelatoReportDocumentOptionsAllowedTypesItem>>
      require_id_number:
        docs: >-
          Collect an ID number and perform an [ID number
          check](https://stripe.com/docs/identity/verification-checks?type=id-number)
          with the document’s extracted name and date of birth.
        type: optional<boolean>
      require_live_capture:
        docs: >-
          Disable image uploads, identity document images have to be captured
          using the device’s camera.
        type: optional<boolean>
      require_matching_selfie:
        docs: >-
          Capture a face image and perform a [selfie
          check](https://stripe.com/docs/identity/verification-checks?type=selfie)
          comparing a photo ID and a picture of your user’s face. [Learn
          more](https://stripe.com/docs/identity/selfie).
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  GelatoReportDocumentOptionsAllowedTypesItem:
    enum:
      - driving_license
      - id_card
      - passport
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoReportIdNumberOptions:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  GelatoSelfieReport:
    docs: Result from a selfie check
    properties:
      document:
        docs: >-
          ID of the [File](https://stripe.com/docs/api/files) holding the image
          of the identity document used in this check.
        type: optional<string>
        validation:
          maxLength: 5000
      error:
        docs: >-
          Details on the verification error. Present when status is
          `unverified`.
        type: optional<GelatoSelfieReportError>
      selfie:
        docs: >-
          ID of the [File](https://stripe.com/docs/api/files) holding the image
          of the selfie used in this check.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: Status of this `selfie` check.
        type: GelatoSelfieReportStatus
    source:
      openapi: ../openapi.yaml
  GelatoSelfieReportError:
    docs: ''
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          failure.
        type: optional<GelatoSelfieReportErrorCode>
      reason:
        docs: >-
          A human-readable message giving the reason for the failure. These
          messages can be shown to your users.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoSelfieReportErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification
      failure.
    enum:
      - selfie_document_missing_photo
      - selfie_face_mismatch
      - selfie_manipulated
      - selfie_unverified_other
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoSelfieReportStatus:
    docs: Status of this `selfie` check.
    enum:
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoSessionDocumentOptions:
    docs: ''
    properties:
      allowed_types:
        docs: >-
          Array of strings of allowed identity document types. If the provided
          identity document isn’t one of the allowed types, the verification
          check will fail with a document_type_not_allowed error code.
        type: optional<list<GelatoSessionDocumentOptionsAllowedTypesItem>>
      require_id_number:
        docs: >-
          Collect an ID number and perform an [ID number
          check](https://stripe.com/docs/identity/verification-checks?type=id-number)
          with the document’s extracted name and date of birth.
        type: optional<boolean>
      require_live_capture:
        docs: >-
          Disable image uploads, identity document images have to be captured
          using the device’s camera.
        type: optional<boolean>
      require_matching_selfie:
        docs: >-
          Capture a face image and perform a [selfie
          check](https://stripe.com/docs/identity/verification-checks?type=selfie)
          comparing a photo ID and a picture of your user’s face. [Learn
          more](https://stripe.com/docs/identity/selfie).
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  GelatoSessionDocumentOptionsAllowedTypesItem:
    enum:
      - driving_license
      - id_card
      - passport
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoSessionEmailOptions:
    docs: ''
    properties:
      require_verification:
        docs: Request one time password verification of `provided_details.email`.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  GelatoSessionIdNumberOptions:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  GelatoSessionLastError:
    docs: Shows last VerificationSession error
    properties:
      code:
        docs: >-
          A short machine-readable string giving the reason for the verification
          or user-session failure.
        type: optional<GelatoSessionLastErrorCode>
      reason:
        docs: >-
          A message that explains the reason for verification or user-session
          failure.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoSessionLastErrorCode:
    docs: >-
      A short machine-readable string giving the reason for the verification or
      user-session failure.
    enum:
      - abandoned
      - consent_declined
      - country_not_supported
      - device_not_supported
      - document_expired
      - document_type_not_supported
      - document_unverified_other
      - email_unverified_other
      - email_verification_declined
      - id_number_insufficient_document_data
      - id_number_mismatch
      - id_number_unverified_other
      - phone_unverified_other
      - phone_verification_declined
      - selfie_document_missing_photo
      - selfie_face_mismatch
      - selfie_manipulated
      - selfie_unverified_other
      - under_supported_age
    inline: true
    source:
      openapi: ../openapi.yaml
  GelatoSessionPhoneOptions:
    docs: ''
    properties:
      require_verification:
        docs: Request one time password verification of `provided_details.phone`.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  GelatoVerificationReportOptions:
    docs: ''
    properties:
      document:
        type: optional<GelatoReportDocumentOptions>
      id_number:
        type: optional<GelatoReportIdNumberOptions>
    source:
      openapi: ../openapi.yaml
  GelatoVerificationSessionOptions:
    docs: ''
    properties:
      document:
        type: optional<GelatoSessionDocumentOptions>
      email:
        type: optional<GelatoSessionEmailOptions>
      id_number:
        type: optional<GelatoSessionIdNumberOptions>
      phone:
        type: optional<GelatoSessionPhoneOptions>
    source:
      openapi: ../openapi.yaml
  GelatoVerifiedOutputs:
    docs: ''
    properties:
      address:
        docs: The user's verified address.
        type: optional<Address>
      dob:
        docs: The user’s verified date of birth.
        type: optional<GelatoDataVerifiedOutputsDate>
      email:
        docs: The user's verified email address
        type: optional<string>
        validation:
          maxLength: 5000
      first_name:
        docs: The user's verified first name.
        type: optional<string>
        validation:
          maxLength: 5000
      id_number:
        docs: The user's verified id number.
        type: optional<string>
        validation:
          maxLength: 5000
      id_number_type:
        docs: The user's verified id number type.
        type: optional<GelatoVerifiedOutputsIdNumberType>
      last_name:
        docs: The user's verified last name.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: The user's verified phone number
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GelatoVerifiedOutputsIdNumberType:
    docs: The user's verified id number type.
    enum:
      - br_cpf
      - sg_nric
      - us_ssn
    inline: true
    source:
      openapi: ../openapi.yaml
  GetChargesChargeRefundsResponse:
    docs: ''
    properties:
      data:
        docs: Details about each object.
        type: list<Refund>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  GetTaxIdsResponse:
    docs: ''
    properties:
      data:
        docs: Details about each object.
        type: list<TaxId>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IdentityVerificationReport:
    docs: >-
      A VerificationReport is the result of an attempt to collect and verify
      data from a user.

      The collection of verification checks performed is determined from the
      `type` and `options`

      parameters used. You can find the result of each verification check
      performed in the

      appropriate sub-resource: `document`, `id_number`, `selfie`.


      Each VerificationReport contains a copy of any data collected by the user
      as well as

      reference IDs which can be used to access collected images through the
      [FileUpload](https://stripe.com/docs/api/files)

      API. To configure and create VerificationReports, use the

      [VerificationSession](https://stripe.com/docs/api/identity/verification_sessions)
      API.


      Related guide: [Accessing verification
      results](https://stripe.com/docs/identity/verification-sessions#results).
    properties:
      client_reference_id:
        docs: >-
          A string to reference this user. This can be a customer ID, a session
          ID, or similar, and can be used to reconcile this verification with
          your internal systems.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      document:
        type: optional<GelatoDocumentReport>
      email:
        type: optional<GelatoEmailReport>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      id_number:
        type: optional<GelatoIdNumberReport>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"identity.verification_report">
      options:
        type: optional<GelatoVerificationReportOptions>
      phone:
        type: optional<GelatoPhoneReport>
      selfie:
        type: optional<GelatoSelfieReport>
      type:
        docs: Type of report.
        type: IdentityVerificationReportType
      verification_flow:
        docs: The configuration token of a verification flow from the dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
      verification_session:
        docs: ID of the VerificationSession that created this report.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IdentityVerificationReportType:
    docs: Type of report.
    enum:
      - document
      - id_number
      - verification_flow
    inline: true
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSession:
    docs: >-
      A VerificationSession guides you through the process of collecting and
      verifying the identities

      of your users. It contains details about the type of verification, such as
      what [verification

      check](/docs/identity/verification-checks) to perform. Only create one
      VerificationSession for

      each verification in your system.


      A VerificationSession transitions through [multiple

      statuses](/docs/identity/how-sessions-work) throughout its lifetime as it
      progresses through

      the verification flow. The VerificationSession contains the user's
      verified data after

      verification checks are complete.


      Related guide: [The Verification Sessions
      API](https://stripe.com/docs/identity/verification-sessions)
    properties:
      client_reference_id:
        docs: >-
          A string to reference this user. This can be a customer ID, a session
          ID, or similar, and can be used to reconcile this verification with
          your internal systems.
        type: optional<string>
        validation:
          maxLength: 5000
      client_secret:
        docs: >-
          The short-lived client secret used by Stripe.js to [show a
          verification modal](https://stripe.com/docs/js/identity/modal) inside
          your app. This client secret expires after 24 hours and can only be
          used once. Don’t store it, log it, embed it in a URL, or expose it to
          anyone other than the user. Make sure that you have TLS enabled on any
          page that includes the client secret. Refer to our docs on [passing
          the client secret to the
          frontend](https://stripe.com/docs/identity/verification-sessions#client-secret)
          to learn more.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last_error:
        docs: >-
          If present, this property tells you the last error encountered when
          processing the verification.
        type: optional<GelatoSessionLastError>
      last_verification_report:
        docs: >-
          ID of the most recent VerificationReport. [Learn more about accessing
          detailed verification
          results.](https://stripe.com/docs/identity/verification-sessions#results)
        type: optional<IdentityVerificationSessionLastVerificationReport>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"identity.verification_session">
      options:
        docs: A set of options for the session’s verification checks.
        type: optional<GelatoVerificationSessionOptions>
      provided_details:
        docs: >-
          Details provided about the user being verified. These details may be
          shown to the user.
        type: optional<GelatoProvidedDetails>
      redaction:
        docs: >-
          Redaction status of this VerificationSession. If the
          VerificationSession is not redacted, this field will be null.
        type: optional<VerificationSessionRedaction>
      related_customer:
        docs: Token referencing a Customer resource.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          Status of this VerificationSession. [Learn more about the lifecycle of
          sessions](https://stripe.com/docs/identity/how-sessions-work).
        type: IdentityVerificationSessionStatus
      type:
        docs: >-
          The type of [verification
          check](https://stripe.com/docs/identity/verification-checks) to be
          performed.
        type: IdentityVerificationSessionType
      url:
        docs: >-
          The short-lived URL that you use to redirect a user to Stripe to
          submit their identity information. This URL expires after 48 hours and
          can only be used once. Don’t store it, log it, send it in emails or
          expose it to anyone other than the user. Refer to our docs on
          [verifying identity
          documents](https://stripe.com/docs/identity/verify-identity-documents?platform=web&type=redirect)
          to learn how to redirect users to Stripe.
        type: optional<string>
        validation:
          maxLength: 5000
      verification_flow:
        docs: The configuration token of a verification flow from the dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_outputs:
        docs: The user’s verified data.
        type: optional<GelatoVerifiedOutputs>
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionCanceled:
    docs: Occurs whenever a VerificationSession is canceled
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionCreated:
    docs: Occurs whenever a VerificationSession is created
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionLastVerificationReport:
    discriminated: false
    docs: >-
      ID of the most recent VerificationReport. [Learn more about accessing
      detailed verification
      results.](https://stripe.com/docs/identity/verification-sessions#results)
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IdentityVerificationReport
  IdentityVerificationSessionProcessing:
    docs: Occurs whenever a VerificationSession transitions to processing
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionRedacted:
    docs: Occurs whenever a VerificationSession is redacted.
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionRequiresInput:
    docs: Occurs whenever a VerificationSession transitions to require user input
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionStatus:
    docs: >-
      Status of this VerificationSession. [Learn more about the lifecycle of
      sessions](https://stripe.com/docs/identity/how-sessions-work).
    enum:
      - canceled
      - processing
      - requires_input
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionType:
    docs: >-
      The type of [verification
      check](https://stripe.com/docs/identity/verification-checks) to be
      performed.
    enum:
      - document
      - id_number
      - verification_flow
    inline: true
    source:
      openapi: ../openapi.yaml
  IdentityVerificationSessionVerified:
    docs: Occurs whenever a VerificationSession transitions to verified
    properties:
      object:
        type: IdentityVerificationSession
    source:
      openapi: ../openapi.yaml
  InboundTransfers:
    docs: ''
    properties:
      billing_details:
        type: TreasurySharedResourceBillingDetails
      type:
        docs: The type of the payment method used in the InboundTransfer.
        type: literal<"us_bank_account">
      us_bank_account:
        type: optional<InboundTransfersPaymentMethodDetailsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  InboundTransfersPaymentMethodDetailsUsBankAccount:
    docs: ''
    properties:
      account_holder_type:
        docs: 'Account holder type: individual or company.'
        type: >-
          optional<InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType>
      account_type:
        docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
        type: optional<InboundTransfersPaymentMethodDetailsUsBankAccountAccountType>
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<InboundTransfersPaymentMethodDetailsUsBankAccountMandate>
      network:
        docs: >-
          The network rails used. See the
          [docs](https://stripe.com/docs/treasury/money-movement/timelines) to
          learn more about money movement timelines for each network type.
        type: literal<"ach">
      routing_number:
        docs: Routing number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType:
    docs: 'Account holder type: individual or company.'
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  InboundTransfersPaymentMethodDetailsUsBankAccountAccountType:
    docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  InboundTransfersPaymentMethodDetailsUsBankAccountMandate:
    discriminated: false
    docs: ID of the mandate used to make this payment.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  InternalCard:
    docs: ''
    properties:
      brand:
        docs: Brand of the card used in the transaction
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: Two-letter ISO code representing the country of the card
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two digit number representing the card's expiration month
        type: optional<integer>
      exp_year:
        docs: Two digit number representing the card's expiration year
        type: optional<integer>
      last4:
        docs: The last 4 digits of the card
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Invoice:
    docs: >-
      Invoices are statements of amounts owed by a customer, and are either

      generated one-off, or generated periodically from a subscription.


      They contain [invoice items](https://stripe.com/docs/api#invoiceitems),
      and proration adjustments

      that may be caused by subscription upgrades/downgrades (if necessary).


      If your invoice is configured to be billed through automatic charges,

      Stripe automatically finalizes your invoice and attempts payment. Note

      that finalizing the invoice,

      [when
      automatic](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection),
      does

      not happen immediately as the invoice is created. Stripe waits

      until one hour after the last webhook was successfully sent (or the last

      webhook timed out after failing). If you (and the platforms you may have

      connected to) have no webhooks configured, Stripe waits one hour after

      creation to finalize the invoice.


      If your invoice is configured to be billed by sending an email, then based
      on your

      [email settings](https://dashboard.stripe.com/account/billing/automatic),

      Stripe will email the invoice to your customer and await payment. These

      emails can contain a link to a hosted page to pay the invoice.


      Stripe applies any customer credit on the account before determining the

      amount due for the invoice (i.e., the amount that will be actually

      charged). If the amount due for the invoice is less than Stripe's [minimum
      allowed charge

      per currency](/docs/currencies#minimum-and-maximum-charge-amounts), the

      invoice is automatically marked paid, and we add the amount due to the

      customer's credit balance which is applied to the next invoice.


      More details on the customer's credit balance are

      [here](https://stripe.com/docs/billing/customer/balance).


      Related guide: [Send invoices to
      customers](https://stripe.com/docs/billing/invoices/sending)
    properties:
      account_country:
        docs: >-
          The country of the business associated with this invoice, most often
          the business creating the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      account_name:
        docs: >-
          The public name of the business associated with this invoice, most
          often the business creating the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      account_tax_ids:
        docs: >-
          The account tax IDs associated with the invoice. Only editable when
          the invoice is a draft.
        type: optional<list<InvoiceAccountTaxIdsItem>>
      amount_due:
        docs: >-
          Final amount due at this time for this invoice. If the invoice's total
          is smaller than the minimum charge amount, for example, or if there is
          account credit that can be applied to the invoice, the `amount_due`
          may be 0. If there is a positive `starting_balance` for the invoice
          (the customer owes money), the `amount_due` will also take that into
          account. The charge that gets generated for the invoice will be for
          the amount specified in `amount_due`.
        type: integer
      amount_paid:
        docs: The amount, in cents (or local equivalent), that was paid.
        type: integer
      amount_remaining:
        docs: >-
          The difference between amount_due and amount_paid, in cents (or local
          equivalent).
        type: integer
      amount_shipping:
        docs: This is the sum of all the shipping amounts.
        type: integer
      application:
        docs: ID of the Connect Application that created the invoice.
        type: optional<InvoiceApplication>
      application_fee_amount:
        docs: >-
          The fee in cents (or local equivalent) that will be applied to the
          invoice and transferred to the application owner's Stripe account when
          the invoice is paid.
        type: optional<integer>
      attempt_count:
        docs: >-
          Number of payment attempts made for this invoice, from the perspective
          of the payment retry schedule. Any payment attempt counts as the first
          attempt, and subsequently only automatic retries increment the attempt
          count. In other words, manual payment attempts after the first attempt
          do not affect the retry schedule. If a failure is returned with a
          non-retryable return code, the invoice can no longer be retried unless
          a new payment method is obtained. Retries will continue to be
          scheduled, and attempt_count will continue to increment, but retries
          will only be executed if a new payment method is obtained.
        type: integer
      attempted:
        docs: >-
          Whether an attempt has been made to pay the invoice. An invoice is not
          attempted until 1 hour after the `invoice.created` webhook, for
          example, so you might not want to display that invoice as unpaid to
          your users.
        type: boolean
      auto_advance:
        docs: >-
          Controls whether Stripe performs [automatic
          collection](https://stripe.com/docs/invoicing/integration/automatic-advancement-collection)
          of the invoice. If `false`, the invoice's state doesn't automatically
          advance without an explicit action.
        type: optional<boolean>
      automatic_tax:
        type: AutomaticTax
      automatically_finalizes_at:
        docs: >-
          The time when this invoice is currently scheduled to be automatically
          finalized. The field will be `null` if the invoice is not scheduled to
          finalize in the future. If the invoice is not in the draft state, this
          field will always be `null` - see `finalized_at` for the time when an
          already-finalized invoice was finalized.
        type: optional<integer>
      billing_reason:
        docs: >-
          Indicates the reason why the invoice was created.


          * `manual`: Unrelated to a subscription, for example, created via the
          invoice editor.

          * `subscription`: No longer in use. Applies to subscriptions from
          before May 2018 where no distinction was made between updates, cycles,
          and thresholds.

          * `subscription_create`: A new subscription was created.

          * `subscription_cycle`: A subscription advanced into a new period.

          * `subscription_threshold`: A subscription reached a billing
          threshold.

          * `subscription_update`: A subscription was updated.

          * `upcoming`: Reserved for simulated invoices, per the upcoming
          invoice endpoint.
        type: optional<InvoiceBillingReason>
      charge:
        docs: ID of the latest charge generated for this invoice, if any.
        type: optional<InvoiceCharge>
      collection_method:
        docs: >-
          Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this invoice using the
          default source attached to the customer. When sending an invoice,
          Stripe will email this invoice to the customer with payment
          instructions.
        type: InvoiceCollectionMethod
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      custom_fields:
        docs: Custom fields displayed on the invoice.
        type: optional<list<InvoiceSettingCustomField>>
      customer:
        docs: The ID of the customer who will be billed.
        type: optional<InvoiceCustomer>
      customer_address:
        docs: >-
          The customer's address. Until the invoice is finalized, this field
          will equal `customer.address`. Once the invoice is finalized, this
          field will no longer be updated.
        type: optional<Address>
      customer_email:
        docs: >-
          The customer's email. Until the invoice is finalized, this field will
          equal `customer.email`. Once the invoice is finalized, this field will
          no longer be updated.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_name:
        docs: >-
          The customer's name. Until the invoice is finalized, this field will
          equal `customer.name`. Once the invoice is finalized, this field will
          no longer be updated.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_phone:
        docs: >-
          The customer's phone number. Until the invoice is finalized, this
          field will equal `customer.phone`. Once the invoice is finalized, this
          field will no longer be updated.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_shipping:
        docs: >-
          The customer's shipping information. Until the invoice is finalized,
          this field will equal `customer.shipping`. Once the invoice is
          finalized, this field will no longer be updated.
        type: optional<Shipping>
      customer_tax_exempt:
        docs: >-
          The customer's tax exempt status. Until the invoice is finalized, this
          field will equal `customer.tax_exempt`. Once the invoice is finalized,
          this field will no longer be updated.
        type: optional<InvoiceCustomerTaxExempt>
      customer_tax_ids:
        docs: >-
          The customer's tax IDs. Until the invoice is finalized, this field
          will contain the same tax IDs as `customer.tax_ids`. Once the invoice
          is finalized, this field will no longer be updated.
        type: optional<list<InvoicesResourceInvoiceTaxId>>
      default_payment_method:
        docs: >-
          ID of the default payment method for the invoice. It must belong to
          the customer associated with the invoice. If not set, defaults to the
          subscription's default payment method, if any, or to the default
          payment method in the customer's invoice settings.
        type: optional<InvoiceDefaultPaymentMethod>
      default_source:
        docs: >-
          ID of the default payment source for the invoice. It must belong to
          the customer associated with the invoice and be in a chargeable state.
          If not set, defaults to the subscription's default source, if any, or
          to the customer's default source.
        type: optional<InvoiceDefaultSource>
      default_tax_rates:
        docs: The tax rates applied to this invoice, if any.
        type: list<TaxRate>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users. Referenced as 'memo' in the Dashboard.
        type: optional<string>
        validation:
          maxLength: 5000
      discount:
        docs: >-
          Describes the current discount applied to this invoice, if there is
          one. Not populated if there are multiple discounts.
        type: optional<Discount>
      discounts:
        docs: >-
          The discounts applied to the invoice. Line item discounts are applied
          before invoice discounts. Use `expand[]=discounts` to expand each
          discount.
        type: list<InvoiceDiscountsItem>
      due_date:
        docs: >-
          The date on which payment for this invoice is due. This value will be
          `null` for invoices where `collection_method=charge_automatically`.
        type: optional<integer>
      effective_at:
        docs: >-
          The date when this invoice is in effect. Same as `finalized_at` unless
          overwritten. When defined, this value replaces the system-generated
          'Date of issue' printed on the invoice PDF and receipt.
        type: optional<integer>
      ending_balance:
        docs: >-
          Ending customer balance after the invoice is finalized. Invoices are
          finalized approximately an hour after successful webhook delivery or
          when payment collection is attempted for the invoice. If the invoice
          has not been finalized yet, this will be null.
        type: optional<integer>
      footer:
        docs: Footer displayed on the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      from_invoice:
        docs: >-
          Details of the invoice that was cloned. See the [revision
          documentation](https://stripe.com/docs/invoicing/invoice-revisions)
          for more details.
        type: optional<InvoicesResourceFromInvoice>
      hosted_invoice_url:
        docs: >-
          The URL for the hosted invoice page, which allows customers to view
          and pay an invoice. If the invoice has not been finalized yet, this
          will be null.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: >-
          Unique identifier for the object. This property is always present
          unless the invoice is an upcoming invoice. See [Retrieve an upcoming
          invoice](https://stripe.com/docs/api/invoices/upcoming) for more
          details.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_pdf:
        docs: >-
          The link to download the PDF for the invoice. If the invoice has not
          been finalized yet, this will be null.
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        type: ConnectAccountReference
      last_finalization_error:
        docs: >-
          The error encountered during the previous attempt to finalize the
          invoice. This field is cleared when the invoice is successfully
          finalized.
        type: optional<ApiErrors>
      latest_revision:
        docs: The ID of the most recent non-draft revision of this invoice
        type: optional<InvoiceLatestRevision>
      lines:
        docs: >-
          The individual line items that make up the invoice. `lines` is sorted
          as follows: (1) pending invoice items (including prorations) in
          reverse chronological order, (2) subscription items in reverse
          chronological order, and (3) invoice items added after invoice
          creation in chronological order.
        type: InvoiceLines
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      next_payment_attempt:
        docs: >-
          The time at which payment will next be attempted. This value will be
          `null` for invoices where `collection_method=send_invoice`.
        type: optional<integer>
      number:
        docs: >-
          A unique, identifying string that appears on emails sent to the
          customer for this invoice. This starts with the customer's unique
          invoice_prefix if it is specified.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"invoice">
      on_behalf_of:
        docs: >-
          The account (if any) for which the funds of the invoice payment are
          intended. If set, the invoice will be presented with the branding and
          support information of the specified account. See the [Invoices with
          Connect](https://stripe.com/docs/billing/invoices/connect)
          documentation for details.
        type: optional<InvoiceOnBehalfOf>
      paid:
        docs: >-
          Whether payment was successfully collected for this invoice. An
          invoice can be paid (most commonly) with a charge or with credit from
          the customer's account balance.
        type: boolean
      paid_out_of_band:
        docs: >-
          Returns true if the invoice was manually marked paid, returns false if
          the invoice hasn't been paid yet or was paid on Stripe.
        type: boolean
      payment_intent:
        docs: >-
          The PaymentIntent associated with this invoice. The PaymentIntent is
          generated when the invoice is finalized, and can then be used to pay
          the invoice. Note that voiding an invoice will cancel the
          PaymentIntent.
        type: optional<InvoicePaymentIntent>
      payment_settings:
        type: InvoicesPaymentSettings
      period_end:
        docs: >-
          End of the usage period during which invoice items were added to this
          invoice. This looks back one period for a subscription invoice. Use
          the [line item
          period](/api/invoices/line_item#invoice_line_item_object-period) to
          get the service period for each price.
        type: integer
      period_start:
        docs: >-
          Start of the usage period during which invoice items were added to
          this invoice. This looks back one period for a subscription invoice.
          Use the [line item
          period](/api/invoices/line_item#invoice_line_item_object-period) to
          get the service period for each price.
        type: integer
      post_payment_credit_notes_amount:
        docs: Total amount of all post-payment credit notes issued for this invoice.
        type: integer
      pre_payment_credit_notes_amount:
        docs: Total amount of all pre-payment credit notes issued for this invoice.
        type: integer
      quote:
        docs: The quote this invoice was generated from.
        type: optional<InvoiceQuote>
      receipt_number:
        docs: >-
          This is the transaction number that appears on email receipts sent for
          this invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      rendering:
        docs: >-
          The rendering-related settings that control how the invoice is
          displayed on customer-facing surfaces such as PDF and Hosted Invoice
          Page.
        type: optional<InvoicesResourceInvoiceRendering>
      shipping_cost:
        docs: >-
          The details of the cost of shipping, including the ShippingRate
          applied on the invoice.
        type: optional<InvoicesResourceShippingCost>
      shipping_details:
        docs: >-
          Shipping details for the invoice. The Invoice PDF will use the
          `shipping_details` value if it is set, otherwise the PDF will render
          the shipping address from the customer.
        type: optional<Shipping>
      starting_balance:
        docs: >-
          Starting customer balance before the invoice is finalized. If the
          invoice has not been finalized yet, this will be the current customer
          balance. For revision invoices, this also includes any customer
          balance that was applied to the original invoice.
        type: integer
      statement_descriptor:
        docs: >-
          Extra information about an invoice for the customer's credit card
          statement.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the invoice, one of `draft`, `open`, `paid`,
          `uncollectible`, or `void`. [Learn
          more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
        type: optional<InvoiceStatus>
      status_transitions:
        type: InvoicesResourceStatusTransitions
      subscription:
        docs: The subscription that this invoice was prepared for, if any.
        type: optional<InvoiceSubscription>
      subscription_details:
        docs: Details about the subscription that created this invoice.
        type: optional<SubscriptionDetailsData>
      subscription_proration_date:
        docs: >-
          Only set for upcoming invoices that preview prorations. The time used
          to calculate prorations.
        type: optional<integer>
      subtotal:
        docs: >-
          Total of all subscriptions, invoice items, and prorations on the
          invoice before any invoice level discount or exclusive tax is applied.
          Item discounts are already incorporated
        type: integer
      subtotal_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          subtotal of the invoice before any invoice level discount or tax is
          applied. Item discounts are already incorporated
        type: optional<integer>
      tax:
        docs: >-
          The amount of tax on this invoice. This is the sum of all the tax
          amounts on this invoice.
        type: optional<integer>
      test_clock:
        docs: ID of the test clock this invoice belongs to.
        type: optional<InvoiceTestClock>
      threshold_reason:
        type: optional<InvoiceThresholdReason>
      total:
        docs: Total after discounts and taxes.
        type: integer
      total_discount_amounts:
        docs: The aggregate amounts calculated per discount across all line items.
        type: optional<list<DiscountsResourceDiscountAmount>>
      total_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          total amount of the invoice including all discounts but excluding all
          tax.
        type: optional<integer>
      total_pretax_credit_amounts:
        docs: >-
          Contains pretax credit amounts (ex: discount, credit grants, etc) that
          apply to this invoice. This is a combined list of
          total_pretax_credit_amounts across all invoice line items.
        type: optional<list<InvoicesResourcePretaxCreditAmount>>
      total_tax_amounts:
        docs: The aggregate amounts calculated per tax rate for all line items.
        type: list<InvoiceTaxAmount>
      transfer_data:
        docs: >-
          The account (if any) the payment will be attributed to for tax
          reporting, and where funds from the payment will be transferred to for
          the invoice.
        type: optional<InvoiceTransferData>
      webhooks_delivered_at:
        docs: >-
          Invoices are automatically paid or sent 1 hour after webhooks are
          delivered, or until all webhook delivery attempts have [been
          exhausted](https://stripe.com/docs/billing/webhooks#understand). This
          field tracks the time when webhooks for this invoice were successfully
          delivered. If the invoice had no webhooks to deliver, this will be set
          while the invoice is being created.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  InvoiceAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  InvoiceApplication:
    discriminated: false
    docs: ID of the Connect Application that created the invoice.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  InvoiceBillingReason:
    docs: >-
      Indicates the reason why the invoice was created.


      * `manual`: Unrelated to a subscription, for example, created via the
      invoice editor.

      * `subscription`: No longer in use. Applies to subscriptions from before
      May 2018 where no distinction was made between updates, cycles, and
      thresholds.

      * `subscription_create`: A new subscription was created.

      * `subscription_cycle`: A subscription advanced into a new period.

      * `subscription_threshold`: A subscription reached a billing threshold.

      * `subscription_update`: A subscription was updated.

      * `upcoming`: Reserved for simulated invoices, per the upcoming invoice
      endpoint.
    enum:
      - automatic_pending_invoice_item_invoice
      - manual
      - quote_accept
      - subscription
      - subscription_create
      - subscription_cycle
      - subscription_threshold
      - subscription_update
      - upcoming
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceCharge:
    discriminated: false
    docs: ID of the latest charge generated for this invoice, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  InvoiceCollectionMethod:
    docs: >-
      Either `charge_automatically`, or `send_invoice`. When charging
      automatically, Stripe will attempt to pay this invoice using the default
      source attached to the customer. When sending an invoice, Stripe will
      email this invoice to the customer with payment instructions.
    enum:
      - charge_automatically
      - send_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceCreated:
    docs: >-
      Occurs whenever a new invoice is created. To learn how webhooks can be
      used with this event, and how they can affect it, see [Using Webhooks with
      Subscriptions](https://docs.stripe.com/subscriptions/webhooks).
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceCustomer:
    discriminated: false
    docs: The ID of the customer who will be billed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  InvoiceCustomerTaxExempt:
    docs: >-
      The customer's tax exempt status. Until the invoice is finalized, this
      field will equal `customer.tax_exempt`. Once the invoice is finalized,
      this field will no longer be updated.
    enum:
      - exempt
      - none
      - reverse
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceDefaultPaymentMethod:
    discriminated: false
    docs: >-
      ID of the default payment method for the invoice. It must belong to the
      customer associated with the invoice. If not set, defaults to the
      subscription's default payment method, if any, or to the default payment
      method in the customer's invoice settings.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  InvoiceDefaultSource:
    discriminated: false
    docs: >-
      ID of the default payment source for the invoice. It must belong to the
      customer associated with the invoice and be in a chargeable state. If not
      set, defaults to the subscription's default source, if any, or to the
      customer's default source.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentSource
  InvoiceDeleted:
    docs: >-
      Occurs whenever a draft invoice is deleted. Note: This event is not sent
      for [invoice
      previews](https://docs.stripe.com/api/invoices/create_preview).
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
      - type: DeletedDiscount
  InvoiceFinalizationFailed:
    docs: >-
      Occurs whenever a draft invoice cannot be finalized. See the invoice’s
      [last finalization
      error](https://docs.stripe.com/api/invoices/object#invoice_object-last_finalization_error)
      for details.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceFinalized:
    docs: >-
      Occurs whenever a draft invoice is finalized and updated to be an open
      invoice.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceInstallmentsCard:
    docs: ''
    properties:
      enabled:
        docs: Whether Installments are enabled for this Invoice.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  Invoiceitem:
    docs: >-
      Invoice Items represent the component lines of an
      [invoice](https://stripe.com/docs/api/invoices). An invoice item is added
      to an

      invoice by creating or updating it with an `invoice` field, at which point
      it will be included as

      [an invoice line item](https://stripe.com/docs/api/invoices/line_item)
      within

      [invoice.lines](https://stripe.com/docs/api/invoices/object#invoice_object-lines).


      Invoice Items can be created before you are ready to actually send the
      invoice. This can be particularly useful when combined

      with a [subscription](https://stripe.com/docs/api/subscriptions).
      Sometimes you want to add a charge or credit to a customer, but actually
      charge

      or credit the customer’s card only at the end of a regular billing cycle.
      This is useful for combining several charges

      (to minimize per-transaction fees), or for having Stripe tabulate your
      usage-based billing totals.


      Related guides: [Integrate with the Invoicing
      API](https://stripe.com/docs/invoicing/integration), [Subscription
      Invoices](https://stripe.com/docs/billing/invoices/subscription#adding-upcoming-invoice-items).
    properties:
      amount:
        docs: >-
          Amount (in the `currency` specified) of the invoice item. This should
          always be equal to `unit_amount * quantity`.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: >-
          The ID of the customer who will be billed when this invoice item is
          billed.
        type: InvoiceitemCustomer
      date:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      discountable:
        docs: >-
          If true, discounts will apply to this invoice item. Always false for
          prorations.
        type: boolean
      discounts:
        docs: >-
          The discounts which apply to the invoice item. Item discounts are
          applied before invoice discounts. Use `expand[]=discounts` to expand
          each discount.
        type: optional<list<InvoiceitemDiscountsItem>>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The ID of the invoice this invoice item belongs to.
        type: optional<InvoiceitemInvoice>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"invoiceitem">
      period:
        type: InvoiceLineItemPeriod
      plan:
        docs: >-
          If the invoice item is a proration, the plan of the subscription that
          the proration was computed for.
        type: optional<Plan>
      price:
        docs: The price of the invoice item.
        type: optional<Price>
      proration:
        docs: >-
          Whether the invoice item was created automatically as a proration
          adjustment when the customer switched plans.
        type: boolean
      quantity:
        docs: >-
          Quantity of units for the invoice item. If the invoice item is a
          proration, the quantity of the subscription that the proration was
          computed for.
        type: integer
      subscription:
        docs: The subscription that this invoice item has been created for, if any.
        type: optional<InvoiceitemSubscription>
      subscription_item:
        docs: >-
          The subscription item that this invoice item has been created for, if
          any.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_rates:
        docs: >-
          The tax rates which apply to the invoice item. When set, the
          `default_tax_rates` on the invoice do not apply to this invoice item.
        type: optional<list<TaxRate>>
      test_clock:
        docs: ID of the test clock this invoice item belongs to.
        type: optional<InvoiceitemTestClock>
      unit_amount:
        docs: Unit amount (in the `currency` specified) of the invoice item.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          Same as `unit_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  InvoiceitemCreated:
    docs: Occurs whenever an invoice item is created.
    properties:
      object:
        type: Invoiceitem
    source:
      openapi: ../openapi.yaml
  InvoiceitemCustomer:
    discriminated: false
    docs: >-
      The ID of the customer who will be billed when this invoice item is
      billed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  InvoiceitemDeleted:
    docs: Occurs whenever an invoice item is deleted.
    properties:
      object:
        type: Invoiceitem
    source:
      openapi: ../openapi.yaml
  InvoiceitemDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  InvoiceitemInvoice:
    discriminated: false
    docs: The ID of the invoice this invoice item belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  InvoiceitemSubscription:
    discriminated: false
    docs: The subscription that this invoice item has been created for, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  InvoiceitemTestClock:
    discriminated: false
    docs: ID of the test clock this invoice item belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  InvoiceItemThresholdReason:
    docs: ''
    properties:
      line_item_ids:
        docs: The IDs of the line items that triggered the threshold invoice.
        type: list<string>
      usage_gte:
        docs: The quantity threshold boundary that applied to the given line item.
        type: integer
    source:
      openapi: ../openapi.yaml
  InvoiceLatestRevision:
    discriminated: false
    docs: The ID of the most recent non-draft revision of this invoice
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  InvoiceLineItemPeriod:
    docs: ''
    properties:
      end:
        docs: >-
          The end of the period, which must be greater than or equal to the
          start. This value is inclusive.
        type: integer
      start:
        docs: The start of the period. This value is inclusive.
        type: integer
    source:
      openapi: ../openapi.yaml
  InvoiceLines:
    docs: >-
      The individual line items that make up the invoice. `lines` is sorted as
      follows: (1) pending invoice items (including prorations) in reverse
      chronological order, (2) subscription items in reverse chronological
      order, and (3) invoice items added after invoice creation in chronological
      order.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<LineItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InvoiceMandateOptionsCard:
    docs: ''
    properties:
      amount:
        docs: Amount to be charged for future payments.
        type: optional<integer>
      amount_type:
        docs: >-
          One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to
          the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
        type: optional<InvoiceMandateOptionsCardAmountType>
      description:
        docs: >-
          A description of the mandate or subscription that is meant to be
          displayed to the customer.
        type: optional<string>
        validation:
          maxLength: 200
    source:
      openapi: ../openapi.yaml
  InvoiceMandateOptionsCardAmountType:
    docs: >-
      One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the
      exact amount to be charged in future payments. If `maximum`, the amount
      charged can be up to the value passed for the `amount` param.
    enum:
      - fixed
      - maximum
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceMarkedUncollectible:
    docs: Occurs whenever an invoice is marked uncollectible.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) for which the funds of the invoice payment are
      intended. If set, the invoice will be presented with the branding and
      support information of the specified account. See the [Invoices with
      Connect](https://stripe.com/docs/billing/invoices/connect) documentation
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  InvoiceOverdue:
    docs: >-
      Occurs X number of days after an invoice becomes due&mdash;where X is
      determined by Automations
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoicePaid:
    docs: >-
      Occurs whenever an invoice payment attempt succeeds or an invoice is
      marked as paid out-of-band.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoicePaymentActionRequired:
    docs: >-
      Occurs whenever an invoice payment attempt requires further user action to
      complete.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoicePaymentFailed:
    docs: >-
      Occurs whenever an invoice payment attempt fails, due either to a declined
      payment or to the lack of a stored payment method.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoicePaymentIntent:
    discriminated: false
    docs: >-
      The PaymentIntent associated with this invoice. The PaymentIntent is
      generated when the invoice is finalized, and can then be used to pay the
      invoice. Note that voiding an invoice will cancel the PaymentIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  InvoicePaymentMethodOptionsAcssDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<InvoicePaymentMethodOptionsAcssDebitMandateOptions>
      verification_method:
        docs: Bank account verification method.
        type: optional<InvoicePaymentMethodOptionsAcssDebitVerificationMethod>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsAcssDebitMandateOptions:
    docs: ''
    properties:
      transaction_type:
        docs: Transaction type of the mandate.
        type: >-
          optional<InvoicePaymentMethodOptionsAcssDebitMandateOptionsTransactionType>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsAcssDebitMandateOptionsTransactionType:
    docs: Transaction type of the mandate.
    enum:
      - business
      - personal
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsAcssDebitVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsBancontact:
    docs: ''
    properties:
      preferred_language:
        docs: >-
          Preferred language of the Bancontact authorization page that the
          customer is redirected to.
        type: InvoicePaymentMethodOptionsBancontactPreferredLanguage
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsBancontactPreferredLanguage:
    docs: >-
      Preferred language of the Bancontact authorization page that the customer
      is redirected to.
    enum:
      - de
      - en
      - fr
      - nl
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCard:
    docs: ''
    properties:
      installments:
        type: optional<InvoiceInstallmentsCard>
      request_three_d_secure:
        docs: >-
          We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and
          [other
          requirements](https://stripe.com/docs/strong-customer-authentication).
          However, if you wish to request 3D Secure based on logic from your own
          fraud engine, provide this option. Read our guide on [manually
          requesting 3D
          Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar
          and our SCA Engine.
        type: optional<InvoicePaymentMethodOptionsCardRequestThreeDSecure>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCardRequestThreeDSecure:
    docs: >-
      We strongly recommend that you rely on our SCA Engine to automatically
      prompt your customers for authentication based on risk level and [other
      requirements](https://stripe.com/docs/strong-customer-authentication).
      However, if you wish to request 3D Secure based on logic from your own
      fraud engine, provide this option. Read our guide on [manually requesting
      3D
      Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
      for more information on how this configuration interacts with Radar and
      our SCA Engine.
    enum:
      - any
      - automatic
      - challenge
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCustomerBalance:
    docs: ''
    properties:
      bank_transfer:
        type: optional<InvoicePaymentMethodOptionsCustomerBalanceBankTransfer>
      funding_type:
        docs: >-
          The funding method type to be used when there are not enough funds in
          the customer balance. Permitted values include: `bank_transfer`.
        type: optional<literal<"bank_transfer">>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCustomerBalanceBankTransfer:
    docs: ''
    properties:
      eu_bank_transfer:
        type: >-
          optional<InvoicePaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer>
      type:
        docs: >-
          The bank transfer type that can be used for funding. Permitted values
          include: `eu_bank_transfer`, `gb_bank_transfer`, `jp_bank_transfer`,
          `mx_bank_transfer`, or `us_bank_transfer`.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCustomerBalanceBankTransferEuBankTransfer:
    docs: ''
    properties:
      country:
        docs: >-
          The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
        type: >-
          InvoicePaymentMethodOptionsCustomerBalanceBankTransferEuBankTransferCountry
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsCustomerBalanceBankTransferEuBankTransferCountry:
    docs: >-
      The desired country code of the bank account information. Permitted values
      include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    enum:
      - BE
      - DE
      - ES
      - FR
      - IE
      - NL
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsKonbini:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsSepaDebit:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccount:
    docs: ''
    properties:
      financial_connections:
        type: optional<InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptions>
      verification_method:
        docs: Bank account verification method.
        type: optional<InvoicePaymentMethodOptionsUsBankAccountVerificationMethod>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptions:
    docs: ''
    properties:
      filters:
        type: >-
          optional<InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsFilters>
      permissions:
        docs: >-
          The list of permissions to request. The `payment_method` permission
          must be included.
        type: >-
          optional<list<InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsPermissionsItem>>
      prefetch:
        docs: Data features requested to be retrieved upon account creation.
        type: >-
          optional<list<InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsPrefetchItem>>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsFilters:
    docs: ''
    properties:
      account_subcategories:
        docs: >-
          The account subcategories to use to filter for possible accounts to
          link. Valid subcategories are `checking` and `savings`.
        type: >-
          optional<list<InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsFiltersAccountSubcategoriesItem>>
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsFiltersAccountSubcategoriesItem:
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsPermissionsItem:
    enum:
      - balances
      - ownership
      - payment_method
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountLinkedAccountOptionsPrefetchItem:
    enum:
      - balances
      - ownership
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentMethodOptionsUsBankAccountVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicePaymentSucceeded:
    docs: Occurs whenever an invoice payment attempt succeeds.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceQuote:
    discriminated: false
    docs: The quote this invoice was generated from.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Quote
  InvoiceRenderingPdf:
    docs: ''
    properties:
      page_size:
        docs: >-
          Page size of invoice pdf. Options include a4, letter, and auto. If set
          to auto, page size will be switched to a4 or letter based on customer
          locale.
        type: optional<InvoiceRenderingPdfPageSize>
    source:
      openapi: ../openapi.yaml
  InvoiceRenderingPdfPageSize:
    docs: >-
      Page size of invoice pdf. Options include a4, letter, and auto. If set to
      auto, page size will be switched to a4 or letter based on customer locale.
    enum:
      - a4
      - auto
      - letter
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceRenderingTemplate:
    docs: >-
      Invoice Rendering Templates are used to configure how invoices are
      rendered on surfaces like the PDF. Invoice Rendering Templates

      can be created from within the Dashboard, and they can be used over the
      API when creating invoices.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      nickname:
        docs: A brief description of the template, hidden from customers
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"invoice_rendering_template">
      status:
        docs: The status of the template, one of `active` or `archived`.
        type: InvoiceRenderingTemplateStatus
      version:
        docs: >-
          Version of this template; version increases by one when an update on
          the template changes any field that controls invoice rendering
        type: integer
    source:
      openapi: ../openapi.yaml
  InvoiceRenderingTemplateStatus:
    docs: The status of the template, one of `active` or `archived`.
    enum:
      - active
      - archived
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceSent:
    docs: Occurs whenever an invoice email is sent out.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceSettingCustomerRenderingOptions:
    docs: ''
    properties:
      amount_tax_display:
        docs: >-
          How line-item prices and amounts will be displayed with respect to tax
          on invoice PDFs.
        type: optional<string>
        validation:
          maxLength: 5000
      template:
        docs: >-
          ID of the invoice rendering template to be used for this customer's
          invoices. If set, the template will be used on all invoices for this
          customer unless a template is set directly on the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InvoiceSettingCustomerSetting:
    docs: ''
    properties:
      custom_fields:
        docs: Default custom fields to be displayed on invoices for this customer.
        type: optional<list<InvoiceSettingCustomField>>
      default_payment_method:
        docs: >-
          ID of a payment method that's attached to the customer, to be used as
          the customer's default payment method for subscriptions and invoices.
        type: optional<InvoiceSettingCustomerSettingDefaultPaymentMethod>
      footer:
        docs: Default footer to be displayed on invoices for this customer.
        type: optional<string>
        validation:
          maxLength: 5000
      rendering_options:
        docs: Default options for invoice PDF rendering for this customer.
        type: optional<InvoiceSettingCustomerRenderingOptions>
    source:
      openapi: ../openapi.yaml
  InvoiceSettingCustomerSettingDefaultPaymentMethod:
    discriminated: false
    docs: >-
      ID of a payment method that's attached to the customer, to be used as the
      customer's default payment method for subscriptions and invoices.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  InvoiceSettingCustomField:
    docs: ''
    properties:
      name:
        docs: The name of the custom field.
        type: string
        validation:
          maxLength: 5000
      value:
        docs: The value of the custom field.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InvoiceSettingQuoteSetting:
    docs: ''
    properties:
      days_until_due:
        docs: >-
          Number of days within which a customer must pay invoices generated by
          this quote. This value will be `null` for quotes where
          `collection_method=charge_automatically`.
        type: optional<integer>
      issuer:
        type: ConnectAccountReference
    source:
      openapi: ../openapi.yaml
  InvoiceSettingRenderingOptions:
    docs: ''
    properties:
      amount_tax_display:
        docs: >-
          How line-item prices and amounts will be displayed with respect to tax
          on invoice PDFs.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InvoiceSettingSubscriptionSchedulePhaseSetting:
    docs: ''
    properties:
      account_tax_ids:
        docs: >-
          The account tax IDs associated with this phase of the subscription
          schedule. Will be set on invoices generated by this phase of the
          subscription schedule.
        type: >-
          optional<list<InvoiceSettingSubscriptionSchedulePhaseSettingAccountTaxIdsItem>>
      days_until_due:
        docs: >-
          Number of days within which a customer must pay invoices generated by
          this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: optional<integer>
      issuer:
        docs: >-
          The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified
          account.
        type: optional<ConnectAccountReference>
    source:
      openapi: ../openapi.yaml
  InvoiceSettingSubscriptionSchedulePhaseSettingAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  InvoiceSettingSubscriptionScheduleSetting:
    docs: ''
    properties:
      account_tax_ids:
        docs: >-
          The account tax IDs associated with the subscription schedule. Will be
          set on invoices generated by the subscription schedule.
        type: >-
          optional<list<InvoiceSettingSubscriptionScheduleSettingAccountTaxIdsItem>>
      days_until_due:
        docs: >-
          Number of days within which a customer must pay invoices generated by
          this subscription schedule. This value will be `null` for subscription
          schedules where `billing=charge_automatically`.
        type: optional<integer>
      issuer:
        type: ConnectAccountReference
    source:
      openapi: ../openapi.yaml
  InvoiceSettingSubscriptionScheduleSettingAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  InvoicesPaymentMethodOptions:
    docs: ''
    properties:
      acss_debit:
        docs: >-
          If paying by `acss_debit`, this sub-hash contains details about the
          Canadian pre-authorized debit payment method options to pass to the
          invoice’s PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsAcssDebit>
      bancontact:
        docs: >-
          If paying by `bancontact`, this sub-hash contains details about the
          Bancontact payment method options to pass to the invoice’s
          PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsBancontact>
      card:
        docs: >-
          If paying by `card`, this sub-hash contains details about the Card
          payment method options to pass to the invoice’s PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsCard>
      customer_balance:
        docs: >-
          If paying by `customer_balance`, this sub-hash contains details about
          the Bank transfer payment method options to pass to the invoice’s
          PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsCustomerBalance>
      konbini:
        docs: >-
          If paying by `konbini`, this sub-hash contains details about the
          Konbini payment method options to pass to the invoice’s PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsKonbini>
      sepa_debit:
        docs: >-
          If paying by `sepa_debit`, this sub-hash contains details about the
          SEPA Direct Debit payment method options to pass to the invoice’s
          PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsSepaDebit>
      us_bank_account:
        docs: >-
          If paying by `us_bank_account`, this sub-hash contains details about
          the ACH direct debit payment method options to pass to the invoice’s
          PaymentIntent.
        type: optional<InvoicePaymentMethodOptionsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  InvoicesPaymentSettings:
    docs: ''
    properties:
      default_mandate:
        docs: >-
          ID of the mandate to be used for this invoice. It must correspond to
          the payment method used to pay the invoice, including the invoice's
          default_payment_method or default_source, if set.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_method_options:
        docs: >-
          Payment-method-specific configuration to provide to the invoice’s
          PaymentIntent.
        type: optional<InvoicesPaymentMethodOptions>
      payment_method_types:
        docs: >-
          The list of payment method types (e.g. card) to provide to the
          invoice’s PaymentIntent. If not set, Stripe attempts to automatically
          determine the types to use by looking at the invoice’s default payment
          method, the subscription’s default payment method, the customer’s
          default payment method, and your [invoice template
          settings](https://dashboard.stripe.com/settings/billing/invoice).
        type: optional<list<InvoicesPaymentSettingsPaymentMethodTypesItem>>
    source:
      openapi: ../openapi.yaml
  InvoicesPaymentSettingsPaymentMethodTypesItem:
    enum:
      - ach_credit_transfer
      - ach_debit
      - acss_debit
      - amazon_pay
      - au_becs_debit
      - bacs_debit
      - bancontact
      - boleto
      - card
      - cashapp
      - customer_balance
      - eps
      - fpx
      - giropay
      - grabpay
      - ideal
      - jp_credit_transfer
      - kakao_pay
      - konbini
      - kr_card
      - link
      - multibanco
      - naver_pay
      - p24
      - payco
      - paynow
      - paypal
      - promptpay
      - revolut_pay
      - sepa_credit_transfer
      - sepa_debit
      - sofort
      - swish
      - us_bank_account
      - wechat_pay
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicesResourceFromInvoice:
    docs: ''
    properties:
      action:
        docs: The relation between this invoice and the cloned invoice
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The invoice that was cloned.
        type: InvoicesResourceFromInvoiceInvoice
    source:
      openapi: ../openapi.yaml
  InvoicesResourceFromInvoiceInvoice:
    discriminated: false
    docs: The invoice that was cloned.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  InvoicesResourceInvoiceRendering:
    docs: ''
    properties:
      amount_tax_display:
        docs: >-
          How line-item prices and amounts will be displayed with respect to tax
          on invoice PDFs.
        type: optional<string>
        validation:
          maxLength: 5000
      pdf:
        docs: Invoice pdf rendering options
        type: optional<InvoiceRenderingPdf>
      template:
        docs: ID of the rendering template that the invoice is formatted by.
        type: optional<string>
        validation:
          maxLength: 5000
      template_version:
        docs: Version of the rendering template that the invoice is using.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  InvoicesResourceInvoiceTaxId:
    docs: ''
    properties:
      type:
        docs: >-
          The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`,
          `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`,
          `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`,
          `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`,
          `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`,
          `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`,
          `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`,
          `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`,
          `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`,
          `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`,
          `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`,
          `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, `tz_vat`,
          `uz_vat`, `uz_tin`, `md_vat`, `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`,
          `bb_tin`, `cd_nif`, `mr_nif`, `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`,
          `mk_vat`, `sr_fin`, `sn_ninea`, `am_tin`, `np_pan`, `tj_tin`,
          `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
        type: InvoicesResourceInvoiceTaxIdType
      value:
        docs: The value of the tax ID.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  InvoicesResourceInvoiceTaxIdType:
    docs: >-
      The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`,
      `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`,
      `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`,
      `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`,
      `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`,
      `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`,
      `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`, `us_ein`, `kr_brn`,
      `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`,
      `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`,
      `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`,
      `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`, `bh_vat`, `kz_bin`, `ng_tin`,
      `om_vat`, `de_stn`, `ch_uid`, `tz_vat`, `uz_vat`, `uz_tin`, `md_vat`,
      `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`, `bb_tin`, `cd_nif`, `mr_nif`,
      `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`, `mk_vat`, `sr_fin`, `sn_ninea`,
      `am_tin`, `np_pan`, `tj_tin`, `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
    enum:
      - ad_nrt
      - ae_trn
      - al_tin
      - am_tin
      - ao_tin
      - ar_cuit
      - au_abn
      - au_arn
      - ba_tin
      - bb_tin
      - bg_uic
      - bh_vat
      - bo_tin
      - br_cnpj
      - br_cpf
      - bs_tin
      - by_tin
      - ca_bn
      - ca_gst_hst
      - ca_pst_bc
      - ca_pst_mb
      - ca_pst_sk
      - ca_qst
      - cd_nif
      - ch_uid
      - ch_vat
      - cl_tin
      - cn_tin
      - co_nit
      - cr_tin
      - de_stn
      - do_rcn
      - ec_ruc
      - eg_tin
      - es_cif
      - eu_oss_vat
      - eu_vat
      - gb_vat
      - ge_vat
      - gn_nif
      - hk_br
      - hr_oib
      - hu_tin
      - id_npwp
      - il_vat
      - in_gst
      - is_vat
      - jp_cn
      - jp_rn
      - jp_trn
      - ke_pin
      - kh_tin
      - kr_brn
      - kz_bin
      - li_uid
      - li_vat
      - ma_vat
      - md_vat
      - me_pib
      - mk_vat
      - mr_nif
      - mx_rfc
      - my_frp
      - my_itn
      - my_sst
      - ng_tin
      - no_vat
      - no_voec
      - np_pan
      - nz_gst
      - om_vat
      - pe_ruc
      - ph_tin
      - ro_tin
      - rs_pib
      - ru_inn
      - ru_kpp
      - sa_vat
      - sg_gst
      - sg_uen
      - si_tin
      - sn_ninea
      - sr_fin
      - sv_nit
      - th_vat
      - tj_tin
      - tr_tin
      - tw_vat
      - tz_vat
      - ua_vat
      - ug_tin
      - unknown
      - us_ein
      - uy_ruc
      - uz_tin
      - uz_vat
      - ve_rif
      - vn_tin
      - za_vat
      - zm_tin
      - zw_tin
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicesResourceLineItemsCreditedItems:
    docs: ''
    properties:
      invoice:
        docs: Invoice containing the credited invoice line items
        type: string
        validation:
          maxLength: 5000
      invoice_line_items:
        docs: Credited invoice line items
        type: list<string>
    source:
      openapi: ../openapi.yaml
  InvoicesResourceLineItemsProrationDetails:
    docs: ''
    properties:
      credited_items:
        docs: >-
          For a credit proration `line_item`, the original debit line_items to
          which the credit proration applies.
        type: optional<InvoicesResourceLineItemsCreditedItems>
    source:
      openapi: ../openapi.yaml
  InvoicesResourcePretaxCreditAmount:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount, in cents (or local equivalent), of the pretax credit
          amount.
        type: integer
      credit_balance_transaction:
        docs: >-
          The credit balance transaction that was applied to get this pretax
          credit amount.
        type: optional<InvoicesResourcePretaxCreditAmountCreditBalanceTransaction>
      discount:
        docs: The discount that was applied to get this pretax credit amount.
        type: optional<InvoicesResourcePretaxCreditAmountDiscount>
      type:
        docs: Type of the pretax credit amount referenced.
        type: InvoicesResourcePretaxCreditAmountType
    source:
      openapi: ../openapi.yaml
  InvoicesResourcePretaxCreditAmountCreditBalanceTransaction:
    discriminated: false
    docs: >-
      The credit balance transaction that was applied to get this pretax credit
      amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BillingCreditBalanceTransaction
  InvoicesResourcePretaxCreditAmountDiscount:
    discriminated: false
    docs: The discount that was applied to get this pretax credit amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
      - type: DeletedDiscount
  InvoicesResourcePretaxCreditAmountType:
    docs: Type of the pretax credit amount referenced.
    enum:
      - credit_balance_transaction
      - discount
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoicesResourceShippingCost:
    docs: ''
    properties:
      amount_subtotal:
        docs: Total shipping cost before any taxes are applied.
        type: integer
      amount_tax:
        docs: >-
          Total tax amount applied due to shipping costs. If no tax was applied,
          defaults to 0.
        type: integer
      amount_total:
        docs: Total shipping cost after taxes are applied.
        type: integer
      shipping_rate:
        docs: The ID of the ShippingRate for this invoice.
        type: optional<InvoicesResourceShippingCostShippingRate>
      taxes:
        docs: The taxes applied to the shipping rate.
        type: optional<list<LineItemsTaxAmount>>
    source:
      openapi: ../openapi.yaml
  InvoicesResourceShippingCostShippingRate:
    discriminated: false
    docs: The ID of the ShippingRate for this invoice.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ShippingRate
  InvoicesResourceStatusTransitions:
    docs: ''
    properties:
      finalized_at:
        docs: The time that the invoice draft was finalized.
        type: optional<integer>
      marked_uncollectible_at:
        docs: The time that the invoice was marked uncollectible.
        type: optional<integer>
      paid_at:
        docs: The time that the invoice was paid.
        type: optional<integer>
      voided_at:
        docs: The time that the invoice was voided.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  InvoiceStatus:
    docs: >-
      The status of the invoice, one of `draft`, `open`, `paid`,
      `uncollectible`, or `void`. [Learn
      more](https://stripe.com/docs/billing/invoices/workflow#workflow-overview)
    enum:
      - draft
      - open
      - paid
      - uncollectible
      - void
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceSubscription:
    discriminated: false
    docs: The subscription that this invoice was prepared for, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  InvoiceTaxAmount:
    docs: ''
    properties:
      amount:
        docs: The amount, in cents (or local equivalent), of the tax.
        type: integer
      inclusive:
        docs: Whether this tax amount is inclusive or exclusive.
        type: boolean
      tax_rate:
        docs: The tax rate that was applied to get this tax amount.
        type: InvoiceTaxAmountTaxRate
      taxability_reason:
        docs: >-
          The reasoning behind this tax, for example, if the product is tax
          exempt. The possible values for this field may be extended as new tax
          rules are supported.
        type: optional<InvoiceTaxAmountTaxabilityReason>
      taxable_amount:
        docs: The amount on which tax is calculated, in cents (or local equivalent).
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  InvoiceTaxAmountTaxabilityReason:
    docs: >-
      The reasoning behind this tax, for example, if the product is tax exempt.
      The possible values for this field may be extended as new tax rules are
      supported.
    enum:
      - customer_exempt
      - not_collecting
      - not_subject_to_tax
      - not_supported
      - portion_product_exempt
      - portion_reduced_rated
      - portion_standard_rated
      - product_exempt
      - product_exempt_holiday
      - proportionally_rated
      - reduced_rated
      - reverse_charge
      - standard_rated
      - taxable_basis_reduced
      - zero_rated
    inline: true
    source:
      openapi: ../openapi.yaml
  InvoiceTaxAmountTaxRate:
    discriminated: false
    docs: The tax rate that was applied to get this tax amount.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxRate
  InvoiceTestClock:
    discriminated: false
    docs: ID of the test clock this invoice belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  InvoiceThresholdReason:
    docs: ''
    properties:
      amount_gte:
        docs: >-
          The total invoice amount threshold boundary if it triggered the
          threshold invoice.
        type: optional<integer>
      item_reasons:
        docs: Indicates which line items triggered a threshold invoice.
        type: list<InvoiceItemThresholdReason>
    source:
      openapi: ../openapi.yaml
  InvoiceTransferData:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount in cents (or local equivalent) that will be transferred to
          the destination account when the invoice is paid. By default, the
          entire amount is transferred to the destination.
        type: optional<integer>
      destination:
        docs: >-
          The account where funds from the payment will be transferred to upon
          payment success.
        type: InvoiceTransferDataDestination
    source:
      openapi: ../openapi.yaml
  InvoiceTransferDataDestination:
    discriminated: false
    docs: >-
      The account where funds from the payment will be transferred to upon
      payment success.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  InvoiceUpcoming:
    docs: >-
      Occurs X number of days before a subscription is scheduled to create an
      invoice that is automatically charged&mdash;where X is determined by your
      [subscriptions
      settings](https://dashboard.stripe.com/account/billing/automatic). Note:
      The received `Invoice` object will not have an invoice ID.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceUpdated:
    docs: Occurs whenever an invoice changes (e.g., the invoice amount).
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceVoided:
    docs: Occurs whenever an invoice is voided.
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  InvoiceWillBeDue:
    docs: >-
      Occurs X number of days before an invoice becomes due&mdash;where X is
      determined by Automations
    properties:
      object:
        type: Invoice
    source:
      openapi: ../openapi.yaml
  IssuingAuthorization:
    docs: >-
      When an [issued card](https://stripe.com/docs/issuing) is used to make a
      purchase, an Issuing `Authorization`

      object is created.
      [Authorizations](https://stripe.com/docs/issuing/purchases/authorizations)
      must be approved for the

      purchase to be completed successfully.


      Related guide: [Issued card
      authorizations](https://stripe.com/docs/issuing/purchases/authorizations)
    properties:
      amount:
        docs: >-
          The total amount that was authorized or rejected. This amount is in
          `currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). `amount`
          should be the same as `merchant_amount`, unless `currency` and
          `merchant_currency` are different.
        type: integer
      amount_details:
        docs: >-
          Detailed breakdown of amount components. These amounts are denominated
          in `currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<IssuingAuthorizationAmountDetails>
      approved:
        docs: Whether the authorization has been approved.
        type: boolean
      authorization_method:
        docs: How the card details were provided.
        type: IssuingAuthorizationAuthorizationMethod
      balance_transactions:
        docs: List of balance transactions associated with this authorization.
        type: list<BalanceTransaction>
      card:
        type: IssuingCard
      cardholder:
        docs: The cardholder to whom this authorization belongs.
        type: optional<IssuingAuthorizationCardholder>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          The currency of the cardholder. This currency can be different from
          the currency presented at authorization and the `merchant_currency`
          field on this authorization. Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      fleet:
        docs: Fleet-specific information for authorizations using Fleet cards.
        type: optional<IssuingAuthorizationFleetData>
      fraud_challenges:
        docs: >-
          Fraud challenges sent to the cardholder, if this authorization was
          declined for fraud risk reasons.
        type: optional<list<IssuingAuthorizationFraudChallenge>>
      fuel:
        docs: >-
          Information about fuel that was purchased with this transaction.
          Typically this information is received from the merchant after the
          authorization has been approved and the fuel dispensed.
        type: optional<IssuingAuthorizationFuelData>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      merchant_amount:
        docs: >-
          The total amount that was authorized or rejected. This amount is in
          the `merchant_currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
          `merchant_amount` should be the same as `amount`, unless
          `merchant_currency` and `currency` are different.
        type: integer
      merchant_currency:
        docs: >-
          The local currency that was presented to the cardholder for the
          authorization. This currency can be different from the cardholder
          currency and the `currency` field on this authorization. Three-letter
          [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html),
          in lowercase. Must be a [supported
          currency](https://stripe.com/docs/currencies).
        type: string
      merchant_data:
        type: IssuingAuthorizationMerchantData
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      network_data:
        docs: >-
          Details about the authorization, such as identifiers, set by the card
          network.
        type: optional<IssuingAuthorizationNetworkData>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.authorization">
      pending_request:
        docs: >-
          The pending authorization request. This field will only be non-null
          during an `issuing_authorization.request` webhook.
        type: optional<IssuingAuthorizationPendingRequest>
      request_history:
        docs: >-
          History of every time a `pending_request` authorization was
          approved/declined, either by you directly or by Stripe (e.g. based on
          your spending_controls). If the merchant changes the authorization by
          performing an incremental authorization, you can look at this field to
          see the previous requests for the authorization. This field can be
          helpful in determining why a given authorization was
          approved/declined.
        type: list<IssuingAuthorizationRequest>
      status:
        docs: The current status of the authorization in its lifecycle.
        type: IssuingAuthorizationStatus
      token:
        docs: >-
          [Token](https://stripe.com/docs/api/issuing/tokens/object) object used
          for this authorization. If a network token was not used for this
          authorization, this field will be null.
        type: optional<IssuingAuthorizationToken>
      transactions:
        docs: >-
          List of
          [transactions](https://stripe.com/docs/api/issuing/transactions)
          associated with this authorization.
        type: list<IssuingTransaction>
      treasury:
        docs: >-
          [Treasury](https://stripe.com/docs/api/treasury) details related to
          this authorization if it was created on a
          [FinancialAccount](https://stripe.com/docs/api/treasury/financial_accounts).
        type: optional<IssuingAuthorizationTreasury>
      verification_data:
        type: IssuingAuthorizationVerificationData
      verified_by_fraud_challenge:
        docs: >-
          Whether the authorization bypassed fraud risk checks because the
          cardholder has previously completed a fraud challenge on a similar
          high-risk authorization from the same merchant.
        type: optional<boolean>
      wallet:
        docs: >-
          The digital wallet used for this transaction. One of `apple_pay`,
          `google_pay`, or `samsung_pay`. Will populate as `null` when no
          digital wallet was utilized.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationAmountDetails:
    docs: ''
    properties:
      atm_fee:
        docs: The fee charged by the ATM for the cash withdrawal.
        type: optional<integer>
      cashback_amount:
        docs: The amount of cash requested by the cardholder.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationAuthenticationExemption:
    docs: ''
    properties:
      claimed_by:
        docs: >-
          The entity that requested the exemption, either the acquiring merchant
          or the Issuing user.
        type: IssuingAuthorizationAuthenticationExemptionClaimedBy
      type:
        docs: The specific exemption claimed for this authorization.
        type: IssuingAuthorizationAuthenticationExemptionType
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationAuthenticationExemptionClaimedBy:
    docs: >-
      The entity that requested the exemption, either the acquiring merchant or
      the Issuing user.
    enum:
      - acquirer
      - issuer
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationAuthenticationExemptionType:
    docs: The specific exemption claimed for this authorization.
    enum:
      - low_value_transaction
      - transaction_risk_analysis
      - unknown
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationAuthorizationMethod:
    docs: How the card details were provided.
    enum:
      - chip
      - contactless
      - keyed_in
      - online
      - swipe
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationCardholder:
    discriminated: false
    docs: The cardholder to whom this authorization belongs.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCardholder
  IssuingAuthorizationCreated:
    docs: Occurs whenever an authorization is created.
    properties:
      object:
        type: IssuingAuthorization
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetCardholderPromptData:
    docs: ''
    properties:
      alphanumeric_id:
        docs: >-
          [Deprecated] An alphanumeric ID, though typical point of sales only
          support numeric entry. The card program can be configured to prompt
          for a vehicle ID, driver ID, or generic ID.
        type: optional<string>
        validation:
          maxLength: 5000
      driver_id:
        docs: Driver ID.
        type: optional<string>
        validation:
          maxLength: 5000
      odometer:
        docs: Odometer reading.
        type: optional<integer>
      unspecified_id:
        docs: >-
          An alphanumeric ID. This field is used when a vehicle ID, driver ID,
          or generic ID is entered by the cardholder, but the merchant or card
          network did not specify the prompt type.
        type: optional<string>
        validation:
          maxLength: 5000
      user_id:
        docs: User ID.
        type: optional<string>
        validation:
          maxLength: 5000
      vehicle_number:
        docs: Vehicle number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetData:
    docs: ''
    properties:
      cardholder_prompt_data:
        docs: >-
          Answers to prompts presented to the cardholder at the point of sale.
          Prompted fields vary depending on the configuration of your physical
          fleet cards. Typical points of sale support only numeric entry.
        type: optional<IssuingAuthorizationFleetCardholderPromptData>
      purchase_type:
        docs: The type of purchase.
        type: optional<IssuingAuthorizationFleetDataPurchaseType>
      reported_breakdown:
        docs: >-
          More information about the total amount. Typically this information is
          received from the merchant after the authorization has been approved
          and the fuel dispensed. This information is not guaranteed to be
          accurate as some merchants may provide unreliable data.
        type: optional<IssuingAuthorizationFleetReportedBreakdown>
      service_type:
        docs: The type of fuel service.
        type: optional<IssuingAuthorizationFleetDataServiceType>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetDataPurchaseType:
    docs: The type of purchase.
    enum:
      - fuel_and_non_fuel_purchase
      - fuel_purchase
      - non_fuel_purchase
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetDataServiceType:
    docs: The type of fuel service.
    enum:
      - full_service
      - non_fuel_transaction
      - self_service
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetFuelPriceData:
    docs: ''
    properties:
      gross_amount_decimal:
        docs: >-
          Gross fuel amount that should equal Fuel Quantity multiplied by Fuel
          Unit Cost, inclusive of taxes.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetNonFuelPriceData:
    docs: ''
    properties:
      gross_amount_decimal:
        docs: >-
          Gross non-fuel amount that should equal the sum of the line items,
          inclusive of taxes.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetReportedBreakdown:
    docs: ''
    properties:
      fuel:
        docs: Breakdown of fuel portion of the purchase.
        type: optional<IssuingAuthorizationFleetFuelPriceData>
      non_fuel:
        docs: Breakdown of non-fuel portion of the purchase.
        type: optional<IssuingAuthorizationFleetNonFuelPriceData>
      tax:
        docs: Information about tax included in this transaction.
        type: optional<IssuingAuthorizationFleetTaxData>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFleetTaxData:
    docs: ''
    properties:
      local_amount_decimal:
        docs: >-
          Amount of state or provincial Sales Tax included in the transaction
          amount. `null` if not reported by merchant or not subject to tax.
        type: optional<string>
      national_amount_decimal:
        docs: >-
          Amount of national Sales Tax or VAT included in the transaction
          amount. `null` if not reported by merchant or not subject to tax.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFraudChallenge:
    docs: ''
    properties:
      channel:
        docs: >-
          The method by which the fraud challenge was delivered to the
          cardholder.
        type: literal<"sms">
      status:
        docs: The status of the fraud challenge.
        type: IssuingAuthorizationFraudChallengeStatus
      undeliverable_reason:
        docs: If the challenge is not deliverable, the reason why.
        type: optional<IssuingAuthorizationFraudChallengeUndeliverableReason>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFraudChallengeStatus:
    docs: The status of the fraud challenge.
    enum:
      - expired
      - pending
      - rejected
      - undeliverable
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFraudChallengeUndeliverableReason:
    docs: If the challenge is not deliverable, the reason why.
    enum:
      - no_phone_number
      - unsupported_phone_number
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFuelData:
    docs: ''
    properties:
      industry_product_code:
        docs: >-
          [Conexxus Payment System Product
          Code](https://www.conexxus.org/conexxus-payment-system-product-codes)
          identifying the primary fuel product purchased.
        type: optional<string>
        validation:
          maxLength: 5000
      quantity_decimal:
        docs: >-
          The quantity of `unit`s of fuel that was dispensed, represented as a
          decimal string with at most 12 decimal places.
        type: optional<string>
      type:
        docs: The type of fuel that was purchased.
        type: optional<IssuingAuthorizationFuelDataType>
      unit:
        docs: The units for `quantity_decimal`.
        type: optional<IssuingAuthorizationFuelDataUnit>
      unit_cost_decimal:
        docs: >-
          The cost in cents per each unit of fuel, represented as a decimal
          string with at most 12 decimal places.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFuelDataType:
    docs: The type of fuel that was purchased.
    enum:
      - diesel
      - other
      - unleaded_plus
      - unleaded_regular
      - unleaded_super
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationFuelDataUnit:
    docs: The units for `quantity_decimal`.
    enum:
      - charging_minute
      - imperial_gallon
      - kilogram
      - kilowatt_hour
      - liter
      - other
      - pound
      - us_gallon
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationMerchantData:
    docs: ''
    properties:
      category:
        docs: >-
          A categorization of the seller's type of business. See our [merchant
          categories guide](https://stripe.com/docs/issuing/merchant-categories)
          for a list of possible values.
        type: string
        validation:
          maxLength: 5000
      category_code:
        docs: The merchant category code for the seller’s business
        type: string
        validation:
          maxLength: 5000
      city:
        docs: City where the seller is located
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: Country where the seller is located
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: Name of the seller
        type: optional<string>
        validation:
          maxLength: 5000
      network_id:
        docs: >-
          Identifier assigned to the seller by the card network. Different card
          networks may assign different network_id fields to the same merchant.
        type: string
        validation:
          maxLength: 5000
      postal_code:
        docs: Postal code where the seller is located
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: State where the seller is located
        type: optional<string>
        validation:
          maxLength: 5000
      tax_id:
        docs: >-
          The seller's tax identification number. Currently populated for French
          merchants only.
        type: optional<string>
        validation:
          maxLength: 5000
      terminal_id:
        docs: An ID assigned by the seller to the location of the sale.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: URL provided by the merchant on a 3DS request
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationNetworkData:
    docs: ''
    properties:
      acquiring_institution_id:
        docs: >-
          Identifier assigned to the acquirer by the card network. Sometimes
          this value is not provided by the network; in this case, the value
          will be `null`.
        type: optional<string>
        validation:
          maxLength: 5000
      system_trace_audit_number:
        docs: >-
          The System Trace Audit Number (STAN) is a 6-digit identifier assigned
          by the acquirer. Prefer `network_data.transaction_id` if present,
          unless you have special requirements.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_id:
        docs: >-
          Unique identifier for the authorization assigned by the card network
          used to match subsequent messages, disputes, and transactions.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationPendingRequest:
    docs: ''
    properties:
      amount:
        docs: >-
          The additional amount Stripe will hold if the authorization is
          approved, in the card's
          [currency](https://stripe.com/docs/api#issuing_authorization_object-pending-request-currency)
          and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      amount_details:
        docs: >-
          Detailed breakdown of amount components. These amounts are denominated
          in `currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<IssuingAuthorizationAmountDetails>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      is_amount_controllable:
        docs: >-
          If set `true`, you may provide
          [amount](https://stripe.com/docs/api/issuing/authorizations/approve#approve_issuing_authorization-amount)
          to control how much to hold for the authorization.
        type: boolean
      merchant_amount:
        docs: >-
          The amount the merchant is requesting to be authorized in the
          `merchant_currency`. The amount is in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      merchant_currency:
        docs: The local currency the merchant is requesting to authorize.
        type: string
      network_risk_score:
        docs: >-
          The card network's estimate of the likelihood that an authorization is
          fraudulent. Takes on values between 1 and 99.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationRequest:
    docs: ''
    properties:
      amount:
        docs: >-
          The `pending_request.amount` at the time of the request, presented in
          your card's currency and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). Stripe held
          this amount from your account to fund the authorization if the request
          was approved.
        type: integer
      amount_details:
        docs: >-
          Detailed breakdown of amount components. These amounts are denominated
          in `currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<IssuingAuthorizationAmountDetails>
      approved:
        docs: Whether this request was approved.
        type: boolean
      authorization_code:
        docs: >-
          A code created by Stripe which is shared with the merchant to validate
          the authorization. This field will be populated if the authorization
          message was approved. The code typically starts with the letter "S",
          followed by a six-digit number. For example, "S498162". Please note
          that the code is not guaranteed to be unique across authorizations.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      merchant_amount:
        docs: >-
          The `pending_request.merchant_amount` at the time of the request,
          presented in the `merchant_currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      merchant_currency:
        docs: >-
          The currency that was collected by the merchant and presented to the
          cardholder for the authorization. Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      network_risk_score:
        docs: >-
          The card network's estimate of the likelihood that an authorization is
          fraudulent. Takes on values between 1 and 99.
        type: optional<integer>
      reason:
        docs: >-
          When an authorization is approved or declined by you or by Stripe,
          this field provides additional detail on the reason for the outcome.
        type: IssuingAuthorizationRequestReason
      reason_message:
        docs: >-
          If the `request_history.reason` is `webhook_error` because the direct
          webhook response is invalid (for example, parsing errors or missing
          parameters), we surface a more detailed error message via this field.
        type: optional<string>
        validation:
          maxLength: 5000
      requested_at:
        docs: >-
          Time when the card network received an authorization request from the
          acquirer in UTC. Referred to by networks as transmission time.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationRequestReason:
    docs: >-
      When an authorization is approved or declined by you or by Stripe, this
      field provides additional detail on the reason for the outcome.
    enum:
      - account_disabled
      - card_active
      - card_canceled
      - card_expired
      - card_inactive
      - cardholder_blocked
      - cardholder_inactive
      - cardholder_verification_required
      - insecure_authorization_method
      - insufficient_funds
      - not_allowed
      - pin_blocked
      - spending_controls
      - suspected_fraud
      - verification_failed
      - webhook_approved
      - webhook_declined
      - webhook_error
      - webhook_timeout
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationStatus:
    docs: The current status of the authorization in its lifecycle.
    enum:
      - closed
      - pending
      - reversed
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationThreeDSecure:
    docs: ''
    properties:
      result:
        docs: The outcome of the 3D Secure authentication request.
        type: IssuingAuthorizationThreeDSecureResult
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationThreeDSecureResult:
    docs: The outcome of the 3D Secure authentication request.
    enum:
      - attempt_acknowledged
      - authenticated
      - failed
      - required
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationToken:
    discriminated: false
    docs: >-
      [Token](https://stripe.com/docs/api/issuing/tokens/object) object used for
      this authorization. If a network token was not used for this
      authorization, this field will be null.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingToken
  IssuingAuthorizationTreasury:
    docs: ''
    properties:
      received_credits:
        docs: >-
          The array of
          [ReceivedCredits](https://stripe.com/docs/api/treasury/received_credits)
          associated with this authorization
        type: list<string>
      received_debits:
        docs: >-
          The array of
          [ReceivedDebits](https://stripe.com/docs/api/treasury/received_debits)
          associated with this authorization
        type: list<string>
      transaction:
        docs: >-
          The Treasury
          [Transaction](https://stripe.com/docs/api/treasury/transactions)
          associated with this authorization
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationUpdated:
    docs: Occurs whenever an authorization is updated.
    properties:
      object:
        type: IssuingAuthorization
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationVerificationData:
    docs: ''
    properties:
      address_line1_check:
        docs: >-
          Whether the cardholder provided an address first line and if it
          matched the cardholder’s `billing.address.line1`.
        type: IssuingAuthorizationVerificationDataAddressLine1Check
      address_postal_code_check:
        docs: >-
          Whether the cardholder provided a postal code and if it matched the
          cardholder’s `billing.address.postal_code`.
        type: IssuingAuthorizationVerificationDataAddressPostalCodeCheck
      authentication_exemption:
        docs: The exemption applied to this authorization.
        type: optional<IssuingAuthorizationAuthenticationExemption>
      cvc_check:
        docs: >-
          Whether the cardholder provided a CVC and if it matched Stripe’s
          record.
        type: IssuingAuthorizationVerificationDataCvcCheck
      expiry_check:
        docs: >-
          Whether the cardholder provided an expiry date and if it matched
          Stripe’s record.
        type: IssuingAuthorizationVerificationDataExpiryCheck
      postal_code:
        docs: >-
          The postal code submitted as part of the authorization used for postal
          code verification.
        type: optional<string>
        validation:
          maxLength: 5000
      three_d_secure:
        docs: 3D Secure details.
        type: optional<IssuingAuthorizationThreeDSecure>
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationVerificationDataAddressLine1Check:
    docs: >-
      Whether the cardholder provided an address first line and if it matched
      the cardholder’s `billing.address.line1`.
    enum:
      - match
      - mismatch
      - not_provided
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationVerificationDataAddressPostalCodeCheck:
    docs: >-
      Whether the cardholder provided a postal code and if it matched the
      cardholder’s `billing.address.postal_code`.
    enum:
      - match
      - mismatch
      - not_provided
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationVerificationDataCvcCheck:
    docs: Whether the cardholder provided a CVC and if it matched Stripe’s record.
    enum:
      - match
      - mismatch
      - not_provided
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingAuthorizationVerificationDataExpiryCheck:
    docs: >-
      Whether the cardholder provided an expiry date and if it matched Stripe’s
      record.
    enum:
      - match
      - mismatch
      - not_provided
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCard:
    docs: >-
      You can [create physical or virtual
      cards](https://stripe.com/docs/issuing) that are issued to cardholders.
    properties:
      brand:
        docs: The brand of the card.
        type: string
        validation:
          maxLength: 5000
      cancellation_reason:
        docs: The reason why the card was canceled.
        type: optional<IssuingCardCancellationReason>
      cardholder:
        type: IssuingCardholder
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Supported currencies are `usd` in the US, `eur` in the EU, and `gbp`
          in the UK.
        type: string
      cvc:
        docs: >-
          The card's CVC. For security reasons, this is only available for
          virtual cards, and will be omitted unless you explicitly request it
          with [the `expand`
          parameter](https://stripe.com/docs/api/expanding_objects).
          Additionally, it's only available via the ["Retrieve a card"
          endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via
          "List all cards" or any other endpoint.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: The expiration month of the card.
        type: integer
      exp_year:
        docs: The expiration year of the card.
        type: integer
      financial_account:
        docs: The financial account this card is attached to.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last4:
        docs: The last 4 digits of the card number.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      number:
        docs: >-
          The full unredacted card number. For security reasons, this is only
          available for virtual cards, and will be omitted unless you explicitly
          request it with [the `expand`
          parameter](https://stripe.com/docs/api/expanding_objects).
          Additionally, it's only available via the ["Retrieve a card"
          endpoint](https://stripe.com/docs/api/issuing/cards/retrieve), not via
          "List all cards" or any other endpoint.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.card">
      personalization_design:
        docs: The personalization design object belonging to this card.
        type: optional<IssuingCardPersonalizationDesign>
      replaced_by:
        docs: The latest card that replaces this card, if any.
        type: optional<IssuingCardReplacedBy>
      replacement_for:
        docs: The card this card replaces, if any.
        type: optional<IssuingCardReplacementFor>
      replacement_reason:
        docs: The reason why the previous card needed to be replaced.
        type: optional<IssuingCardReplacementReason>
      shipping:
        docs: Where and how the card will be shipped.
        type: optional<IssuingCardShipping>
      spending_controls:
        type: IssuingCardAuthorizationControls
      status:
        docs: >-
          Whether authorizations can be approved on this card. May be blocked
          from activating cards depending on past-due Cardholder requirements.
          Defaults to `inactive`.
        type: IssuingCardStatus
      type:
        docs: The type of the card.
        type: IssuingCardType
      wallets:
        docs: >-
          Information relating to digital wallets (like Apple Pay and Google
          Pay).
        type: optional<IssuingCardWallets>
    source:
      openapi: ../openapi.yaml
  IssuingCardApplePay:
    docs: ''
    properties:
      eligible:
        docs: Apple Pay Eligibility
        type: boolean
      ineligible_reason:
        docs: Reason the card is ineligible for Apple Pay
        type: optional<IssuingCardApplePayIneligibleReason>
    source:
      openapi: ../openapi.yaml
  IssuingCardApplePayIneligibleReason:
    docs: Reason the card is ineligible for Apple Pay
    enum:
      - missing_agreement
      - missing_cardholder_contact
      - unsupported_region
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardAuthorizationControls:
    docs: ''
    properties:
      allowed_categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          of authorizations to allow. All other categories will be blocked.
          Cannot be set with `blocked_categories`.
        type: optional<list<IssuingCardAuthorizationControlsAllowedCategoriesItem>>
      allowed_merchant_countries:
        docs: >-
          Array of strings containing representing countries from which
          authorizations will be allowed. Authorizations from merchants in all
          other countries will be declined. Country codes should be ISO 3166
          alpha-2 country codes (e.g. `US`). Cannot be set with
          `blocked_merchant_countries`. Provide an empty value to unset this
          control.
        type: optional<list<string>>
      blocked_categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          of authorizations to decline. All other categories will be allowed.
          Cannot be set with `allowed_categories`.
        type: optional<list<IssuingCardAuthorizationControlsBlockedCategoriesItem>>
      blocked_merchant_countries:
        docs: >-
          Array of strings containing representing countries from which
          authorizations will be declined. Country codes should be ISO 3166
          alpha-2 country codes (e.g. `US`). Cannot be set with
          `allowed_merchant_countries`. Provide an empty value to unset this
          control.
        type: optional<list<string>>
      spending_limits:
        docs: >-
          Limit spending with amount-based rules that apply across any cards
          this card replaced (i.e., its `replacement_for` card and _that_ card's
          `replacement_for` card, up the chain).
        type: optional<list<IssuingCardSpendingLimit>>
      spending_limits_currency:
        docs: >-
          Currency of the amounts within `spending_limits`. Always the same as
          the currency of the card.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingCardAuthorizationControlsAllowedCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardAuthorizationControlsBlockedCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardCancellationReason:
    docs: The reason why the card was canceled.
    enum:
      - design_rejected
      - lost
      - stolen
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardCreated:
    docs: Occurs whenever a card is created.
    properties:
      object:
        type: IssuingCard
    source:
      openapi: ../openapi.yaml
  IssuingCardGooglePay:
    docs: ''
    properties:
      eligible:
        docs: Google Pay Eligibility
        type: boolean
      ineligible_reason:
        docs: Reason the card is ineligible for Google Pay
        type: optional<IssuingCardGooglePayIneligibleReason>
    source:
      openapi: ../openapi.yaml
  IssuingCardGooglePayIneligibleReason:
    docs: Reason the card is ineligible for Google Pay
    enum:
      - missing_agreement
      - missing_cardholder_contact
      - unsupported_region
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholder:
    docs: >-
      An Issuing `Cardholder` object represents an individual or business entity
      who is [issued](https://stripe.com/docs/issuing) cards.


      Related guide: [How to create a
      cardholder](https://stripe.com/docs/issuing/cards/virtual/issue-cards#create-cardholder)
    properties:
      billing:
        type: IssuingCardholderAddress
      company:
        docs: Additional information about a `company` cardholder.
        type: optional<IssuingCardholderCompany>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      email:
        docs: The cardholder's email address.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      individual:
        docs: Additional information about an `individual` cardholder.
        type: optional<IssuingCardholderIndividual>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      name:
        docs: The cardholder's name. This will be printed on cards issued to them.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.cardholder">
      phone_number:
        docs: >-
          The cardholder's phone number. This is required for all cardholders
          who will be creating EU cards. See the [3D Secure
          documentation](https://stripe.com/docs/issuing/3d-secure#when-is-3d-secure-applied)
          for more details.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_locales:
        docs: >-
          The cardholder’s preferred locales (languages), ordered by preference.
          Locales can be `de`, `en`, `es`, `fr`, or `it`.
           This changes the language of the [3D Secure flow](https://stripe.com/docs/issuing/3d-secure) and one-time password messages sent to the cardholder.
        type: optional<list<IssuingCardholderPreferredLocalesItem>>
      requirements:
        type: IssuingCardholderRequirements
      spending_controls:
        docs: >-
          Rules that control spending across this cardholder's cards. Refer to
          our
          [documentation](https://stripe.com/docs/issuing/controls/spending-controls)
          for more details.
        type: optional<IssuingCardholderAuthorizationControls>
      status:
        docs: Specifies whether to permit authorizations on this cardholder's cards.
        type: IssuingCardholderStatus
      type:
        docs: >-
          One of `individual` or `company`. See [Choose a cardholder
          type](https://stripe.com/docs/issuing/other/choose-cardholder) for
          more details.
        type: IssuingCardholderType
    source:
      openapi: ../openapi.yaml
  IssuingCardholderAddress:
    docs: ''
    properties:
      address:
        type: Address
    source:
      openapi: ../openapi.yaml
  IssuingCardholderAuthorizationControls:
    docs: ''
    properties:
      allowed_categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          of authorizations to allow. All other categories will be blocked.
          Cannot be set with `blocked_categories`.
        type: >-
          optional<list<IssuingCardholderAuthorizationControlsAllowedCategoriesItem>>
      allowed_merchant_countries:
        docs: >-
          Array of strings containing representing countries from which
          authorizations will be allowed. Authorizations from merchants in all
          other countries will be declined. Country codes should be ISO 3166
          alpha-2 country codes (e.g. `US`). Cannot be set with
          `blocked_merchant_countries`. Provide an empty value to unset this
          control.
        type: optional<list<string>>
      blocked_categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          of authorizations to decline. All other categories will be allowed.
          Cannot be set with `allowed_categories`.
        type: >-
          optional<list<IssuingCardholderAuthorizationControlsBlockedCategoriesItem>>
      blocked_merchant_countries:
        docs: >-
          Array of strings containing representing countries from which
          authorizations will be declined. Country codes should be ISO 3166
          alpha-2 country codes (e.g. `US`). Cannot be set with
          `allowed_merchant_countries`. Provide an empty value to unset this
          control.
        type: optional<list<string>>
      spending_limits:
        docs: >-
          Limit spending with amount-based rules that apply across this
          cardholder's cards.
        type: optional<list<IssuingCardholderSpendingLimit>>
      spending_limits_currency:
        docs: Currency of the amounts within `spending_limits`.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderAuthorizationControlsAllowedCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderAuthorizationControlsBlockedCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderCardIssuing:
    docs: ''
    properties:
      user_terms_acceptance:
        docs: >-
          Information about cardholder acceptance of Celtic [Authorized User
          Terms](https://stripe.com/docs/issuing/cards#accept-authorized-user-terms).
          Required for cards backed by a Celtic program.
        type: optional<IssuingCardholderUserTermsAcceptance>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderCompany:
    docs: ''
    properties:
      tax_id_provided:
        docs: Whether the company's business ID number was provided.
        type: boolean
    source:
      openapi: ../openapi.yaml
  IssuingCardholderCreated:
    docs: Occurs whenever a cardholder is created.
    properties:
      object:
        type: IssuingCardholder
    source:
      openapi: ../openapi.yaml
  IssuingCardholderIdDocument:
    docs: ''
    properties:
      back:
        docs: >-
          The back of a document returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `identity_document`.
        type: optional<IssuingCardholderIdDocumentBack>
      front:
        docs: >-
          The front of a document returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `identity_document`.
        type: optional<IssuingCardholderIdDocumentFront>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderIdDocumentBack:
    discriminated: false
    docs: >-
      The back of a document returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `identity_document`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingCardholderIdDocumentFront:
    discriminated: false
    docs: >-
      The front of a document returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `identity_document`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingCardholderIndividual:
    docs: ''
    properties:
      card_issuing:
        docs: Information related to the card_issuing program for this cardholder.
        type: optional<IssuingCardholderCardIssuing>
      dob:
        docs: The date of birth of this cardholder.
        type: optional<IssuingCardholderIndividualDob>
      first_name:
        docs: >-
          The first name of this cardholder. Required before activating Cards.
          This field cannot contain any numbers, special characters (except
          periods, commas, hyphens, spaces and apostrophes) or non-latin
          letters.
        type: optional<string>
        validation:
          maxLength: 5000
      last_name:
        docs: >-
          The last name of this cardholder. Required before activating Cards.
          This field cannot contain any numbers, special characters (except
          periods, commas, hyphens, spaces and apostrophes) or non-latin
          letters.
        type: optional<string>
        validation:
          maxLength: 5000
      verification:
        docs: Government-issued ID document for this cardholder.
        type: optional<IssuingCardholderVerification>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderIndividualDob:
    docs: ''
    properties:
      day:
        docs: The day of birth, between 1 and 31.
        type: optional<integer>
      month:
        docs: The month of birth, between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year of birth.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderPreferredLocalesItem:
    enum:
      - de
      - en
      - es
      - fr
      - it
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderRequirements:
    docs: ''
    properties:
      disabled_reason:
        docs: >-
          If `disabled_reason` is present, all cards will decline authorizations
          with `cardholder_verification_required` reason.
        type: optional<IssuingCardholderRequirementsDisabledReason>
      past_due:
        docs: >-
          Array of fields that need to be collected in order to verify and
          re-enable the cardholder.
        type: optional<list<IssuingCardholderRequirementsPastDueItem>>
    source:
      openapi: ../openapi.yaml
  IssuingCardholderRequirementsDisabledReason:
    docs: >-
      If `disabled_reason` is present, all cards will decline authorizations
      with `cardholder_verification_required` reason.
    enum:
      - listed
      - name: RejectedListed
        value: rejected.listed
      - name: RequirementsPastDue
        value: requirements.past_due
      - under_review
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderRequirementsPastDueItem:
    enum:
      - name: CompanyTaxId
        value: company.tax_id
      - name: IndividualCardIssuingUserTermsAcceptanceDate
        value: individual.card_issuing.user_terms_acceptance.date
      - name: IndividualCardIssuingUserTermsAcceptanceIp
        value: individual.card_issuing.user_terms_acceptance.ip
      - name: IndividualDobDay
        value: individual.dob.day
      - name: IndividualDobMonth
        value: individual.dob.month
      - name: IndividualDobYear
        value: individual.dob.year
      - name: IndividualFirstName
        value: individual.first_name
      - name: IndividualLastName
        value: individual.last_name
      - name: IndividualVerificationDocument
        value: individual.verification.document
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderSpendingLimit:
    docs: ''
    properties:
      amount:
        docs: >-
          Maximum amount allowed to spend per interval. This amount is in the
          card's currency and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          this limit applies to. Omitting this field will apply the limit to all
          categories.
        type: optional<list<IssuingCardholderSpendingLimitCategoriesItem>>
      interval:
        docs: Interval (or event) to which the amount applies.
        type: IssuingCardholderSpendingLimitInterval
    source:
      openapi: ../openapi.yaml
  IssuingCardholderSpendingLimitCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderSpendingLimitInterval:
    docs: Interval (or event) to which the amount applies.
    enum:
      - all_time
      - daily
      - monthly
      - per_authorization
      - weekly
      - yearly
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderStatus:
    docs: Specifies whether to permit authorizations on this cardholder's cards.
    enum:
      - active
      - blocked
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderType:
    docs: >-
      One of `individual` or `company`. See [Choose a cardholder
      type](https://stripe.com/docs/issuing/other/choose-cardholder) for more
      details.
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardholderUpdated:
    docs: Occurs whenever a cardholder is updated.
    properties:
      object:
        type: IssuingCardholder
    source:
      openapi: ../openapi.yaml
  IssuingCardholderUserTermsAcceptance:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the cardholder accepted the Authorized
          User Terms.
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the cardholder accepted the Authorized User
          Terms.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the cardholder accepted the
          Authorized User Terms.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingCardholderVerification:
    docs: ''
    properties:
      document:
        docs: An identifying document, either a passport or local ID card.
        type: optional<IssuingCardholderIdDocument>
    source:
      openapi: ../openapi.yaml
  IssuingCardPersonalizationDesign:
    discriminated: false
    docs: The personalization design object belonging to this card.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingPersonalizationDesign
  IssuingCardReplacedBy:
    discriminated: false
    docs: The latest card that replaces this card, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCard
  IssuingCardReplacementFor:
    discriminated: false
    docs: The card this card replaces, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCard
  IssuingCardReplacementReason:
    docs: The reason why the previous card needed to be replaced.
    enum:
      - damaged
      - expired
      - lost
      - stolen
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShipping:
    docs: ''
    properties:
      address:
        type: Address
      address_validation:
        docs: Address validation details for the shipment.
        type: optional<IssuingCardShippingAddressValidation>
      carrier:
        docs: The delivery company that shipped a card.
        type: optional<IssuingCardShippingCarrier>
      customs:
        docs: Additional information that may be required for clearing customs.
        type: optional<IssuingCardShippingCustoms>
      eta:
        docs: >-
          A unix timestamp representing a best estimate of when the card will be
          delivered.
        type: optional<integer>
      name:
        docs: Recipient name.
        type: string
        validation:
          maxLength: 5000
      phone_number:
        docs: >-
          The phone number of the receiver of the shipment. Our courier partners
          will use this number to contact you in the event of card delivery
          issues. For individual shipments to the EU/UK, if this field is empty,
          we will provide them with the phone number provided when the
          cardholder was initially created.
        type: optional<string>
        validation:
          maxLength: 5000
      require_signature:
        docs: >-
          Whether a signature is required for card delivery. This feature is
          only supported for US users. Standard shipping service does not
          support signature on delivery. The default value for standard shipping
          service is false and for express and priority services is true.
        type: optional<boolean>
      service:
        docs: Shipment service, such as `standard` or `express`.
        type: IssuingCardShippingService
      status:
        docs: The delivery status of the card.
        type: optional<IssuingCardShippingStatus>
      tracking_number:
        docs: A tracking number for a card shipment.
        type: optional<string>
        validation:
          maxLength: 5000
      tracking_url:
        docs: >-
          A link to the shipping carrier's site where you can view detailed
          information about a card shipment.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: Packaging options.
        type: IssuingCardShippingType
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingAddressValidation:
    docs: ''
    properties:
      mode:
        docs: The address validation capabilities to use.
        type: IssuingCardShippingAddressValidationMode
      normalized_address:
        docs: The normalized shipping address.
        type: optional<Address>
      result:
        docs: The validation result for the shipping address.
        type: optional<IssuingCardShippingAddressValidationResult>
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingAddressValidationMode:
    docs: The address validation capabilities to use.
    enum:
      - disabled
      - normalization_only
      - validation_and_normalization
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingAddressValidationResult:
    docs: The validation result for the shipping address.
    enum:
      - indeterminate
      - likely_deliverable
      - likely_undeliverable
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingCarrier:
    docs: The delivery company that shipped a card.
    enum:
      - dhl
      - fedex
      - royal_mail
      - usps
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingCustoms:
    docs: ''
    properties:
      eori_number:
        docs: >-
          A registration number used for customs in Europe. See
          [https://www.gov.uk/eori](https://www.gov.uk/eori) for the UK and
          [https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en](https://ec.europa.eu/taxation_customs/business/customs-procedures-import-and-export/customs-procedures/economic-operators-registration-and-identification-number-eori_en)
          for the EU.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingService:
    docs: Shipment service, such as `standard` or `express`.
    enum:
      - express
      - priority
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingStatus:
    docs: The delivery status of the card.
    enum:
      - canceled
      - delivered
      - failure
      - pending
      - returned
      - shipped
      - submitted
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardShippingType:
    docs: Packaging options.
    enum:
      - bulk
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardSpendingLimit:
    docs: ''
    properties:
      amount:
        docs: >-
          Maximum amount allowed to spend per interval. This amount is in the
          card's currency and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      categories:
        docs: >-
          Array of strings containing
          [categories](https://stripe.com/docs/api#issuing_authorization_object-merchant_data-category)
          this limit applies to. Omitting this field will apply the limit to all
          categories.
        type: optional<list<IssuingCardSpendingLimitCategoriesItem>>
      interval:
        docs: Interval (or event) to which the amount applies.
        type: IssuingCardSpendingLimitInterval
    source:
      openapi: ../openapi.yaml
  IssuingCardSpendingLimitCategoriesItem:
    enum:
      - ac_refrigeration_repair
      - accounting_bookkeeping_services
      - advertising_services
      - agricultural_cooperative
      - airlines_air_carriers
      - airports_flying_fields
      - ambulance_services
      - amusement_parks_carnivals
      - antique_reproductions
      - antique_shops
      - aquariums
      - architectural_surveying_services
      - art_dealers_and_galleries
      - artists_supply_and_craft_shops
      - auto_and_home_supply_stores
      - auto_body_repair_shops
      - auto_paint_shops
      - auto_service_shops
      - automated_cash_disburse
      - automated_fuel_dispensers
      - automobile_associations
      - automotive_parts_and_accessories_stores
      - automotive_tire_stores
      - bail_and_bond_payments
      - bakeries
      - bands_orchestras
      - barber_and_beauty_shops
      - betting_casino_gambling
      - bicycle_shops
      - billiard_pool_establishments
      - boat_dealers
      - boat_rentals_and_leases
      - book_stores
      - books_periodicals_and_newspapers
      - bowling_alleys
      - bus_lines
      - business_secretarial_schools
      - buying_shopping_services
      - cable_satellite_and_other_pay_television_and_radio
      - camera_and_photographic_supply_stores
      - candy_nut_and_confectionery_stores
      - car_and_truck_dealers_new_used
      - car_and_truck_dealers_used_only
      - car_rental_agencies
      - car_washes
      - carpentry_services
      - carpet_upholstery_cleaning
      - caterers
      - charitable_and_social_service_organizations_fundraising
      - chemicals_and_allied_products
      - child_care_services
      - childrens_and_infants_wear_stores
      - chiropodists_podiatrists
      - chiropractors
      - cigar_stores_and_stands
      - civic_social_fraternal_associations
      - cleaning_and_maintenance
      - clothing_rental
      - colleges_universities
      - commercial_equipment
      - commercial_footwear
      - commercial_photography_art_and_graphics
      - commuter_transport_and_ferries
      - computer_network_services
      - computer_programming
      - computer_repair
      - computer_software_stores
      - computers_peripherals_and_software
      - concrete_work_services
      - construction_materials
      - consulting_public_relations
      - correspondence_schools
      - cosmetic_stores
      - counseling_services
      - country_clubs
      - courier_services
      - court_costs
      - credit_reporting_agencies
      - cruise_lines
      - dairy_products_stores
      - dance_hall_studios_schools
      - dating_escort_services
      - dentists_orthodontists
      - department_stores
      - detective_agencies
      - digital_goods_applications
      - digital_goods_games
      - digital_goods_large_volume
      - digital_goods_media
      - direct_marketing_catalog_merchant
      - direct_marketing_combination_catalog_and_retail_merchant
      - direct_marketing_inbound_telemarketing
      - direct_marketing_insurance_services
      - direct_marketing_other
      - direct_marketing_outbound_telemarketing
      - direct_marketing_subscription
      - direct_marketing_travel
      - discount_stores
      - doctors
      - door_to_door_sales
      - drapery_window_covering_and_upholstery_stores
      - drinking_places
      - drug_stores_and_pharmacies
      - drugs_drug_proprietaries_and_druggist_sundries
      - dry_cleaners
      - durable_goods
      - duty_free_stores
      - eating_places_restaurants
      - educational_services
      - electric_razor_stores
      - electric_vehicle_charging
      - electrical_parts_and_equipment
      - electrical_services
      - electronics_repair_shops
      - electronics_stores
      - elementary_secondary_schools
      - emergency_services_gcas_visa_use_only
      - employment_temp_agencies
      - equipment_rental
      - exterminating_services
      - family_clothing_stores
      - fast_food_restaurants
      - financial_institutions
      - fines_government_administrative_entities
      - fireplace_fireplace_screens_and_accessories_stores
      - floor_covering_stores
      - florists
      - florists_supplies_nursery_stock_and_flowers
      - freezer_and_locker_meat_provisioners
      - fuel_dealers_non_automotive
      - funeral_services_crematories
      - furniture_home_furnishings_and_equipment_stores_except_appliances
      - furniture_repair_refinishing
      - furriers_and_fur_shops
      - general_services
      - gift_card_novelty_and_souvenir_shops
      - glass_paint_and_wallpaper_stores
      - glassware_crystal_stores
      - golf_courses_public
      - government_licensed_horse_dog_racing_us_region_only
      - government_licensed_online_casions_online_gambling_us_region_only
      - government_owned_lotteries_non_us_region
      - government_owned_lotteries_us_region_only
      - government_services
      - grocery_stores_supermarkets
      - hardware_equipment_and_supplies
      - hardware_stores
      - health_and_beauty_spas
      - hearing_aids_sales_and_supplies
      - heating_plumbing_a_c
      - hobby_toy_and_game_shops
      - home_supply_warehouse_stores
      - hospitals
      - hotels_motels_and_resorts
      - household_appliance_stores
      - industrial_supplies
      - information_retrieval_services
      - insurance_default
      - insurance_underwriting_premiums
      - intra_company_purchases
      - jewelry_stores_watches_clocks_and_silverware_stores
      - landscaping_services
      - laundries
      - laundry_cleaning_services
      - legal_services_attorneys
      - luggage_and_leather_goods_stores
      - lumber_building_materials_stores
      - manual_cash_disburse
      - marinas_service_and_supplies
      - marketplaces
      - masonry_stonework_and_plaster
      - massage_parlors
      - medical_and_dental_labs
      - medical_dental_ophthalmic_and_hospital_equipment_and_supplies
      - medical_services
      - membership_organizations
      - mens_and_boys_clothing_and_accessories_stores
      - mens_womens_clothing_stores
      - metal_service_centers
      - miscellaneous
      - miscellaneous_apparel_and_accessory_shops
      - miscellaneous_auto_dealers
      - miscellaneous_business_services
      - miscellaneous_food_stores
      - miscellaneous_general_merchandise
      - miscellaneous_general_services
      - miscellaneous_home_furnishing_specialty_stores
      - miscellaneous_publishing_and_printing
      - miscellaneous_recreation_services
      - miscellaneous_repair_shops
      - miscellaneous_specialty_retail
      - mobile_home_dealers
      - motion_picture_theaters
      - motor_freight_carriers_and_trucking
      - motor_homes_dealers
      - motor_vehicle_supplies_and_new_parts
      - motorcycle_shops_and_dealers
      - motorcycle_shops_dealers
      - music_stores_musical_instruments_pianos_and_sheet_music
      - news_dealers_and_newsstands
      - non_fi_money_orders
      - non_fi_stored_value_card_purchase_load
      - nondurable_goods
      - nurseries_lawn_and_garden_supply_stores
      - nursing_personal_care
      - office_and_commercial_furniture
      - opticians_eyeglasses
      - optometrists_ophthalmologist
      - orthopedic_goods_prosthetic_devices
      - osteopaths
      - package_stores_beer_wine_and_liquor
      - paints_varnishes_and_supplies
      - parking_lots_garages
      - passenger_railways
      - pawn_shops
      - pet_shops_pet_food_and_supplies
      - petroleum_and_petroleum_products
      - photo_developing
      - photographic_photocopy_microfilm_equipment_and_supplies
      - photographic_studios
      - picture_video_production
      - piece_goods_notions_and_other_dry_goods
      - plumbing_heating_equipment_and_supplies
      - political_organizations
      - postal_services_government_only
      - precious_stones_and_metals_watches_and_jewelry
      - professional_services
      - public_warehousing_and_storage
      - quick_copy_repro_and_blueprint
      - railroads
      - real_estate_agents_and_managers_rentals
      - record_stores
      - recreational_vehicle_rentals
      - religious_goods_stores
      - religious_organizations
      - roofing_siding_sheet_metal
      - secretarial_support_services
      - security_brokers_dealers
      - service_stations
      - sewing_needlework_fabric_and_piece_goods_stores
      - shoe_repair_hat_cleaning
      - shoe_stores
      - small_appliance_repair
      - snowmobile_dealers
      - special_trade_services
      - specialty_cleaning
      - sporting_goods_stores
      - sporting_recreation_camps
      - sports_and_riding_apparel_stores
      - sports_clubs_fields
      - stamp_and_coin_stores
      - stationary_office_supplies_printing_and_writing_paper
      - stationery_stores_office_and_school_supply_stores
      - swimming_pools_sales
      - t_ui_travel_germany
      - tailors_alterations
      - tax_payments_government_agencies
      - tax_preparation_services
      - taxicabs_limousines
      - telecommunication_equipment_and_telephone_sales
      - telecommunication_services
      - telegraph_services
      - tent_and_awning_shops
      - testing_laboratories
      - theatrical_ticket_agencies
      - timeshares
      - tire_retreading_and_repair
      - tolls_bridge_fees
      - tourist_attractions_and_exhibits
      - towing_services
      - trailer_parks_campgrounds
      - transportation_services
      - travel_agencies_tour_operators
      - truck_stop_iteration
      - truck_utility_trailer_rentals
      - typesetting_plate_making_and_related_services
      - typewriter_stores
      - u_s_federal_government_agencies_or_departments
      - uniforms_commercial_clothing
      - used_merchandise_and_secondhand_stores
      - utilities
      - variety_stores
      - veterinary_services
      - video_amusement_game_supplies
      - video_game_arcades
      - video_tape_rental_stores
      - vocational_trade_schools
      - watch_jewelry_repair
      - welding_repair
      - wholesale_clubs
      - wig_and_toupee_stores
      - wires_money_orders
      - womens_accessory_and_specialty_shops
      - womens_ready_to_wear_stores
      - wrecking_and_salvage_yards
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardSpendingLimitInterval:
    docs: Interval (or event) to which the amount applies.
    enum:
      - all_time
      - daily
      - monthly
      - per_authorization
      - weekly
      - yearly
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardStatus:
    docs: >-
      Whether authorizations can be approved on this card. May be blocked from
      activating cards depending on past-due Cardholder requirements. Defaults
      to `inactive`.
    enum:
      - active
      - canceled
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardType:
    docs: The type of the card.
    enum:
      - physical
      - virtual
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingCardUpdated:
    docs: Occurs whenever a card is updated.
    properties:
      object:
        type: IssuingCard
    source:
      openapi: ../openapi.yaml
  IssuingCardWallets:
    docs: ''
    properties:
      apple_pay:
        type: IssuingCardApplePay
      google_pay:
        type: IssuingCardGooglePay
      primary_account_identifier:
        docs: Unique identifier for a card used with digital wallets
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingDispute:
    docs: >-
      As a [card issuer](https://stripe.com/docs/issuing), you can dispute
      transactions that the cardholder does not recognize, suspects to be
      fraudulent, or has other issues with.


      Related guide: [Issuing
      disputes](https://stripe.com/docs/issuing/purchases/disputes)
    properties:
      amount:
        docs: >-
          Disputed amount in the card's currency and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). Usually the
          amount of the `transaction`, but can differ (usually because of
          currency fluctuation).
        type: integer
      balance_transactions:
        docs: List of balance transactions associated with the dispute.
        type: optional<list<BalanceTransaction>>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: The currency the `transaction` was made in.
        type: string
      evidence:
        type: IssuingDisputeEvidence
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      loss_reason:
        docs: >-
          The enum that describes the dispute loss outcome. If the dispute is
          not lost, this field will be absent. New enum values may be added in
          the future, so be sure to handle unknown values.
        type: optional<IssuingDisputeLossReason>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.dispute">
      status:
        docs: Current status of the dispute.
        type: IssuingDisputeStatus
      transaction:
        docs: The transaction being disputed.
        type: IssuingDisputeTransaction
      treasury:
        docs: >-
          [Treasury](https://stripe.com/docs/api/treasury) details related to
          this dispute if it was created on a
          [FinancialAccount](/docs/api/treasury/financial_accounts
        type: optional<IssuingDisputeTreasury>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeCanceledEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: optional<IssuingDisputeCanceledEvidenceAdditionalDocumentation>
      canceled_at:
        docs: Date when order was canceled.
        type: optional<integer>
      cancellation_policy_provided:
        docs: Whether the cardholder was provided with a cancellation policy.
        type: optional<boolean>
      cancellation_reason:
        docs: Reason for canceling the order.
        type: optional<string>
        validation:
          maxLength: 5000
      expected_at:
        docs: Date when the cardholder expected to receive the product.
        type: optional<integer>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      product_description:
        docs: Description of the merchandise or service that was purchased.
        type: optional<string>
        validation:
          maxLength: 5000
      product_type:
        docs: Whether the product was a merchandise or service.
        type: optional<IssuingDisputeCanceledEvidenceProductType>
      return_status:
        docs: Result of cardholder's attempt to return the product.
        type: optional<IssuingDisputeCanceledEvidenceReturnStatus>
      returned_at:
        docs: Date when the product was returned or attempted to be returned.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeCanceledEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeCanceledEvidenceProductType:
    docs: Whether the product was a merchandise or service.
    enum:
      - merchandise
      - service
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeCanceledEvidenceReturnStatus:
    docs: Result of cardholder's attempt to return the product.
    enum:
      - merchant_rejected
      - successful
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeClosed:
    docs: Occurs whenever a dispute is won, lost or expired.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingDisputeCreated:
    docs: Occurs whenever a dispute is created.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingDisputeDuplicateEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: optional<IssuingDisputeDuplicateEvidenceAdditionalDocumentation>
      card_statement:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Copy of the card statement showing that the product had already been
          paid for.
        type: optional<IssuingDisputeDuplicateEvidenceCardStatement>
      cash_receipt:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Copy of the receipt showing that the product had been paid for in
          cash.
        type: optional<IssuingDisputeDuplicateEvidenceCashReceipt>
      check_image:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Image of the front and back of the check that was used to pay for the
          product.
        type: optional<IssuingDisputeDuplicateEvidenceCheckImage>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      original_transaction:
        docs: >-
          Transaction (e.g., ipi_...) that the disputed transaction is a
          duplicate of. Of the two or more transactions that are copies of each
          other, this is original undisputed one.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingDisputeDuplicateEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeDuplicateEvidenceCardStatement:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy
      of the card statement showing that the product had already been paid for.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeDuplicateEvidenceCashReceipt:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Copy
      of the receipt showing that the product had been paid for in cash.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeDuplicateEvidenceCheckImage:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload)) Image
      of the front and back of the check that was used to pay for the product.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeEvidence:
    docs: ''
    properties:
      canceled:
        type: optional<IssuingDisputeCanceledEvidence>
      duplicate:
        type: optional<IssuingDisputeDuplicateEvidence>
      fraudulent:
        type: optional<IssuingDisputeFraudulentEvidence>
      merchandise_not_as_described:
        type: optional<IssuingDisputeMerchandiseNotAsDescribedEvidence>
      no_valid_authorization:
        type: optional<IssuingDisputeNoValidAuthorizationEvidence>
      not_received:
        type: optional<IssuingDisputeNotReceivedEvidence>
      other:
        type: optional<IssuingDisputeOtherEvidence>
      reason:
        docs: >-
          The reason for filing the dispute. Its value will match the field
          containing the evidence.
        type: IssuingDisputeEvidenceReason
      service_not_as_described:
        type: optional<IssuingDisputeServiceNotAsDescribedEvidence>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeEvidenceReason:
    docs: >-
      The reason for filing the dispute. Its value will match the field
      containing the evidence.
    enum:
      - canceled
      - duplicate
      - fraudulent
      - merchandise_not_as_described
      - no_valid_authorization
      - not_received
      - other
      - service_not_as_described
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeFraudulentEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: optional<IssuingDisputeFraudulentEvidenceAdditionalDocumentation>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingDisputeFraudulentEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeFundsReinstated:
    docs: >-
      Occurs whenever funds are reinstated to your account for an Issuing
      dispute.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingDisputeFundsRescinded:
    docs: >-
      Occurs whenever funds are deducted from your account for an Issuing
      dispute.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingDisputeLossReason:
    docs: >-
      The enum that describes the dispute loss outcome. If the dispute is not
      lost, this field will be absent. New enum values may be added in the
      future, so be sure to handle unknown values.
    enum:
      - cardholder_authentication_issuer_liability
      - eci5_token_transaction_with_tavv
      - excess_disputes_in_timeframe
      - has_not_met_the_minimum_dispute_amount_requirements
      - invalid_duplicate_dispute
      - invalid_incorrect_amount_dispute
      - invalid_no_authorization
      - invalid_use_of_disputes
      - merchandise_delivered_or_shipped
      - merchandise_or_service_as_described
      - not_cancelled
      - other
      - refund_issued
      - submitted_beyond_allowable_time_limit
      - transaction_3ds_required
      - transaction_approved_after_prior_fraud_dispute
      - transaction_authorized
      - transaction_electronically_read
      - transaction_qualifies_for_visa_easy_payment_service
      - transaction_unattended
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeMerchandiseNotAsDescribedEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: >-
          optional<IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      received_at:
        docs: Date when the product was received.
        type: optional<integer>
      return_description:
        docs: Description of the cardholder's attempt to return the product.
        type: optional<string>
        validation:
          maxLength: 5000
      return_status:
        docs: Result of cardholder's attempt to return the product.
        type: optional<IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus>
      returned_at:
        docs: Date when the product was returned or attempted to be returned.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeMerchandiseNotAsDescribedEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeMerchandiseNotAsDescribedEvidenceReturnStatus:
    docs: Result of cardholder's attempt to return the product.
    enum:
      - merchant_rejected
      - successful
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeNotReceivedEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: optional<IssuingDisputeNotReceivedEvidenceAdditionalDocumentation>
      expected_at:
        docs: Date when the cardholder expected to receive the product.
        type: optional<integer>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      product_description:
        docs: Description of the merchandise or service that was purchased.
        type: optional<string>
        validation:
          maxLength: 5000
      product_type:
        docs: Whether the product was a merchandise or service.
        type: optional<IssuingDisputeNotReceivedEvidenceProductType>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeNotReceivedEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeNotReceivedEvidenceProductType:
    docs: Whether the product was a merchandise or service.
    enum:
      - merchandise
      - service
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeNoValidAuthorizationEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: >-
          optional<IssuingDisputeNoValidAuthorizationEvidenceAdditionalDocumentation>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingDisputeNoValidAuthorizationEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeOtherEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: optional<IssuingDisputeOtherEvidenceAdditionalDocumentation>
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      product_description:
        docs: Description of the merchandise or service that was purchased.
        type: optional<string>
        validation:
          maxLength: 5000
      product_type:
        docs: Whether the product was a merchandise or service.
        type: optional<IssuingDisputeOtherEvidenceProductType>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeOtherEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeOtherEvidenceProductType:
    docs: Whether the product was a merchandise or service.
    enum:
      - merchandise
      - service
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeServiceNotAsDescribedEvidence:
    docs: ''
    properties:
      additional_documentation:
        docs: >-
          (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
          Additional documentation supporting the dispute.
        type: >-
          optional<IssuingDisputeServiceNotAsDescribedEvidenceAdditionalDocumentation>
      canceled_at:
        docs: Date when order was canceled.
        type: optional<integer>
      cancellation_reason:
        docs: Reason for canceling the order.
        type: optional<string>
        validation:
          maxLength: 5000
      explanation:
        docs: Explanation of why the cardholder is disputing this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      received_at:
        docs: Date when the product was received.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingDisputeServiceNotAsDescribedEvidenceAdditionalDocumentation:
    discriminated: false
    docs: >-
      (ID of a [file upload](https://stripe.com/docs/guides/file-upload))
      Additional documentation supporting the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingDisputeStatus:
    docs: Current status of the dispute.
    enum:
      - expired
      - lost
      - submitted
      - unsubmitted
      - won
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingDisputeSubmitted:
    docs: Occurs whenever a dispute is submitted.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingDisputeTransaction:
    discriminated: false
    docs: The transaction being disputed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingTransaction
  IssuingDisputeTreasury:
    docs: ''
    properties:
      debit_reversal:
        docs: >-
          The Treasury
          [DebitReversal](https://stripe.com/docs/api/treasury/debit_reversals)
          representing this Issuing dispute
        type: optional<string>
        validation:
          maxLength: 5000
      received_debit:
        docs: >-
          The Treasury
          [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits)
          that is being disputed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingDisputeUpdated:
    docs: Occurs whenever a dispute is updated.
    properties:
      object:
        type: IssuingDispute
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenAddress:
    docs: ''
    properties:
      line1:
        docs: The street address of the cardholder tokenizing the card.
        type: string
        validation:
          maxLength: 5000
      postal_code:
        docs: The postal code of the cardholder tokenizing the card.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenDevice:
    docs: ''
    properties:
      device_fingerprint:
        docs: An obfuscated ID derived from the device ID.
        type: optional<string>
        validation:
          maxLength: 5000
      ip_address:
        docs: The IP address of the device at provisioning time.
        type: optional<string>
        validation:
          maxLength: 5000
      location:
        docs: >-
          The geographic latitude/longitude coordinates of the device at
          provisioning time. The format is [+-]decimal/[+-]decimal.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: The name of the device used for tokenization.
        type: optional<string>
        validation:
          maxLength: 5000
      phone_number:
        docs: The phone number of the device used for tokenization.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The type of device used for tokenization.
        type: optional<IssuingNetworkTokenDeviceType>
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenDeviceType:
    docs: The type of device used for tokenization.
    enum:
      - other
      - phone
      - watch
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenMastercard:
    docs: ''
    properties:
      card_reference_id:
        docs: >-
          A unique reference ID from MasterCard to represent the card account
          number.
        type: optional<string>
        validation:
          maxLength: 5000
      token_reference_id:
        docs: The network-unique identifier for the token.
        type: string
        validation:
          maxLength: 5000
      token_requestor_id:
        docs: The ID of the entity requesting tokenization, specific to MasterCard.
        type: string
        validation:
          maxLength: 5000
      token_requestor_name:
        docs: >-
          The name of the entity requesting tokenization, if known. This is
          directly provided from MasterCard.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenNetworkData:
    docs: ''
    properties:
      device:
        type: optional<IssuingNetworkTokenDevice>
      mastercard:
        type: optional<IssuingNetworkTokenMastercard>
      type:
        docs: >-
          The network that the token is associated with. An additional hash is
          included with a name matching this value, containing tokenization data
          specific to the card network.
        type: IssuingNetworkTokenNetworkDataType
      visa:
        type: optional<IssuingNetworkTokenVisa>
      wallet_provider:
        type: optional<IssuingNetworkTokenWalletProvider>
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenNetworkDataType:
    docs: >-
      The network that the token is associated with. An additional hash is
      included with a name matching this value, containing tokenization data
      specific to the card network.
    enum:
      - mastercard
      - visa
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenVisa:
    docs: ''
    properties:
      card_reference_id:
        docs: A unique reference ID from Visa to represent the card account number.
        type: string
        validation:
          maxLength: 5000
      token_reference_id:
        docs: The network-unique identifier for the token.
        type: string
        validation:
          maxLength: 5000
      token_requestor_id:
        docs: The ID of the entity requesting tokenization, specific to Visa.
        type: string
        validation:
          maxLength: 5000
      token_risk_score:
        docs: >-
          Degree of risk associated with the token between `01` and `99`, with
          higher number indicating higher risk. A `00` value indicates the token
          was not scored by Visa.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenWalletProvider:
    docs: ''
    properties:
      account_id:
        docs: >-
          The wallet provider-given account ID of the digital wallet the token
          belongs to.
        type: optional<string>
        validation:
          maxLength: 5000
      account_trust_score:
        docs: >-
          An evaluation on the trustworthiness of the wallet account between 1
          and 5. A higher score indicates more trustworthy.
        type: optional<integer>
      card_number_source:
        docs: The method used for tokenizing a card.
        type: optional<IssuingNetworkTokenWalletProviderCardNumberSource>
      cardholder_address:
        type: optional<IssuingNetworkTokenAddress>
      cardholder_name:
        docs: The name of the cardholder tokenizing the card.
        type: optional<string>
        validation:
          maxLength: 5000
      device_trust_score:
        docs: >-
          An evaluation on the trustworthiness of the device. A higher score
          indicates more trustworthy.
        type: optional<integer>
      hashed_account_email_address:
        docs: >-
          The hashed email address of the cardholder's account with the wallet
          provider.
        type: optional<string>
        validation:
          maxLength: 5000
      reason_codes:
        docs: The reasons for suggested tokenization given by the card network.
        type: optional<list<IssuingNetworkTokenWalletProviderReasonCodesItem>>
      suggested_decision:
        docs: The recommendation on responding to the tokenization request.
        type: optional<IssuingNetworkTokenWalletProviderSuggestedDecision>
      suggested_decision_version:
        docs: >-
          The version of the standard for mapping reason codes followed by the
          wallet provider.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenWalletProviderCardNumberSource:
    docs: The method used for tokenizing a card.
    enum:
      - app
      - manual
      - on_file
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenWalletProviderReasonCodesItem:
    enum:
      - account_card_too_new
      - account_recently_changed
      - account_too_new
      - account_too_new_since_launch
      - additional_device
      - data_expired
      - defer_id_v_decision
      - device_recently_lost
      - good_activity_history
      - has_suspended_tokens
      - high_risk
      - inactive_account
      - long_account_tenure
      - low_account_score
      - low_device_score
      - low_phone_number_score
      - network_service_error
      - outside_home_territory
      - provisioning_cardholder_mismatch
      - provisioning_device_and_cardholder_mismatch
      - provisioning_device_mismatch
      - same_device_no_prior_authentication
      - same_device_successful_prior_authentication
      - software_update
      - suspicious_activity
      - too_many_different_cardholders
      - too_many_recent_attempts
      - too_many_recent_tokens
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingNetworkTokenWalletProviderSuggestedDecision:
    docs: The recommendation on responding to the tokenization request.
    enum:
      - approve
      - decline
      - require_auth
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesign:
    docs: >-
      A Personalization Design is a logical grouping of a Physical Bundle, card
      logo, and carrier text that represents a product line.
    properties:
      card_logo:
        docs: >-
          The file for the card logo to use with physical bundles that support
          card logos. Must have a `purpose` value of `issuing_logo`.
        type: optional<IssuingPersonalizationDesignCardLogo>
      carrier_text:
        docs: >-
          Hash containing carrier text, for use with physical bundles that
          support carrier text.
        type: optional<IssuingPersonalizationDesignCarrierText>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      lookup_key:
        docs: >-
          A lookup key used to retrieve personalization designs dynamically from
          a static string. This may be up to 200 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      name:
        docs: Friendly display name.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.personalization_design">
      physical_bundle:
        docs: The physical bundle object belonging to this personalization design.
        type: IssuingPersonalizationDesignPhysicalBundle
      preferences:
        type: IssuingPersonalizationDesignPreferences
      rejection_reasons:
        type: IssuingPersonalizationDesignRejectionReasons
      status:
        docs: Whether this personalization design can be used to create cards.
        type: IssuingPersonalizationDesignStatus
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignActivated:
    docs: >-
      Occurs whenever a personalization design is activated following the
      activation of the physical bundle that belongs to it.
    properties:
      object:
        type: IssuingPersonalizationDesign
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignCardLogo:
    discriminated: false
    docs: >-
      The file for the card logo to use with physical bundles that support card
      logos. Must have a `purpose` value of `issuing_logo`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  IssuingPersonalizationDesignCarrierText:
    docs: ''
    properties:
      footer_body:
        docs: The footer body text of the carrier letter.
        type: optional<string>
        validation:
          maxLength: 5000
      footer_title:
        docs: The footer title text of the carrier letter.
        type: optional<string>
        validation:
          maxLength: 5000
      header_body:
        docs: The header body text of the carrier letter.
        type: optional<string>
        validation:
          maxLength: 5000
      header_title:
        docs: The header title text of the carrier letter.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignDeactivated:
    docs: >-
      Occurs whenever a personalization design is deactivated following the
      deactivation of the physical bundle that belongs to it.
    properties:
      object:
        type: IssuingPersonalizationDesign
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignPhysicalBundle:
    discriminated: false
    docs: The physical bundle object belonging to this personalization design.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingPhysicalBundle
  IssuingPersonalizationDesignPreferences:
    docs: ''
    properties:
      is_default:
        docs: >-
          Whether we use this personalization design to create cards when one
          isn't specified. A connected account uses the Connect platform's
          default design if no personalization design is set as the default
          design.
        type: boolean
      is_platform_default:
        docs: >-
          Whether this personalization design is used to create cards when one
          is not specified and a default for this connected account does not
          exist.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignRejected:
    docs: Occurs whenever a personalization design is rejected by design review.
    properties:
      object:
        type: IssuingPersonalizationDesign
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignRejectionReasons:
    docs: ''
    properties:
      card_logo:
        docs: The reason(s) the card logo was rejected.
        type: >-
          optional<list<IssuingPersonalizationDesignRejectionReasonsCardLogoItem>>
      carrier_text:
        docs: The reason(s) the carrier text was rejected.
        type: >-
          optional<list<IssuingPersonalizationDesignRejectionReasonsCarrierTextItem>>
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignRejectionReasonsCardLogoItem:
    enum:
      - geographic_location
      - inappropriate
      - network_name
      - non_binary_image
      - non_fiat_currency
      - other
      - other_entity
      - promotional_material
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignRejectionReasonsCarrierTextItem:
    enum:
      - geographic_location
      - inappropriate
      - network_name
      - non_fiat_currency
      - other
      - other_entity
      - promotional_material
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignStatus:
    docs: Whether this personalization design can be used to create cards.
    enum:
      - active
      - inactive
      - rejected
      - review
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPersonalizationDesignUpdated:
    docs: Occurs whenever a personalization design is updated.
    properties:
      object:
        type: IssuingPersonalizationDesign
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundle:
    docs: >-
      A Physical Bundle represents the bundle of physical items - card stock,
      carrier letter, and envelope - that is shipped to a cardholder when you
      create a physical card.
    properties:
      features:
        type: IssuingPhysicalBundleFeatures
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      name:
        docs: Friendly display name.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.physical_bundle">
      status:
        docs: Whether this physical bundle can be used to create cards.
        type: IssuingPhysicalBundleStatus
      type:
        docs: >-
          Whether this physical bundle is a standard Stripe offering or
          custom-made for you.
        type: IssuingPhysicalBundleType
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleFeatures:
    docs: ''
    properties:
      card_logo:
        docs: >-
          The policy for how to use card logo images in a card design with this
          physical bundle.
        type: IssuingPhysicalBundleFeaturesCardLogo
      carrier_text:
        docs: >-
          The policy for how to use carrier letter text in a card design with
          this physical bundle.
        type: IssuingPhysicalBundleFeaturesCarrierText
      second_line:
        docs: >-
          The policy for how to use a second line on a card with this physical
          bundle.
        type: IssuingPhysicalBundleFeaturesSecondLine
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleFeaturesCardLogo:
    docs: >-
      The policy for how to use card logo images in a card design with this
      physical bundle.
    enum:
      - optional
      - required
      - unsupported
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleFeaturesCarrierText:
    docs: >-
      The policy for how to use carrier letter text in a card design with this
      physical bundle.
    enum:
      - optional
      - required
      - unsupported
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleFeaturesSecondLine:
    docs: >-
      The policy for how to use a second line on a card with this physical
      bundle.
    enum:
      - optional
      - required
      - unsupported
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleStatus:
    docs: Whether this physical bundle can be used to create cards.
    enum:
      - active
      - inactive
      - review
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingPhysicalBundleType:
    docs: >-
      Whether this physical bundle is a standard Stripe offering or custom-made
      for you.
    enum:
      - custom
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingToken:
    docs: >-
      An issuing token object is created when an issued card is added to a
      digital wallet. As a [card issuer](https://stripe.com/docs/issuing), you
      can [view and manage these
      tokens](https://stripe.com/docs/issuing/controls/token-management) through
      Stripe.
    properties:
      card:
        docs: Card associated with this token.
        type: IssuingTokenCard
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      device_fingerprint:
        docs: >-
          The hashed ID derived from the device ID from the card network
          associated with the token.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the token.
        type: optional<string>
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      network:
        docs: The token service provider / card network associated with the token.
        type: IssuingTokenNetwork
      network_data:
        type: optional<IssuingNetworkTokenNetworkData>
      network_updated_at:
        docs: >-
          Time at which the token was last updated by the card network. Measured
          in seconds since the Unix epoch.
        type: integer
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.token">
      status:
        docs: The usage state of the token.
        type: IssuingTokenStatus
      wallet_provider:
        docs: The digital wallet for this token, if one was used.
        type: optional<IssuingTokenWalletProvider>
    source:
      openapi: ../openapi.yaml
  IssuingTokenCard:
    discriminated: false
    docs: Card associated with this token.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCard
  IssuingTokenCreated:
    docs: Occurs whenever an issuing digital wallet token is created.
    properties:
      object:
        type: IssuingToken
    source:
      openapi: ../openapi.yaml
  IssuingTokenNetwork:
    docs: The token service provider / card network associated with the token.
    enum:
      - mastercard
      - visa
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingTokenStatus:
    docs: The usage state of the token.
    enum:
      - active
      - deleted
      - requested
      - suspended
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingTokenUpdated:
    docs: Occurs whenever an issuing digital wallet token is updated.
    properties:
      object:
        type: IssuingToken
    source:
      openapi: ../openapi.yaml
  IssuingTokenWalletProvider:
    docs: The digital wallet for this token, if one was used.
    enum:
      - apple_pay
      - google_pay
      - samsung_pay
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingTransaction:
    docs: >-
      Any use of an [issued card](https://stripe.com/docs/issuing) that results
      in funds entering or leaving

      your Stripe account, such as a completed purchase or refund, is
      represented by an Issuing

      `Transaction` object.


      Related guide: [Issued card
      transactions](https://stripe.com/docs/issuing/purchases/transactions)
    properties:
      amount:
        docs: >-
          The transaction amount, which will be reflected in your balance. This
          amount is in your currency and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      amount_details:
        docs: >-
          Detailed breakdown of amount components. These amounts are denominated
          in `currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<IssuingTransactionAmountDetails>
      authorization:
        docs: The `Authorization` object that led to this transaction.
        type: optional<IssuingTransactionAuthorization>
      balance_transaction:
        docs: >-
          ID of the [balance
          transaction](https://stripe.com/docs/api/balance_transactions)
          associated with this transaction.
        type: optional<IssuingTransactionBalanceTransaction>
      card:
        docs: The card used to make this transaction.
        type: IssuingTransactionCard
      cardholder:
        docs: The cardholder to whom this transaction belongs.
        type: optional<IssuingTransactionCardholder>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      dispute:
        docs: If you've disputed the transaction, the ID of the dispute.
        type: optional<IssuingTransactionDispute>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      merchant_amount:
        docs: >-
          The amount that the merchant will receive, denominated in
          `merchant_currency` and in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). It will be
          different from `amount` if the merchant is taking payment in a
          different currency.
        type: integer
      merchant_currency:
        docs: The currency with which the merchant is taking payment.
        type: string
      merchant_data:
        type: IssuingAuthorizationMerchantData
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      network_data:
        docs: >-
          Details about the transaction, such as processing dates, set by the
          card network.
        type: optional<IssuingTransactionNetworkData>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"issuing.transaction">
      purchase_details:
        docs: >-
          Additional purchase information that is optionally provided by the
          merchant.
        type: optional<IssuingTransactionPurchaseDetails>
      token:
        docs: >-
          [Token](https://stripe.com/docs/api/issuing/tokens/object) object used
          for this transaction. If a network token was not used for this
          transaction, this field will be null.
        type: optional<IssuingTransactionToken>
      treasury:
        docs: >-
          [Treasury](https://stripe.com/docs/api/treasury) details related to
          this transaction if it was created on a
          [FinancialAccount](/docs/api/treasury/financial_accounts
        type: optional<IssuingTransactionTreasury>
      type:
        docs: The nature of the transaction.
        type: IssuingTransactionType
      wallet:
        docs: >-
          The digital wallet used for this transaction. One of `apple_pay`,
          `google_pay`, or `samsung_pay`.
        type: optional<IssuingTransactionWallet>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionAmountDetails:
    docs: ''
    properties:
      atm_fee:
        docs: The fee charged by the ATM for the cash withdrawal.
        type: optional<integer>
      cashback_amount:
        docs: The amount of cash requested by the cardholder.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionAuthorization:
    discriminated: false
    docs: The `Authorization` object that led to this transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingAuthorization
  IssuingTransactionBalanceTransaction:
    discriminated: false
    docs: >-
      ID of the [balance
      transaction](https://stripe.com/docs/api/balance_transactions) associated
      with this transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  IssuingTransactionCard:
    discriminated: false
    docs: The card used to make this transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCard
  IssuingTransactionCardholder:
    discriminated: false
    docs: The cardholder to whom this transaction belongs.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingCardholder
  IssuingTransactionCreated:
    docs: Occurs whenever an issuing transaction is created.
    properties:
      object:
        type: IssuingTransaction
    source:
      openapi: ../openapi.yaml
  IssuingTransactionDispute:
    discriminated: false
    docs: If you've disputed the transaction, the ID of the dispute.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingDispute
  IssuingTransactionFleetCardholderPromptData:
    docs: ''
    properties:
      driver_id:
        docs: Driver ID.
        type: optional<string>
        validation:
          maxLength: 5000
      odometer:
        docs: Odometer reading.
        type: optional<integer>
      unspecified_id:
        docs: >-
          An alphanumeric ID. This field is used when a vehicle ID, driver ID,
          or generic ID is entered by the cardholder, but the merchant or card
          network did not specify the prompt type.
        type: optional<string>
        validation:
          maxLength: 5000
      user_id:
        docs: User ID.
        type: optional<string>
        validation:
          maxLength: 5000
      vehicle_number:
        docs: Vehicle number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFleetData:
    docs: ''
    properties:
      cardholder_prompt_data:
        docs: Answers to prompts presented to cardholder at point of sale.
        type: optional<IssuingTransactionFleetCardholderPromptData>
      purchase_type:
        docs: >-
          The type of purchase. One of `fuel_purchase`, `non_fuel_purchase`, or
          `fuel_and_non_fuel_purchase`.
        type: optional<string>
        validation:
          maxLength: 5000
      reported_breakdown:
        docs: >-
          More information about the total amount. This information is not
          guaranteed to be accurate as some merchants may provide unreliable
          data.
        type: optional<IssuingTransactionFleetReportedBreakdown>
      service_type:
        docs: >-
          The type of fuel service. One of `non_fuel_transaction`,
          `full_service`, or `self_service`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFleetFuelPriceData:
    docs: ''
    properties:
      gross_amount_decimal:
        docs: >-
          Gross fuel amount that should equal Fuel Volume multipled by Fuel Unit
          Cost, inclusive of taxes.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFleetNonFuelPriceData:
    docs: ''
    properties:
      gross_amount_decimal:
        docs: >-
          Gross non-fuel amount that should equal the sum of the line items,
          inclusive of taxes.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFleetReportedBreakdown:
    docs: ''
    properties:
      fuel:
        docs: Breakdown of fuel portion of the purchase.
        type: optional<IssuingTransactionFleetFuelPriceData>
      non_fuel:
        docs: Breakdown of non-fuel portion of the purchase.
        type: optional<IssuingTransactionFleetNonFuelPriceData>
      tax:
        docs: Information about tax included in this transaction.
        type: optional<IssuingTransactionFleetTaxData>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFleetTaxData:
    docs: ''
    properties:
      local_amount_decimal:
        docs: >-
          Amount of state or provincial Sales Tax included in the transaction
          amount. Null if not reported by merchant or not subject to tax.
        type: optional<string>
      national_amount_decimal:
        docs: >-
          Amount of national Sales Tax or VAT included in the transaction
          amount. Null if not reported by merchant or not subject to tax.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFlightData:
    docs: ''
    properties:
      departure_at:
        docs: The time that the flight departed.
        type: optional<integer>
      passenger_name:
        docs: The name of the passenger.
        type: optional<string>
        validation:
          maxLength: 5000
      refundable:
        docs: Whether the ticket is refundable.
        type: optional<boolean>
      segments:
        docs: The legs of the trip.
        type: optional<list<IssuingTransactionFlightDataLeg>>
      travel_agency:
        docs: The travel agency that issued the ticket.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFlightDataLeg:
    docs: ''
    properties:
      arrival_airport_code:
        docs: The three-letter IATA airport code of the flight's destination.
        type: optional<string>
        validation:
          maxLength: 5000
      carrier:
        docs: The airline carrier code.
        type: optional<string>
        validation:
          maxLength: 5000
      departure_airport_code:
        docs: The three-letter IATA airport code that the flight departed from.
        type: optional<string>
        validation:
          maxLength: 5000
      flight_number:
        docs: The flight number.
        type: optional<string>
        validation:
          maxLength: 5000
      service_class:
        docs: The flight's service class.
        type: optional<string>
        validation:
          maxLength: 5000
      stopover_allowed:
        docs: Whether a stopover is allowed on this flight.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionFuelData:
    docs: ''
    properties:
      industry_product_code:
        docs: >-
          [Conexxus Payment System Product
          Code](https://www.conexxus.org/conexxus-payment-system-product-codes)
          identifying the primary fuel product purchased.
        type: optional<string>
        validation:
          maxLength: 5000
      quantity_decimal:
        docs: >-
          The quantity of `unit`s of fuel that was dispensed, represented as a
          decimal string with at most 12 decimal places.
        type: optional<string>
      type:
        docs: >-
          The type of fuel that was purchased. One of `diesel`, `unleaded_plus`,
          `unleaded_regular`, `unleaded_super`, or `other`.
        type: string
        validation:
          maxLength: 5000
      unit:
        docs: >-
          The units for `quantity_decimal`. One of `charging_minute`,
          `imperial_gallon`, `kilogram`, `kilowatt_hour`, `liter`, `pound`,
          `us_gallon`, or `other`.
        type: string
        validation:
          maxLength: 5000
      unit_cost_decimal:
        docs: >-
          The cost in cents per each unit of fuel, represented as a decimal
          string with at most 12 decimal places.
        type: string
    source:
      openapi: ../openapi.yaml
  IssuingTransactionLodgingData:
    docs: ''
    properties:
      check_in_at:
        docs: The time of checking into the lodging.
        type: optional<integer>
      nights:
        docs: The number of nights stayed at the lodging.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionNetworkData:
    docs: ''
    properties:
      authorization_code:
        docs: >-
          A code created by Stripe which is shared with the merchant to validate
          the authorization. This field will be populated if the authorization
          message was approved. The code typically starts with the letter "S",
          followed by a six-digit number. For example, "S498162". Please note
          that the code is not guaranteed to be unique across authorizations.
        type: optional<string>
        validation:
          maxLength: 5000
      processing_date:
        docs: >-
          The date the transaction was processed by the card network. This can
          be different from the date the seller recorded the transaction
          depending on when the acquirer submits the transaction to the network.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_id:
        docs: >-
          Unique identifier for the authorization assigned by the card network
          used to match subsequent messages, disputes, and transactions.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionPurchaseDetails:
    docs: ''
    properties:
      fleet:
        docs: Fleet-specific information for transactions using Fleet cards.
        type: optional<IssuingTransactionFleetData>
      flight:
        docs: Information about the flight that was purchased with this transaction.
        type: optional<IssuingTransactionFlightData>
      fuel:
        docs: Information about fuel that was purchased with this transaction.
        type: optional<IssuingTransactionFuelData>
      lodging:
        docs: Information about lodging that was purchased with this transaction.
        type: optional<IssuingTransactionLodgingData>
      receipt:
        docs: The line items in the purchase.
        type: optional<list<IssuingTransactionReceiptData>>
      reference:
        docs: A merchant-specific order number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionPurchaseDetailsReceiptUpdated:
    docs: Occurs whenever an issuing transaction is updated with receipt data.
    properties:
      object:
        type: IssuingTransaction
    source:
      openapi: ../openapi.yaml
  IssuingTransactionReceiptData:
    docs: ''
    properties:
      description:
        docs: >-
          The description of the item. The maximum length of this field is 26
          characters.
        type: optional<string>
        validation:
          maxLength: 5000
      quantity:
        docs: The quantity of the item.
        type: optional<double>
      total:
        docs: The total for this line item in cents.
        type: optional<integer>
      unit_cost:
        docs: The unit cost of the item in cents.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  IssuingTransactionToken:
    discriminated: false
    docs: >-
      [Token](https://stripe.com/docs/api/issuing/tokens/object) object used for
      this transaction. If a network token was not used for this transaction,
      this field will be null.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: IssuingToken
  IssuingTransactionTreasury:
    docs: ''
    properties:
      received_credit:
        docs: >-
          The Treasury
          [ReceivedCredit](https://stripe.com/docs/api/treasury/received_credits)
          representing this Issuing transaction if it is a refund
        type: optional<string>
        validation:
          maxLength: 5000
      received_debit:
        docs: >-
          The Treasury
          [ReceivedDebit](https://stripe.com/docs/api/treasury/received_debits)
          representing this Issuing transaction if it is a capture
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  IssuingTransactionType:
    docs: The nature of the transaction.
    enum:
      - capture
      - refund
    inline: true
    source:
      openapi: ../openapi.yaml
  IssuingTransactionUpdated:
    docs: Occurs whenever an issuing transaction is updated.
    properties:
      object:
        type: IssuingTransaction
    source:
      openapi: ../openapi.yaml
  IssuingTransactionWallet:
    docs: >-
      The digital wallet used for this transaction. One of `apple_pay`,
      `google_pay`, or `samsung_pay`.
    enum:
      - apple_pay
      - google_pay
      - samsung_pay
    inline: true
    source:
      openapi: ../openapi.yaml
  Item:
    docs: A line item.
    properties:
      amount_discount:
        docs: >-
          Total discount amount applied. If no discounts were applied, defaults
          to 0.
        type: integer
      amount_subtotal:
        docs: Total before any discounts or taxes are applied.
        type: integer
      amount_tax:
        docs: Total tax amount applied. If no tax was applied, defaults to 0.
        type: integer
      amount_total:
        docs: Total after discounts and taxes.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users. Defaults to product name.
        type: optional<string>
        validation:
          maxLength: 5000
      discounts:
        docs: The discounts applied to the line item.
        type: optional<list<LineItemsDiscountAmount>>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"item">
      price:
        docs: The price used to generate the line item.
        type: optional<Price>
      quantity:
        docs: The quantity of products being purchased.
        type: optional<integer>
      taxes:
        docs: The taxes applied to the line item.
        type: optional<list<LineItemsTaxAmount>>
    source:
      openapi: ../openapi.yaml
  KlarnaAddress:
    docs: ''
    properties:
      country:
        docs: The payer address country
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  KlarnaPayerDetails:
    docs: ''
    properties:
      address:
        docs: The payer's address
        type: optional<KlarnaAddress>
    source:
      openapi: ../openapi.yaml
  LegalEntityCompany:
    docs: ''
    properties:
      address:
        type: optional<Address>
      address_kana:
        docs: The Kana variation of the company's primary address (Japan only).
        type: optional<LegalEntityJapanAddress>
      address_kanji:
        docs: The Kanji variation of the company's primary address (Japan only).
        type: optional<LegalEntityJapanAddress>
      directors_provided:
        docs: >-
          Whether the company's directors have been provided. This Boolean will
          be `true` if you've manually indicated that all directors are provided
          via [the `directors_provided`
          parameter](https://stripe.com/docs/api/accounts/update#update_account-company-directors_provided).
        type: optional<boolean>
      directorship_declaration:
        docs: >-
          This hash is used to attest that the director information provided to
          Stripe is both current and correct.
        type: optional<LegalEntityDirectorshipDeclaration>
      executives_provided:
        docs: >-
          Whether the company's executives have been provided. This Boolean will
          be `true` if you've manually indicated that all executives are
          provided via [the `executives_provided`
          parameter](https://stripe.com/docs/api/accounts/update#update_account-company-executives_provided),
          or if Stripe determined that sufficient executives were provided.
        type: optional<boolean>
      export_license_id:
        docs: >-
          The export license ID number of the company, also referred as Import
          Export Code (India only).
        type: optional<string>
        validation:
          maxLength: 5000
      export_purpose_code:
        docs: The purpose code to use for export transactions (India only).
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: The company's legal name.
        type: optional<string>
        validation:
          maxLength: 5000
      name_kana:
        docs: The Kana variation of the company's legal name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      name_kanji:
        docs: The Kanji variation of the company's legal name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      owners_provided:
        docs: >-
          Whether the company's owners have been provided. This Boolean will be
          `true` if you've manually indicated that all owners are provided via
          [the `owners_provided`
          parameter](https://stripe.com/docs/api/accounts/update#update_account-company-owners_provided),
          or if Stripe determined that sufficient owners were provided. Stripe
          determines ownership requirements using both the number of owners
          provided and their total percent ownership (calculated by adding the
          `percent_ownership` of each owner together).
        type: optional<boolean>
      ownership_declaration:
        docs: >-
          This hash is used to attest that the beneficial owner information
          provided to Stripe is both current and correct.
        type: optional<LegalEntityUboDeclaration>
      ownership_exemption_reason:
        type: optional<LegalEntityCompanyOwnershipExemptionReason>
      phone:
        docs: The company's phone number (used for verification).
        type: optional<string>
        validation:
          maxLength: 5000
      structure:
        docs: >-
          The category identifying the legal structure of the company or legal
          entity. See [Business
          structure](https://stripe.com/docs/connect/identity-verification#business-structure)
          for more details.
        type: optional<LegalEntityCompanyStructure>
      tax_id_provided:
        docs: Whether the company's business ID number was provided.
        type: optional<boolean>
      tax_id_registrar:
        docs: >-
          The jurisdiction in which the `tax_id` is registered (Germany-based
          companies only).
        type: optional<string>
        validation:
          maxLength: 5000
      vat_id_provided:
        docs: Whether the company's business VAT number was provided.
        type: optional<boolean>
      verification:
        docs: Information on the verification state of the company.
        type: optional<LegalEntityCompanyVerification>
    source:
      openapi: ../openapi.yaml
  LegalEntityCompanyOwnershipExemptionReason:
    enum:
      - qualified_entity_exceeds_ownership_threshold
      - qualifies_as_financial_institution
    inline: true
    source:
      openapi: ../openapi.yaml
  LegalEntityCompanyStructure:
    docs: >-
      The category identifying the legal structure of the company or legal
      entity. See [Business
      structure](https://stripe.com/docs/connect/identity-verification#business-structure)
      for more details.
    enum:
      - free_zone_establishment
      - free_zone_llc
      - government_instrumentality
      - governmental_unit
      - incorporated_non_profit
      - incorporated_partnership
      - limited_liability_partnership
      - llc
      - multi_member_llc
      - private_company
      - private_corporation
      - private_partnership
      - public_company
      - public_corporation
      - public_partnership
      - registered_charity
      - single_member_llc
      - sole_establishment
      - sole_proprietorship
      - tax_exempt_government_instrumentality
      - unincorporated_association
      - unincorporated_non_profit
      - unincorporated_partnership
    inline: true
    source:
      openapi: ../openapi.yaml
  LegalEntityCompanyVerification:
    docs: ''
    properties:
      document:
        type: LegalEntityCompanyVerificationDocument
    source:
      openapi: ../openapi.yaml
  LegalEntityCompanyVerificationDocument:
    docs: ''
    properties:
      back:
        docs: >-
          The back of a document returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `additional_verification`.
        type: optional<LegalEntityCompanyVerificationDocumentBack>
      details:
        docs: >-
          A user-displayable string describing the verification state of this
          document.
        type: optional<string>
        validation:
          maxLength: 5000
      details_code:
        docs: >-
          One of `document_corrupt`, `document_expired`, `document_failed_copy`,
          `document_failed_greyscale`, `document_failed_other`,
          `document_failed_test_mode`, `document_fraudulent`,
          `document_incomplete`, `document_invalid`, `document_manipulated`,
          `document_not_readable`, `document_not_uploaded`,
          `document_type_not_supported`, or `document_too_large`. A
          machine-readable code specifying the verification state for this
          document.
        type: optional<string>
        validation:
          maxLength: 5000
      front:
        docs: >-
          The front of a document returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `additional_verification`.
        type: optional<LegalEntityCompanyVerificationDocumentFront>
    source:
      openapi: ../openapi.yaml
  LegalEntityCompanyVerificationDocumentBack:
    discriminated: false
    docs: >-
      The back of a document returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `additional_verification`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  LegalEntityCompanyVerificationDocumentFront:
    discriminated: false
    docs: >-
      The front of a document returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `additional_verification`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  LegalEntityDirectorshipDeclaration:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the directorship declaration
          attestation was made.
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the directorship declaration attestation was
          made.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user-agent string from the browser where the directorship
          declaration attestation was made.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  LegalEntityDob:
    docs: ''
    properties:
      day:
        docs: The day of birth, between 1 and 31.
        type: optional<integer>
      month:
        docs: The month of birth, between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year of birth.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  LegalEntityJapanAddress:
    docs: ''
    properties:
      city:
        docs: City/Ward.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      line1:
        docs: Block/Building number.
        type: optional<string>
        validation:
          maxLength: 5000
      line2:
        docs: Building details.
        type: optional<string>
        validation:
          maxLength: 5000
      postal_code:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: Prefecture.
        type: optional<string>
        validation:
          maxLength: 5000
      town:
        docs: Town/cho-me.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  LegalEntityPersonVerification:
    docs: ''
    properties:
      additional_document:
        docs: >-
          A document showing address, either a passport, local ID card, or
          utility bill from a well-known utility company.
        type: optional<LegalEntityPersonVerificationDocument>
      details:
        docs: >-
          A user-displayable string describing the verification state for the
          person. For example, this may say "Provided identity information could
          not be verified".
        type: optional<string>
        validation:
          maxLength: 5000
      details_code:
        docs: >-
          One of `document_address_mismatch`, `document_dob_mismatch`,
          `document_duplicate_type`, `document_id_number_mismatch`,
          `document_name_mismatch`, `document_nationality_mismatch`,
          `failed_keyed_identity`, or `failed_other`. A machine-readable code
          specifying the verification state for the person.
        type: optional<string>
        validation:
          maxLength: 5000
      document:
        type: optional<LegalEntityPersonVerificationDocument>
      status:
        docs: >-
          The state of verification for the person. Possible values are
          `unverified`, `pending`, or `verified`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  LegalEntityPersonVerificationDocument:
    docs: ''
    properties:
      back:
        docs: >-
          The back of an ID returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `identity_document`.
        type: optional<LegalEntityPersonVerificationDocumentBack>
      details:
        docs: >-
          A user-displayable string describing the verification state of this
          document. For example, if a document is uploaded and the picture is
          too fuzzy, this may say "Identity document is too unclear to read".
        type: optional<string>
        validation:
          maxLength: 5000
      details_code:
        docs: >-
          One of `document_corrupt`, `document_country_not_supported`,
          `document_expired`, `document_failed_copy`, `document_failed_other`,
          `document_failed_test_mode`, `document_fraudulent`,
          `document_failed_greyscale`, `document_incomplete`,
          `document_invalid`, `document_manipulated`, `document_missing_back`,
          `document_missing_front`, `document_not_readable`,
          `document_not_uploaded`, `document_photo_mismatch`,
          `document_too_large`, or `document_type_not_supported`. A
          machine-readable code specifying the verification state for this
          document.
        type: optional<string>
        validation:
          maxLength: 5000
      front:
        docs: >-
          The front of an ID returned by a [file
          upload](https://stripe.com/docs/api#create_file) with a `purpose`
          value of `identity_document`.
        type: optional<LegalEntityPersonVerificationDocumentFront>
    source:
      openapi: ../openapi.yaml
  LegalEntityPersonVerificationDocumentBack:
    discriminated: false
    docs: >-
      The back of an ID returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `identity_document`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  LegalEntityPersonVerificationDocumentFront:
    discriminated: false
    docs: >-
      The front of an ID returned by a [file
      upload](https://stripe.com/docs/api#create_file) with a `purpose` value of
      `identity_document`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  LegalEntityUboDeclaration:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the beneficial owner attestation was
          made.
        type: optional<integer>
      ip:
        docs: The IP address from which the beneficial owner attestation was made.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user-agent string from the browser where the beneficial owner
          attestation was made.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Level3:
    docs: ''
    properties:
      customer_reference:
        type: optional<string>
        validation:
          maxLength: 5000
      line_items: list<Level3LineItems>
      merchant_reference:
        type: string
        validation:
          maxLength: 5000
      shipping_address_zip:
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_amount:
        type: optional<integer>
      shipping_from_zip:
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Level3LineItems:
    docs: ''
    properties:
      discount_amount: optional<integer>
      product_code:
        type: string
        validation:
          maxLength: 5000
      product_description:
        type: string
        validation:
          maxLength: 5000
      quantity: optional<integer>
      tax_amount: optional<integer>
      unit_cost: optional<integer>
    source:
      openapi: ../openapi.yaml
  LineItem:
    docs: >-
      Invoice Line Items represent the individual lines within an
      [invoice](https://stripe.com/docs/api/invoices) and only exist within the
      context of an invoice.


      Each line item is backed by either an [invoice
      item](https://stripe.com/docs/api/invoiceitems) or a [subscription
      item](https://stripe.com/docs/api/subscription_items).
    properties:
      amount:
        docs: The amount, in cents (or local equivalent).
        type: integer
      amount_excluding_tax:
        docs: >-
          The integer amount in cents (or local equivalent) representing the
          amount for this line item, excluding all tax and discounts.
        type: optional<integer>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      discount_amounts:
        docs: The amount of discount calculated per discount for this line item.
        type: optional<list<DiscountsResourceDiscountAmount>>
      discountable:
        docs: >-
          If true, discounts will apply to this line item. Always false for
          prorations.
        type: boolean
      discounts:
        docs: >-
          The discounts applied to the invoice line item. Line item discounts
          are applied before invoice discounts. Use `expand[]=discounts` to
          expand each discount.
        type: list<LineItemDiscountsItem>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The ID of the invoice that contains this line item.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_item:
        docs: >-
          The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems)
          associated with this line item if any.
        type: optional<LineItemInvoiceItem>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format. Note that for
          line items with `type=subscription`, `metadata` reflects the current
          metadata from the subscription associated with the line item, unless
          the invoice line was directly updated with different metadata after
          creation.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"line_item">
      period:
        type: InvoiceLineItemPeriod
      plan:
        docs: >-
          The plan of the subscription, if the line item is a subscription or a
          proration.
        type: optional<Plan>
      pretax_credit_amounts:
        docs: >-
          Contains pretax credit amounts (ex: discount, credit grants, etc) that
          apply to this line item.
        type: optional<list<InvoicesResourcePretaxCreditAmount>>
      price:
        docs: The price of the line item.
        type: optional<Price>
      proration:
        docs: Whether this is a proration.
        type: boolean
      proration_details:
        docs: Additional details for proration line items
        type: optional<InvoicesResourceLineItemsProrationDetails>
      quantity:
        docs: >-
          The quantity of the subscription, if the line item is a subscription
          or a proration.
        type: optional<integer>
      subscription:
        docs: The subscription that the invoice item pertains to, if any.
        type: optional<LineItemSubscription>
      subscription_item:
        docs: >-
          The subscription item that generated this line item. Left empty if the
          line item is not an explicit result of a subscription.
        type: optional<LineItemSubscriptionItem>
      tax_amounts:
        docs: The amount of tax calculated per tax rate for this line item
        type: list<InvoiceTaxAmount>
      tax_rates:
        docs: The tax rates which apply to the line item.
        type: list<TaxRate>
      type:
        docs: >-
          A string identifying the type of the source of this line item, either
          an `invoiceitem` or a `subscription`.
        type: LineItemType
      unit_amount_excluding_tax:
        docs: >-
          The amount in cents (or local equivalent) representing the unit amount
          for this line item, excluding all tax and discounts.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  LineItemDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  LineItemInvoiceItem:
    discriminated: false
    docs: >-
      The ID of the [invoice item](https://stripe.com/docs/api/invoiceitems)
      associated with this line item if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoiceitem
  LineItemsDiscountAmount:
    docs: ''
    properties:
      amount:
        docs: The amount discounted.
        type: integer
      discount:
        type: Discount
    source:
      openapi: ../openapi.yaml
  LineItemsTaxAmount:
    docs: ''
    properties:
      amount:
        docs: Amount of tax applied for this rate.
        type: integer
      rate:
        type: TaxRate
      taxability_reason:
        docs: >-
          The reasoning behind this tax, for example, if the product is tax
          exempt. The possible values for this field may be extended as new tax
          rules are supported.
        type: optional<LineItemsTaxAmountTaxabilityReason>
      taxable_amount:
        docs: The amount on which tax is calculated, in cents (or local equivalent).
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  LineItemsTaxAmountTaxabilityReason:
    docs: >-
      The reasoning behind this tax, for example, if the product is tax exempt.
      The possible values for this field may be extended as new tax rules are
      supported.
    enum:
      - customer_exempt
      - not_collecting
      - not_subject_to_tax
      - not_supported
      - portion_product_exempt
      - portion_reduced_rated
      - portion_standard_rated
      - product_exempt
      - product_exempt_holiday
      - proportionally_rated
      - reduced_rated
      - reverse_charge
      - standard_rated
      - taxable_basis_reduced
      - zero_rated
    inline: true
    source:
      openapi: ../openapi.yaml
  LineItemSubscription:
    discriminated: false
    docs: The subscription that the invoice item pertains to, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  LineItemSubscriptionItem:
    discriminated: false
    docs: >-
      The subscription item that generated this line item. Left empty if the
      line item is not an explicit result of a subscription.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SubscriptionItem
  LineItemType:
    docs: >-
      A string identifying the type of the source of this line item, either an
      `invoiceitem` or a `subscription`.
    enum:
      - invoiceitem
      - subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  LinkedAccountOptionsUsBankAccount:
    docs: ''
    properties:
      filters:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsUsBankAccountLinkedAccountOptionsFilters>
      permissions:
        docs: >-
          The list of permissions to request. The `payment_method` permission
          must be included.
        type: optional<list<LinkedAccountOptionsUsBankAccountPermissionsItem>>
      prefetch:
        docs: Data features requested to be retrieved upon account creation.
        type: optional<list<LinkedAccountOptionsUsBankAccountPrefetchItem>>
      return_url:
        docs: >-
          For webview integrations only. Upon completing OAuth login in the
          native browser, the user will be redirected to this URL to return to
          your app.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  LinkedAccountOptionsUsBankAccountPermissionsItem:
    enum:
      - balances
      - ownership
      - payment_method
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  LinkedAccountOptionsUsBankAccountPrefetchItem:
    enum:
      - balances
      - ownership
      - transactions
    inline: true
    source:
      openapi: ../openapi.yaml
  LoginLink:
    docs: >-
      Login Links are single-use URLs for a connected account to access the
      Express Dashboard. The connected account's
      [account.controller.stripe_dashboard.type](/api/accounts/object#account_object-controller-stripe_dashboard-type)
      must be `express` to have access to the Express Dashboard.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"login_link">
      url:
        docs: The URL for the login link.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Mandate:
    docs: >-
      A Mandate is a record of the permission that your customer gives you to
      debit their payment method.
    properties:
      customer_acceptance:
        type: CustomerAcceptance
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      multi_use:
        type: optional<MandateMultiUse>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"mandate">
      on_behalf_of:
        docs: The account (if any) that the mandate is intended for.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_method:
        docs: ID of the payment method associated with this mandate.
        type: MandatePaymentMethod
      payment_method_details:
        type: MandatePaymentMethodDetails
      single_use:
        type: optional<MandateSingleUse>
      status:
        docs: >-
          The mandate status indicates whether or not you can use it to initiate
          a payment.
        type: MandateStatus
      type:
        docs: The type of the mandate.
        type: MandateType
    source:
      openapi: ../openapi.yaml
  MandateAcssDebit:
    docs: ''
    properties:
      default_for:
        docs: >-
          List of Stripe products where this mandate can be selected
          automatically.
        type: optional<list<MandateAcssDebitDefaultForItem>>
      interval_description:
        docs: >-
          Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_schedule:
        docs: Payment schedule for the mandate.
        type: MandateAcssDebitPaymentSchedule
      transaction_type:
        docs: Transaction type of the mandate.
        type: MandateAcssDebitTransactionType
    source:
      openapi: ../openapi.yaml
  MandateAcssDebitDefaultForItem:
    enum:
      - invoice
      - subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateAcssDebitPaymentSchedule:
    docs: Payment schedule for the mandate.
    enum:
      - combined
      - interval
      - sporadic
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateAcssDebitTransactionType:
    docs: Transaction type of the mandate.
    enum:
      - business
      - personal
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateAmazonPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateAuBecsDebit:
    docs: ''
    properties:
      url:
        docs: >-
          The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them
          exclusively.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  MandateBacsDebit:
    docs: ''
    properties:
      network_status:
        docs: >-
          The status of the mandate on the Bacs network. Can be one of
          `pending`, `revoked`, `refused`, or `accepted`.
        type: MandateBacsDebitNetworkStatus
      reference:
        docs: The unique reference identifying the mandate on the Bacs network.
        type: string
        validation:
          maxLength: 5000
      revocation_reason:
        docs: >-
          When the mandate is revoked on the Bacs network this field displays
          the reason for the revocation.
        type: optional<MandateBacsDebitRevocationReason>
      url:
        docs: The URL that will contain the mandate that the customer has signed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  MandateBacsDebitNetworkStatus:
    docs: >-
      The status of the mandate on the Bacs network. Can be one of `pending`,
      `revoked`, `refused`, or `accepted`.
    enum:
      - accepted
      - pending
      - refused
      - revoked
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateBacsDebitRevocationReason:
    docs: >-
      When the mandate is revoked on the Bacs network this field displays the
      reason for the revocation.
    enum:
      - account_closed
      - bank_account_restricted
      - bank_ownership_changed
      - could_not_process
      - debit_not_authorized
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateCashapp:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateKakaoPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateKrCard:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateLink:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateMultiUse:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandatePaymentMethod:
    discriminated: false
    docs: ID of the payment method associated with this mandate.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  MandatePaymentMethodDetails:
    docs: ''
    properties:
      acss_debit:
        type: optional<MandateAcssDebit>
      amazon_pay:
        type: optional<MandateAmazonPay>
      au_becs_debit:
        type: optional<MandateAuBecsDebit>
      bacs_debit:
        type: optional<MandateBacsDebit>
      card:
        type: optional<CardMandatePaymentMethodDetails>
      cashapp:
        type: optional<MandateCashapp>
      kakao_pay:
        type: optional<MandateKakaoPay>
      kr_card:
        type: optional<MandateKrCard>
      link:
        type: optional<MandateLink>
      paypal:
        type: optional<MandatePaypal>
      revolut_pay:
        type: optional<MandateRevolutPay>
      sepa_debit:
        type: optional<MandateSepaDebit>
      type:
        docs: >-
          This mandate corresponds with a specific payment method type. The
          `payment_method_details` includes an additional hash with the same
          name and contains mandate information that's specific to that payment
          method.
        type: string
        validation:
          maxLength: 5000
      us_bank_account:
        type: optional<MandateUsBankAccount>
    source:
      openapi: ../openapi.yaml
  MandatePaypal:
    docs: ''
    properties:
      billing_agreement_id:
        docs: >-
          The PayPal Billing Agreement ID (BAID). This is an ID generated by
          PayPal which represents the mandate between the merchant and the
          customer.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_id:
        docs: >-
          PayPal account PayerID. This identifier uniquely identifies the PayPal
          customer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  MandateRevolutPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  MandateSepaDebit:
    docs: ''
    properties:
      reference:
        docs: The unique reference of the mandate.
        type: string
        validation:
          maxLength: 5000
      url:
        docs: >-
          The URL of the mandate. This URL generally contains sensitive
          information about the customer and should be shared with them
          exclusively.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  MandateSingleUse:
    docs: ''
    properties:
      amount:
        docs: The amount of the payment on a single use mandate.
        type: integer
      currency:
        docs: The currency of the payment on a single use mandate.
        type: string
    source:
      openapi: ../openapi.yaml
  MandateStatus:
    docs: >-
      The mandate status indicates whether or not you can use it to initiate a
      payment.
    enum:
      - active
      - inactive
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateType:
    docs: The type of the mandate.
    enum:
      - multi_use
      - single_use
    inline: true
    source:
      openapi: ../openapi.yaml
  MandateUpdated:
    docs: Occurs whenever a Mandate is updated.
    properties:
      object:
        type: Mandate
    source:
      openapi: ../openapi.yaml
  MandateUsBankAccount:
    docs: ''
    properties:
      collection_method:
        docs: Mandate collection method
        type: optional<literal<"paper">>
    source:
      openapi: ../openapi.yaml
  Networks:
    docs: ''
    properties:
      available:
        docs: All available networks for the card.
        type: list<string>
      preferred:
        docs: >-
          The preferred network for co-branded cards. Can be `cartes_bancaires`,
          `mastercard`, `visa` or `invalid_preference` if requested network is
          not valid for the card.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  NotificationEventData:
    docs: ''
    properties:
      object:
        docs: >-
          Object containing the API resource relevant to the event. For example,
          an `invoice.created` event will have a full [invoice
          object](https://stripe.com/docs/api#invoice_object) as the value of
          the object key.
        type: map<string, unknown>
      previous_attributes:
        docs: >-
          Object containing the names of the updated attributes and their values
          prior to the event (only included in events of type `*.updated`). If
          an array attribute has any updated elements, this object contains the
          entire array. In Stripe API versions 2017-04-06 or earlier, an updated
          array attribute in this object includes only the updated array
          elements.
        type: optional<map<string, unknown>>
    source:
      openapi: ../openapi.yaml
  NotificationEventRequest:
    docs: ''
    properties:
      id:
        docs: >-
          ID of the API request that caused the event. If null, the event was
          automatic (e.g., Stripe's automatic subscription handling). Request
          logs are available in the
          [dashboard](https://dashboard.stripe.com/logs), but currently not in
          the API.
        type: optional<string>
        validation:
          maxLength: 5000
      idempotency_key:
        docs: >-
          The idempotency key transmitted during the request, if any. *Note:
          This property is populated only for events on or after May 23, 2017*.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  OfflineAcceptance:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  OnlineAcceptance:
    docs: ''
    properties:
      ip_address:
        docs: The customer accepts the mandate from this IP address.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: The customer accepts the mandate using the user agent of the browser.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetails:
    docs: ''
    properties:
      billing_details:
        type: TreasurySharedResourceBillingDetails
      financial_account:
        type: optional<OutboundPaymentsPaymentMethodDetailsFinancialAccount>
      type:
        docs: The type of the payment method used in the OutboundPayment.
        type: OutboundPaymentsPaymentMethodDetailsType
      us_bank_account:
        type: optional<OutboundPaymentsPaymentMethodDetailsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsFinancialAccount:
    docs: ''
    properties:
      id:
        docs: Token of the FinancialAccount.
        type: string
        validation:
          maxLength: 5000
      network:
        docs: The rails used to send funds.
        type: literal<"stripe">
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsType:
    docs: The type of the payment method used in the OutboundPayment.
    enum:
      - financial_account
      - us_bank_account
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsUsBankAccount:
    docs: ''
    properties:
      account_holder_type:
        docs: 'Account holder type: individual or company.'
        type: >-
          optional<OutboundPaymentsPaymentMethodDetailsUsBankAccountAccountHolderType>
      account_type:
        docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
        type: optional<OutboundPaymentsPaymentMethodDetailsUsBankAccountAccountType>
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<OutboundPaymentsPaymentMethodDetailsUsBankAccountMandate>
      network:
        docs: >-
          The network rails used. See the
          [docs](https://stripe.com/docs/treasury/money-movement/timelines) to
          learn more about money movement timelines for each network type.
        type: OutboundPaymentsPaymentMethodDetailsUsBankAccountNetwork
      routing_number:
        docs: Routing number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsUsBankAccountAccountHolderType:
    docs: 'Account holder type: individual or company.'
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsUsBankAccountAccountType:
    docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundPaymentsPaymentMethodDetailsUsBankAccountMandate:
    discriminated: false
    docs: ID of the mandate used to make this payment.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  OutboundPaymentsPaymentMethodDetailsUsBankAccountNetwork:
    docs: >-
      The network rails used. See the
      [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn
      more about money movement timelines for each network type.
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetails:
    docs: ''
    properties:
      billing_details:
        type: TreasurySharedResourceBillingDetails
      financial_account:
        type: optional<OutboundTransfersPaymentMethodDetailsFinancialAccount>
      type:
        docs: The type of the payment method used in the OutboundTransfer.
        type: OutboundTransfersPaymentMethodDetailsType
      us_bank_account:
        type: optional<OutboundTransfersPaymentMethodDetailsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsFinancialAccount:
    docs: ''
    properties:
      id:
        docs: Token of the FinancialAccount.
        type: string
        validation:
          maxLength: 5000
      network:
        docs: The rails used to send funds.
        type: literal<"stripe">
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsType:
    docs: The type of the payment method used in the OutboundTransfer.
    enum:
      - financial_account
      - us_bank_account
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsUsBankAccount:
    docs: ''
    properties:
      account_holder_type:
        docs: 'Account holder type: individual or company.'
        type: >-
          optional<OutboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType>
      account_type:
        docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
        type: >-
          optional<OutboundTransfersPaymentMethodDetailsUsBankAccountAccountType>
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<OutboundTransfersPaymentMethodDetailsUsBankAccountMandate>
      network:
        docs: >-
          The network rails used. See the
          [docs](https://stripe.com/docs/treasury/money-movement/timelines) to
          learn more about money movement timelines for each network type.
        type: OutboundTransfersPaymentMethodDetailsUsBankAccountNetwork
      routing_number:
        docs: Routing number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsUsBankAccountAccountHolderType:
    docs: 'Account holder type: individual or company.'
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsUsBankAccountAccountType:
    docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  OutboundTransfersPaymentMethodDetailsUsBankAccountMandate:
    discriminated: false
    docs: ID of the mandate used to make this payment.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  OutboundTransfersPaymentMethodDetailsUsBankAccountNetwork:
    docs: >-
      The network rails used. See the
      [docs](https://stripe.com/docs/treasury/money-movement/timelines) to learn
      more about money movement timelines for each network type.
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  PackageDimensions:
    docs: ''
    properties:
      height:
        docs: Height, in inches.
        type: double
      length:
        docs: Length, in inches.
        type: double
      weight:
        docs: Weight, in ounces.
        type: double
      width:
        docs: Width, in inches.
        type: double
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAmountDetails:
    docs: ''
    properties:
      tip:
        type: optional<PaymentFlowsAmountDetailsClientResourceTip>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAmountDetailsClient:
    docs: ''
    properties:
      tip:
        type: optional<PaymentFlowsAmountDetailsClientResourceTip>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAmountDetailsClientResourceTip:
    docs: ''
    properties:
      amount:
        docs: Portion of the amount that corresponds to a tip.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAutomaticPaymentMethodsPaymentIntent:
    docs: ''
    properties:
      allow_redirects:
        docs: >-
          Controls whether this PaymentIntent will accept redirect-based payment
          methods.


          Redirect-based payment methods may require your customer to be
          redirected to a payment method's app or site for authentication or
          additional steps. To
          [confirm](https://stripe.com/docs/api/payment_intents/confirm) this
          PaymentIntent, you may be required to provide a `return_url` to
          redirect customers back to your site after they authenticate or
          complete the payment.
        type: >-
          optional<PaymentFlowsAutomaticPaymentMethodsPaymentIntentAllowRedirects>
      enabled:
        docs: Automatically calculates compatible payment methods
        type: boolean
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAutomaticPaymentMethodsPaymentIntentAllowRedirects:
    docs: >-
      Controls whether this PaymentIntent will accept redirect-based payment
      methods.


      Redirect-based payment methods may require your customer to be redirected
      to a payment method's app or site for authentication or additional steps.
      To [confirm](https://stripe.com/docs/api/payment_intents/confirm) this
      PaymentIntent, you may be required to provide a `return_url` to redirect
      customers back to your site after they authenticate or complete the
      payment.
    enum:
      - always
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAutomaticPaymentMethodsSetupIntent:
    docs: ''
    properties:
      allow_redirects:
        docs: >-
          Controls whether this SetupIntent will accept redirect-based payment
          methods.


          Redirect-based payment methods may require your customer to be
          redirected to a payment method's app or site for authentication or
          additional steps. To
          [confirm](https://stripe.com/docs/api/setup_intents/confirm) this
          SetupIntent, you may be required to provide a `return_url` to redirect
          customers back to your site after they authenticate or complete the
          setup.
        type: optional<PaymentFlowsAutomaticPaymentMethodsSetupIntentAllowRedirects>
      enabled:
        docs: Automatically calculates compatible payment methods
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsAutomaticPaymentMethodsSetupIntentAllowRedirects:
    docs: >-
      Controls whether this SetupIntent will accept redirect-based payment
      methods.


      Redirect-based payment methods may require your customer to be redirected
      to a payment method's app or site for authentication or additional steps.
      To [confirm](https://stripe.com/docs/api/setup_intents/confirm) this
      SetupIntent, you may be required to provide a `return_url` to redirect
      customers back to your site after they authenticate or complete the setup.
    enum:
      - always
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsInstallmentOptions:
    docs: ''
    properties:
      enabled: boolean
      plan:
        type: optional<PaymentMethodDetailsCardInstallmentsPlan>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsAlipay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsAlipayDetails:
    docs: ''
    properties:
      buyer_id:
        docs: >-
          Uniquely identifies this particular Alipay account. You can use this
          attribute to check whether two Alipay accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular Alipay account. You can use this
          attribute to check whether two Alipay accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_id:
        docs: Transaction ID of this particular Alipay transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorization:
    docs: ''
    properties:
      status:
        docs: >-
          Indicates whether or not the capture window is extended beyond the
          standard authorization.
        type: >-
          PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorizationStatus
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorizationStatus:
    docs: >-
      Indicates whether or not the capture window is extended beyond the
      standard authorization.
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorization:
    docs: ''
    properties:
      status:
        docs: >-
          Indicates whether or not the incremental authorization feature is
          supported.
        type: >-
          PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorizationStatus
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorizationStatus:
    docs: >-
      Indicates whether or not the incremental authorization feature is
      supported.
    enum:
      - available
      - unavailable
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesOvercaptureOvercapture:
    docs: ''
    properties:
      maximum_amount_capturable:
        docs: The maximum amount that can be captured.
        type: integer
      status:
        docs: Indicates whether or not the authorized amount can be over-captured.
        type: >-
          PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesOvercaptureOvercaptureStatus
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesOvercaptureOvercaptureStatus:
    docs: Indicates whether or not the authorized amount can be over-captured.
    enum:
      - available
      - unavailable
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceMulticapture:
    docs: ''
    properties:
      status:
        docs: Indicates whether or not multiple captures are supported.
        type: >-
          PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceMulticaptureStatus
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceMulticaptureStatus:
    docs: Indicates whether or not multiple captures are supported.
    enum:
      - available
      - unavailable
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardPresentCommonWallet:
    docs: ''
    properties:
      type:
        docs: >-
          The type of mobile wallet, one of `apple_pay`, `google_pay`,
          `samsung_pay`, or `unknown`.
        type: PaymentFlowsPrivatePaymentMethodsCardPresentCommonWalletType
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsCardPresentCommonWalletType:
    docs: >-
      The type of mobile wallet, one of `apple_pay`, `google_pay`,
      `samsung_pay`, or `unknown`.
    enum:
      - apple_pay
      - google_pay
      - samsung_pay
      - unknown
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsKakaoPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsKakaoPayPaymentMethodOptionsSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsKakaoPayPaymentMethodOptionsSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsKlarnaDob:
    docs: ''
    properties:
      day:
        docs: The day of birth, between 1 and 31.
        type: optional<integer>
      month:
        docs: The month of birth, between 1 and 12.
        type: optional<integer>
      year:
        docs: The four-digit year of birth.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsNaverPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsPaycoPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsSamsungPayPaymentMethodOptions:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsUsBankAccountLinkedAccountOptionsFilters:
    docs: ''
    properties:
      account_subcategories:
        docs: >-
          The account subcategories to use to filter for possible accounts to
          link. Valid subcategories are `checking` and `savings`.
        type: >-
          optional<list<PaymentFlowsPrivatePaymentMethodsUsBankAccountLinkedAccountOptionsFiltersAccountSubcategoriesItem>>
    source:
      openapi: ../openapi.yaml
  PaymentFlowsPrivatePaymentMethodsUsBankAccountLinkedAccountOptionsFiltersAccountSubcategoriesItem:
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntent:
    docs: >-
      A PaymentIntent guides you through the process of collecting a payment
      from your customer.

      We recommend that you create exactly one PaymentIntent for each order or

      customer session in your system. You can reference the PaymentIntent later
      to

      see the history of payment attempts for a particular session.


      A PaymentIntent transitions through

      [multiple
      statuses](https://stripe.com/docs/payments/intents#intent-statuses)

      throughout its lifetime as it interfaces with Stripe.js to perform

      authentication flows and ultimately creates at most one successful charge.


      Related guide: [Payment Intents
      API](https://stripe.com/docs/payments/payment-intents)
    properties:
      amount:
        docs: >-
          Amount intended to be collected by this PaymentIntent. A positive
          integer representing how much to charge in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100
          cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge
          currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of
          99999999 for a USD charge of $999,999.99).
        type: integer
      amount_capturable:
        docs: Amount that can be captured from this PaymentIntent.
        type: integer
      amount_details:
        type: optional<PaymentFlowsAmountDetails>
      amount_received:
        docs: Amount that this PaymentIntent collects.
        type: integer
      application:
        docs: ID of the Connect application that created the PaymentIntent.
        type: optional<PaymentIntentApplication>
      application_fee_amount:
        docs: >-
          The amount of the application fee (if any) that will be requested to
          be applied to the payment and transferred to the application owner's
          Stripe account. The amount of the application fee collected will be
          capped at the total payment amount. For more information, see the
          PaymentIntents [use case for connected
          accounts](https://stripe.com/docs/payments/connected-accounts).
        type: optional<integer>
      automatic_payment_methods:
        docs: >-
          Settings to configure compatible payment methods from the [Stripe
          Dashboard](https://dashboard.stripe.com/settings/payment_methods)
        type: optional<PaymentFlowsAutomaticPaymentMethodsPaymentIntent>
      canceled_at:
        docs: >-
          Populated when `status` is `canceled`, this is the time at which the
          PaymentIntent was canceled. Measured in seconds since the Unix epoch.
        type: optional<integer>
      cancellation_reason:
        docs: >-
          Reason for cancellation of this PaymentIntent, either user-provided
          (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`)
          or generated by Stripe internally (`failed_invoice`, `void_invoice`,
          or `automatic`).
        type: optional<PaymentIntentCancellationReason>
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: PaymentIntentCaptureMethod
      client_secret:
        docs: >-
          The client secret of this PaymentIntent. Used for client-side
          retrieval using a publishable key. 


          The client secret can be used to complete a payment from your
          frontend. It should not be stored, logged, or exposed to anyone other
          than the customer. Make sure that you have TLS enabled on any page
          that includes the client secret.


          Refer to our docs to [accept a
          payment](https://stripe.com/docs/payments/accept-a-payment?ui=elements)
          and learn about how `client_secret` should be handled.
        type: optional<string>
        validation:
          maxLength: 5000
      confirmation_method:
        docs: >-
          Describes whether we can confirm this PaymentIntent automatically, or
          if it requires customer action to confirm the payment.
        type: PaymentIntentConfirmationMethod
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: >-
          ID of the Customer this PaymentIntent belongs to, if one exists.


          Payment methods attached to other Customers cannot be used with this
          PaymentIntent.


          If
          [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage)
          is set and this PaymentIntent's payment method is not `card_present`,
          then the payment method attaches to the Customer after the
          PaymentIntent has been confirmed and any required actions from the
          user are complete. If the payment method is `card_present` and isn't a
          digital wallet, then a
          [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card is created and attached to the
          Customer instead.
        type: optional<PaymentIntentCustomer>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: ID of the invoice that created this PaymentIntent, if it exists.
        type: optional<PaymentIntentInvoice>
      last_payment_error:
        docs: >-
          The payment error encountered in the previous PaymentIntent
          confirmation. It will be cleared if the PaymentIntent is later updated
          for any reason.
        type: optional<ApiErrors>
      latest_charge:
        docs: >-
          ID of the latest [Charge object](https://stripe.com/docs/api/charges)
          created by this PaymentIntent. This property is `null` until
          PaymentIntent confirmation is attempted.
        type: optional<PaymentIntentLatestCharge>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format. Learn more about
          [storing information in
          metadata](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
        type: map<string, string>
      next_action:
        docs: >-
          If present, this property tells you what actions you need to take in
          order for your customer to fulfill a payment using the provided
          source.
        type: optional<PaymentIntentNextAction>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payment_intent">
      on_behalf_of:
        docs: >-
          The account (if any) for which the funds of the PaymentIntent are
          intended. See the PaymentIntents [use case for connected
          accounts](https://stripe.com/docs/payments/connected-accounts) for
          details.
        type: optional<PaymentIntentOnBehalfOf>
      payment_method:
        docs: ID of the payment method used in this PaymentIntent.
        type: optional<PaymentIntentPaymentMethod>
      payment_method_configuration_details:
        docs: >-
          Information about the [payment method
          configuration](https://stripe.com/docs/api/payment_method_configurations)
          used for this PaymentIntent.
        type: optional<PaymentMethodConfigBizPaymentMethodConfigurationDetails>
      payment_method_options:
        docs: Payment-method-specific configuration for this PaymentIntent.
        type: optional<PaymentIntentPaymentMethodOptions>
      payment_method_types:
        docs: >-
          The list of payment method types (e.g. card) that this PaymentIntent
          is allowed to use.
        type: list<string>
      processing:
        docs: >-
          If present, this property tells you about the processing state of the
          payment.
        type: optional<PaymentIntentProcessing>
      receipt_email:
        docs: >-
          Email address that the receipt for the resulting payment will be sent
          to. If `receipt_email` is specified for a payment in live mode, a
          receipt will be sent regardless of your [email
          settings](https://dashboard.stripe.com/account/emails).
        type: optional<string>
        validation:
          maxLength: 5000
      review:
        docs: ID of the review associated with this PaymentIntent, if any.
        type: optional<PaymentIntentReview>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentSetupFutureUsage>
      shipping:
        docs: Shipping information for this PaymentIntent.
        type: optional<Shipping>
      source:
        docs: >-
          This is a legacy field that will be removed in the future. It is the
          ID of the Source object that is associated with this PaymentIntent, if
          one was supplied.
        type: optional<PaymentIntentSource>
      statement_descriptor:
        docs: >-
          Text that appears on the customer's statement as the statement
          descriptor for a non-card charge. This value overrides the account's
          default statement descriptor. For information about requirements,
          including the 22-character limit, see [the Statement Descriptor
          docs](https://docs.stripe.com/get-started/account/statement-descriptors).


          Setting this value for a card charge returns an error. For card
          charges, set the
          [statement_descriptor_suffix](https://docs.stripe.com/get-started/account/statement-descriptors#dynamic)
          instead.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_suffix:
        docs: >-
          Provides information about a card charge. Concatenated to the
          account's [statement descriptor
          prefix](https://docs.stripe.com/get-started/account/statement-descriptors#static)
          to form the complete statement descriptor that appears on the
          customer's statement.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          Status of this PaymentIntent, one of `requires_payment_method`,
          `requires_confirmation`, `requires_action`, `processing`,
          `requires_capture`, `canceled`, or `succeeded`. Read more about each
          PaymentIntent
          [status](https://stripe.com/docs/payments/intents#intent-statuses).
        type: PaymentIntentStatus
      transfer_data:
        docs: >-
          The data that automatically creates a Transfer after the payment
          finalizes. Learn more about the [use case for connected
          accounts](https://stripe.com/docs/payments/connected-accounts).
        type: optional<TransferData>
      transfer_group:
        docs: >-
          A string that identifies the resulting payment as part of a group.
          Learn more about the [use case for connected
          accounts](https://stripe.com/docs/connect/separate-charges-and-transfers).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentAmountCapturableUpdated:
    docs: >-
      Occurs when a PaymentIntent has funds to be captured. Check the
      `amount_capturable` property on the PaymentIntent to determine the amount
      that can be captured. You may capture the PaymentIntent with an
      `amount_to_capture` value up to the specified amount. [Learn more about
      capturing
      PaymentIntents.](https://docs.stripe.com/api/payment_intents/capture)
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentApplication:
    discriminated: false
    docs: ID of the Connect application that created the PaymentIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  PaymentIntentCanceled:
    docs: Occurs when a PaymentIntent is canceled.
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentCancellationReason:
    docs: >-
      Reason for cancellation of this PaymentIntent, either user-provided
      (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or
      generated by Stripe internally (`failed_invoice`, `void_invoice`, or
      `automatic`).
    enum:
      - abandoned
      - automatic
      - duplicate
      - failed_invoice
      - fraudulent
      - requested_by_customer
      - void_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentCaptureMethod:
    docs: Controls when the funds will be captured from the customer's account.
    enum:
      - automatic
      - automatic_async
      - manual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentCardProcessing:
    docs: ''
    properties:
      customer_notification:
        type: optional<PaymentIntentProcessingCustomerNotification>
    source:
      openapi: ../openapi.yaml
  PaymentIntentConfirmationMethod:
    docs: >-
      Describes whether we can confirm this PaymentIntent automatically, or if
      it requires customer action to confirm the payment.
    enum:
      - automatic
      - manual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentCreated:
    docs: Occurs when a new PaymentIntent is created.
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentCustomer:
    discriminated: false
    docs: >-
      ID of the Customer this PaymentIntent belongs to, if one exists.


      Payment methods attached to other Customers cannot be used with this
      PaymentIntent.


      If
      [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage)
      is set and this PaymentIntent's payment method is not `card_present`, then
      the payment method attaches to the Customer after the PaymentIntent has
      been confirmed and any required actions from the user are complete. If the
      payment method is `card_present` and isn't a digital wallet, then a
      [generated_card](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card is created and attached to the
      Customer instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  PaymentIntentInvoice:
    discriminated: false
    docs: ID of the invoice that created this PaymentIntent, if it exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  PaymentIntentLatestCharge:
    discriminated: false
    docs: >-
      ID of the latest [Charge object](https://stripe.com/docs/api/charges)
      created by this PaymentIntent. This property is `null` until PaymentIntent
      confirmation is attempted.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  PaymentIntentNextAction:
    docs: ''
    properties:
      alipay_handle_redirect:
        type: optional<PaymentIntentNextActionAlipayHandleRedirect>
      boleto_display_details:
        type: optional<PaymentIntentNextActionBoleto>
      card_await_notification:
        type: optional<PaymentIntentNextActionCardAwaitNotification>
      cashapp_handle_redirect_or_display_qr_code:
        type: optional<PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode>
      display_bank_transfer_instructions:
        type: optional<PaymentIntentNextActionDisplayBankTransferInstructions>
      konbini_display_details:
        type: optional<PaymentIntentNextActionKonbini>
      multibanco_display_details:
        type: optional<PaymentIntentNextActionDisplayMultibancoDetails>
      oxxo_display_details:
        type: optional<PaymentIntentNextActionDisplayOxxoDetails>
      paynow_display_qr_code:
        type: optional<PaymentIntentNextActionPaynowDisplayQrCode>
      pix_display_qr_code:
        type: optional<PaymentIntentNextActionPixDisplayQrCode>
      promptpay_display_qr_code:
        type: optional<PaymentIntentNextActionPromptpayDisplayQrCode>
      redirect_to_url:
        type: optional<PaymentIntentNextActionRedirectToUrl>
      swish_handle_redirect_or_display_qr_code:
        type: optional<PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode>
      type:
        docs: >-
          Type of the next action to perform, one of `redirect_to_url`,
          `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or
          `verify_with_microdeposits`.
        type: string
        validation:
          maxLength: 5000
      use_stripe_sdk:
        docs: >-
          When confirming a PaymentIntent with Stripe.js, Stripe.js depends on
          the contents of this dictionary to invoke authentication flows. The
          shape of the contents is subject to change and is only intended to be
          used by Stripe.js.
        type: optional<map<string, unknown>>
      verify_with_microdeposits:
        type: optional<PaymentIntentNextActionVerifyWithMicrodeposits>
      wechat_pay_display_qr_code:
        type: optional<PaymentIntentNextActionWechatPayDisplayQrCode>
      wechat_pay_redirect_to_android_app:
        type: optional<PaymentIntentNextActionWechatPayRedirectToAndroidApp>
      wechat_pay_redirect_to_ios_app:
        type: optional<PaymentIntentNextActionWechatPayRedirectToIosApp>
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionAlipayHandleRedirect:
    docs: ''
    properties:
      native_data:
        docs: >-
          The native data to be used with Alipay SDK you must redirect your
          customer to in order to authenticate the payment in an Android App.
        type: optional<string>
        validation:
          maxLength: 5000
      native_url:
        docs: >-
          The native URL you must redirect your customer to in order to
          authenticate the payment in an iOS App.
        type: optional<string>
        validation:
          maxLength: 5000
      return_url:
        docs: >-
          If the customer does not exit their browser while authenticating, they
          will be redirected to this specified URL after completion.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: >-
          The URL you must redirect your customer to in order to authenticate
          the payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionBoleto:
    docs: ''
    properties:
      expires_at:
        docs: The timestamp after which the boleto expires.
        type: optional<integer>
      hosted_voucher_url:
        docs: >-
          The URL to the hosted boleto voucher page, which allows customers to
          view the boleto voucher.
        type: optional<string>
        validation:
          maxLength: 5000
      number:
        docs: The boleto number.
        type: optional<string>
        validation:
          maxLength: 5000
      pdf:
        docs: The URL to the downloadable boleto voucher PDF.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionCardAwaitNotification:
    docs: ''
    properties:
      charge_attempt_at:
        docs: >-
          The time that payment will be attempted. If customer approval is
          required, they need to provide approval before this time.
        type: optional<integer>
      customer_approval_required:
        docs: >-
          For payments greater than INR 15000, the customer must provide
          explicit approval of the payment with their bank. For payments of
          lower amount, no customer action is required.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode:
    docs: ''
    properties:
      hosted_instructions_url:
        docs: >-
          The URL to the hosted Cash App Pay instructions page, which allows
          customers to view the QR code, and supports QR code refreshing on
          expiration.
        type: string
        validation:
          maxLength: 5000
      mobile_auth_url:
        docs: The url for mobile redirect based auth
        type: string
        validation:
          maxLength: 5000
      qr_code:
        type: PaymentIntentNextActionCashappQrCode
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionCashappQrCode:
    docs: ''
    properties:
      expires_at:
        docs: The date (unix timestamp) when the QR code expires.
        type: integer
      image_url_png:
        docs: The image_url_png string used to render QR code
        type: string
        validation:
          maxLength: 5000
      image_url_svg:
        docs: The image_url_svg string used to render QR code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionDisplayBankTransferInstructions:
    docs: ''
    properties:
      amount_remaining:
        docs: >-
          The remaining amount that needs to be transferred to complete the
          payment.
        type: optional<integer>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: optional<string>
      financial_addresses:
        docs: >-
          A list of financial addresses that can be used to fund the customer
          balance
        type: optional<list<FundingInstructionsBankTransferFinancialAddress>>
      hosted_instructions_url:
        docs: >-
          A link to a hosted page that guides your customer through completing
          the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: >-
          A string identifying this payment. Instruct your customer to include
          this code in the reference or memo field of their bank transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: Type of bank transfer
        type: PaymentIntentNextActionDisplayBankTransferInstructionsType
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionDisplayBankTransferInstructionsType:
    docs: Type of bank transfer
    enum:
      - eu_bank_transfer
      - gb_bank_transfer
      - jp_bank_transfer
      - mx_bank_transfer
      - us_bank_transfer
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionDisplayMultibancoDetails:
    docs: ''
    properties:
      entity:
        docs: Entity number associated with this Multibanco payment.
        type: optional<string>
        validation:
          maxLength: 5000
      expires_at:
        docs: The timestamp at which the Multibanco voucher expires.
        type: optional<integer>
      hosted_voucher_url:
        docs: >-
          The URL for the hosted Multibanco voucher page, which allows customers
          to view a Multibanco voucher.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: Reference number associated with this Multibanco payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionDisplayOxxoDetails:
    docs: ''
    properties:
      expires_after:
        docs: The timestamp after which the OXXO voucher expires.
        type: optional<integer>
      hosted_voucher_url:
        docs: >-
          The URL for the hosted OXXO voucher page, which allows customers to
          view and print an OXXO voucher.
        type: optional<string>
        validation:
          maxLength: 5000
      number:
        docs: OXXO reference number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbini:
    docs: ''
    properties:
      expires_at:
        docs: The timestamp at which the pending Konbini payment expires.
        type: integer
      hosted_voucher_url:
        docs: >-
          The URL for the Konbini payment instructions page, which allows
          customers to view and print a Konbini voucher.
        type: optional<string>
        validation:
          maxLength: 5000
      stores:
        type: PaymentIntentNextActionKonbiniStores
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbiniFamilymart:
    docs: ''
    properties:
      confirmation_number:
        docs: The confirmation number.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_code:
        docs: The payment code.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbiniLawson:
    docs: ''
    properties:
      confirmation_number:
        docs: The confirmation number.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_code:
        docs: The payment code.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbiniMinistop:
    docs: ''
    properties:
      confirmation_number:
        docs: The confirmation number.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_code:
        docs: The payment code.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbiniSeicomart:
    docs: ''
    properties:
      confirmation_number:
        docs: The confirmation number.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_code:
        docs: The payment code.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionKonbiniStores:
    docs: ''
    properties:
      familymart:
        docs: FamilyMart instruction details.
        type: optional<PaymentIntentNextActionKonbiniFamilymart>
      lawson:
        docs: Lawson instruction details.
        type: optional<PaymentIntentNextActionKonbiniLawson>
      ministop:
        docs: Ministop instruction details.
        type: optional<PaymentIntentNextActionKonbiniMinistop>
      seicomart:
        docs: Seicomart instruction details.
        type: optional<PaymentIntentNextActionKonbiniSeicomart>
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionPaynowDisplayQrCode:
    docs: ''
    properties:
      data:
        docs: >-
          The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
        validation:
          maxLength: 5000
      hosted_instructions_url:
        docs: >-
          The URL to the hosted PayNow instructions page, which allows customers
          to view the PayNow QR code.
        type: optional<string>
        validation:
          maxLength: 5000
      image_url_png:
        docs: The image_url_png string used to render QR code
        type: string
        validation:
          maxLength: 5000
      image_url_svg:
        docs: The image_url_svg string used to render QR code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionPixDisplayQrCode:
    docs: ''
    properties:
      data:
        docs: >-
          The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: optional<string>
        validation:
          maxLength: 5000
      expires_at:
        docs: The date (unix timestamp) when the PIX expires.
        type: optional<integer>
      hosted_instructions_url:
        docs: >-
          The URL to the hosted pix instructions page, which allows customers to
          view the pix QR code.
        type: optional<string>
        validation:
          maxLength: 5000
      image_url_png:
        docs: The image_url_png string used to render png QR code
        type: optional<string>
        validation:
          maxLength: 5000
      image_url_svg:
        docs: The image_url_svg string used to render svg QR code
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionPromptpayDisplayQrCode:
    docs: ''
    properties:
      data:
        docs: >-
          The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
        validation:
          maxLength: 5000
      hosted_instructions_url:
        docs: >-
          The URL to the hosted PromptPay instructions page, which allows
          customers to view the PromptPay QR code.
        type: string
        validation:
          maxLength: 5000
      image_url_png:
        docs: >-
          The PNG path used to render the QR code, can be used as the source in
          an HTML img tag
        type: string
        validation:
          maxLength: 5000
      image_url_svg:
        docs: >-
          The SVG path used to render the QR code, can be used as the source in
          an HTML img tag
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionRedirectToUrl:
    docs: ''
    properties:
      return_url:
        docs: >-
          If the customer does not exit their browser while authenticating, they
          will be redirected to this specified URL after completion.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: >-
          The URL you must redirect your customer to in order to authenticate
          the payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionSwishHandleRedirectOrDisplayQrCode:
    docs: ''
    properties:
      hosted_instructions_url:
        docs: >-
          The URL to the hosted Swish instructions page, which allows customers
          to view the QR code.
        type: string
        validation:
          maxLength: 5000
      mobile_auth_url:
        docs: >-
          The url for mobile redirect based auth (for internal use only and not
          typically available in standard API requests).
        type: string
        validation:
          maxLength: 5000
      qr_code:
        type: PaymentIntentNextActionSwishQrCode
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionSwishQrCode:
    docs: ''
    properties:
      data:
        docs: >-
          The raw data string used to generate QR code, it should be used
          together with QR code library.
        type: string
        validation:
          maxLength: 5000
      image_url_png:
        docs: The image_url_png string used to render QR code
        type: string
        validation:
          maxLength: 5000
      image_url_svg:
        docs: The image_url_svg string used to render QR code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionVerifyWithMicrodeposits:
    docs: ''
    properties:
      arrival_date:
        docs: The timestamp when the microdeposits are expected to land.
        type: integer
      hosted_verification_url:
        docs: >-
          The URL for the hosted verification page, which allows customers to
          verify their bank account.
        type: string
        validation:
          maxLength: 5000
      microdeposit_type:
        docs: >-
          The type of the microdeposit sent to the customer. Used to distinguish
          between different verification methods.
        type: >-
          optional<PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositType>
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionVerifyWithMicrodepositsMicrodepositType:
    docs: >-
      The type of the microdeposit sent to the customer. Used to distinguish
      between different verification methods.
    enum:
      - amounts
      - descriptor_code
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionWechatPayDisplayQrCode:
    docs: ''
    properties:
      data:
        docs: The data being used to generate QR code
        type: string
        validation:
          maxLength: 5000
      hosted_instructions_url:
        docs: >-
          The URL to the hosted WeChat Pay instructions page, which allows
          customers to view the WeChat Pay QR code.
        type: string
        validation:
          maxLength: 5000
      image_data_url:
        docs: The base64 image data for a pre-generated QR code
        type: string
        validation:
          maxLength: 5000
      image_url_png:
        docs: The image_url_png string used to render QR code
        type: string
        validation:
          maxLength: 5000
      image_url_svg:
        docs: The image_url_svg string used to render QR code
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionWechatPayRedirectToAndroidApp:
    docs: ''
    properties:
      app_id:
        docs: app_id is the APP ID registered on WeChat open platform
        type: string
        validation:
          maxLength: 5000
      nonce_str:
        docs: nonce_str is a random string
        type: string
        validation:
          maxLength: 5000
      package:
        docs: package is static value
        type: string
        validation:
          maxLength: 5000
      partner_id:
        docs: an unique merchant ID assigned by WeChat Pay
        type: string
        validation:
          maxLength: 5000
      prepay_id:
        docs: an unique trading ID assigned by WeChat Pay
        type: string
        validation:
          maxLength: 5000
      sign:
        docs: A signature
        type: string
        validation:
          maxLength: 5000
      timestamp:
        docs: Specifies the current time in epoch format
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentNextActionWechatPayRedirectToIosApp:
    docs: ''
    properties:
      native_url:
        docs: An universal link that redirect to WeChat Pay app
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) for which the funds of the PaymentIntent are
      intended. See the PaymentIntents [use case for connected
      accounts](https://stripe.com/docs/payments/connected-accounts) for
      details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  PaymentIntentPartiallyFunded:
    docs: >-
      Occurs when funds are applied to a customer_balance PaymentIntent and the
      'amount_remaining' changes.
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentFailed:
    docs: >-
      Occurs when a PaymentIntent has failed the attempt to create a payment
      method or a payment.
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethod:
    discriminated: false
    docs: ID of the payment method used in this PaymentIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  PaymentIntentPaymentMethodOptions:
    docs: ''
    properties:
      acss_debit:
        type: optional<PaymentIntentPaymentMethodOptionsAcssDebit>
      affirm:
        type: optional<PaymentMethodOptionsAffirm>
      afterpay_clearpay:
        type: optional<PaymentMethodOptionsAfterpayClearpay>
      alipay:
        type: optional<PaymentMethodOptionsAlipay>
      alma:
        type: optional<PaymentMethodOptionsAlma>
      amazon_pay:
        type: optional<PaymentMethodOptionsAmazonPay>
      au_becs_debit:
        type: optional<PaymentIntentPaymentMethodOptionsAuBecsDebit>
      bacs_debit:
        type: optional<PaymentIntentPaymentMethodOptionsBacsDebit>
      bancontact:
        type: optional<PaymentMethodOptionsBancontact>
      blik:
        type: optional<PaymentIntentPaymentMethodOptionsBlik>
      boleto:
        type: optional<PaymentMethodOptionsBoleto>
      card:
        type: optional<PaymentIntentPaymentMethodOptionsCard>
      card_present:
        type: optional<PaymentMethodOptionsCardPresent>
      cashapp:
        type: optional<PaymentMethodOptionsCashapp>
      customer_balance:
        type: optional<PaymentMethodOptionsCustomerBalance>
      eps:
        type: optional<PaymentIntentPaymentMethodOptionsEps>
      fpx:
        type: optional<PaymentMethodOptionsFpx>
      giropay:
        type: optional<PaymentMethodOptionsGiropay>
      grabpay:
        type: optional<PaymentMethodOptionsGrabpay>
      ideal:
        type: optional<PaymentMethodOptionsIdeal>
      interac_present:
        type: optional<PaymentMethodOptionsInteracPresent>
      kakao_pay:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsKakaoPayPaymentMethodOptions>
      klarna:
        type: optional<PaymentMethodOptionsKlarna>
      konbini:
        type: optional<PaymentMethodOptionsKonbini>
      kr_card:
        type: optional<PaymentMethodOptionsKrCard>
      link:
        type: optional<PaymentIntentPaymentMethodOptionsLink>
      mobilepay:
        type: optional<PaymentIntentPaymentMethodOptionsMobilepay>
      multibanco:
        type: optional<PaymentMethodOptionsMultibanco>
      naver_pay:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsNaverPayPaymentMethodOptions>
      oxxo:
        type: optional<PaymentMethodOptionsOxxo>
      p24:
        type: optional<PaymentMethodOptionsP24>
      pay_by_bank:
        type: optional<PaymentMethodOptionsPayByBank>
      payco:
        type: optional<PaymentFlowsPrivatePaymentMethodsPaycoPaymentMethodOptions>
      paynow:
        type: optional<PaymentMethodOptionsPaynow>
      paypal:
        type: optional<PaymentMethodOptionsPaypal>
      pix:
        type: optional<PaymentMethodOptionsPix>
      promptpay:
        type: optional<PaymentMethodOptionsPromptpay>
      revolut_pay:
        type: optional<PaymentMethodOptionsRevolutPay>
      samsung_pay:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsSamsungPayPaymentMethodOptions>
      sepa_debit:
        type: optional<PaymentIntentPaymentMethodOptionsSepaDebit>
      sofort:
        type: optional<PaymentMethodOptionsSofort>
      swish:
        type: optional<PaymentIntentPaymentMethodOptionsSwish>
      twint:
        type: optional<PaymentMethodOptionsTwint>
      us_bank_account:
        type: optional<PaymentIntentPaymentMethodOptionsUsBankAccount>
      wechat_pay:
        type: optional<PaymentMethodOptionsWechatPay>
      zip:
        type: optional<PaymentMethodOptionsZip>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsAcssDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebit>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsAcssDebitSetupFutureUsage>
      verification_method:
        docs: Bank account verification method.
        type: optional<PaymentIntentPaymentMethodOptionsAcssDebitVerificationMethod>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsAcssDebitSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsAcssDebitVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsAuBecsDebit:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsAuBecsDebitSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsAuBecsDebitSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsBacsDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<PaymentIntentPaymentMethodOptionsMandateOptionsBacsDebit>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsBacsDebitSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsBacsDebitSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsBlik:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCard:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      installments:
        docs: >-
          Installment details for this payment (Mexico only).


          For more information, see the [installments integration
          guide](https://stripe.com/docs/payments/installments).
        type: optional<PaymentMethodOptionsCardInstallments>
      mandate_options:
        docs: >-
          Configuration options for setting up an eMandate for cards issued in
          India.
        type: optional<PaymentMethodOptionsCardMandateOptions>
      network:
        docs: >-
          Selected network to process this payment intent on. Depends on the
          available networks of the card attached to the payment intent. Can be
          only set confirm-time.
        type: optional<PaymentIntentPaymentMethodOptionsCardNetwork>
      request_extended_authorization:
        docs: >-
          Request ability to [capture beyond the standard authorization validity
          window](https://stripe.com/docs/payments/extended-authorization) for
          this PaymentIntent.
        type: >-
          optional<PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorization>
      request_incremental_authorization:
        docs: >-
          Request ability to [increment the
          authorization](https://stripe.com/docs/payments/incremental-authorization)
          for this PaymentIntent.
        type: >-
          optional<PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorization>
      request_multicapture:
        docs: >-
          Request ability to make [multiple
          captures](https://stripe.com/docs/payments/multicapture) for this
          PaymentIntent.
        type: optional<PaymentIntentPaymentMethodOptionsCardRequestMulticapture>
      request_overcapture:
        docs: >-
          Request ability to
          [overcapture](https://stripe.com/docs/payments/overcapture) for this
          PaymentIntent.
        type: optional<PaymentIntentPaymentMethodOptionsCardRequestOvercapture>
      request_three_d_secure:
        docs: >-
          We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and
          [other
          requirements](https://stripe.com/docs/strong-customer-authentication).
          However, if you wish to request 3D Secure based on logic from your own
          fraud engine, provide this option. If not provided, this value
          defaults to `automatic`. Read our guide on [manually requesting 3D
          Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar
          and our SCA Engine.
        type: optional<PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure>
      require_cvc_recollection:
        docs: >-
          When enabled, using a card that is attached to a customer will require
          the CVC to be provided again (i.e. using the cvc_token parameter).
        type: optional<boolean>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsCardSetupFutureUsage>
      statement_descriptor_suffix_kana:
        docs: >-
          Provides information about a card payment that customers see on their
          statements. Concatenated with the Kana prefix (shortened Kana
          descriptor) or Kana statement descriptor that’s set on the account to
          form the complete statement descriptor. Maximum 22 characters. On card
          statements, the *concatenation* of both prefix and suffix (including
          separators) will appear truncated to 22 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_suffix_kanji:
        docs: >-
          Provides information about a card payment that customers see on their
          statements. Concatenated with the Kanji prefix (shortened Kanji
          descriptor) or Kanji statement descriptor that’s set on the account to
          form the complete statement descriptor. Maximum 17 characters. On card
          statements, the *concatenation* of both prefix and suffix (including
          separators) will appear truncated to 17 characters.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardNetwork:
    docs: >-
      Selected network to process this payment intent on. Depends on the
      available networks of the card attached to the payment intent. Can be only
      set confirm-time.
    enum:
      - amex
      - cartes_bancaires
      - diners
      - discover
      - eftpos_au
      - girocard
      - interac
      - jcb
      - link
      - mastercard
      - unionpay
      - unknown
      - visa
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardRequestExtendedAuthorization:
    docs: >-
      Request ability to [capture beyond the standard authorization validity
      window](https://stripe.com/docs/payments/extended-authorization) for this
      PaymentIntent.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardRequestIncrementalAuthorization:
    docs: >-
      Request ability to [increment the
      authorization](https://stripe.com/docs/payments/incremental-authorization)
      for this PaymentIntent.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardRequestMulticapture:
    docs: >-
      Request ability to make [multiple
      captures](https://stripe.com/docs/payments/multicapture) for this
      PaymentIntent.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardRequestOvercapture:
    docs: >-
      Request ability to
      [overcapture](https://stripe.com/docs/payments/overcapture) for this
      PaymentIntent.
    enum:
      - if_available
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardRequestThreeDSecure:
    docs: >-
      We strongly recommend that you rely on our SCA Engine to automatically
      prompt your customers for authentication based on risk level and [other
      requirements](https://stripe.com/docs/strong-customer-authentication).
      However, if you wish to request 3D Secure based on logic from your own
      fraud engine, provide this option. If not provided, this value defaults to
      `automatic`. Read our guide on [manually requesting 3D
      Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
      for more information on how this configuration interacts with Radar and
      our SCA Engine.
    enum:
      - any
      - automatic
      - challenge
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsCardSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsEps:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsLink:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      persistent_token:
        docs: >-
          [Deprecated] This is a legacy parameter that no longer has any
          function.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsLinkSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsLinkSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebit:
    docs: ''
    properties:
      custom_mandate_url:
        docs: A URL for custom mandate text
        type: optional<string>
        validation:
          maxLength: 5000
      interval_description:
        docs: >-
          Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_schedule:
        docs: Payment schedule for the mandate.
        type: >-
          optional<PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebitPaymentSchedule>
      transaction_type:
        docs: Transaction type of the mandate.
        type: >-
          optional<PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebitTransactionType>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebitPaymentSchedule:
    docs: Payment schedule for the mandate.
    enum:
      - combined
      - interval
      - sporadic
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMandateOptionsAcssDebitTransactionType:
    docs: Transaction type of the mandate.
    enum:
      - business
      - personal
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMandateOptionsBacsDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'DDIC' or 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMandateOptionsSepaDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsMobilepay:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsSepaDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<PaymentIntentPaymentMethodOptionsMandateOptionsSepaDebit>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentIntentPaymentMethodOptionsSepaDebitSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsSepaDebitSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsSwish:
    docs: ''
    properties:
      reference:
        docs: A reference for this payment to be displayed in the Swish app.
        type: optional<string>
        validation:
          maxLength: 35
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsUsBankAccount:
    docs: ''
    properties:
      financial_connections:
        type: optional<LinkedAccountOptionsUsBankAccount>
      mandate_options:
        type: optional<PaymentMethodOptionsUsBankAccountMandateOptions>
      preferred_settlement_speed:
        docs: Preferred transaction settlement speed
        type: >-
          optional<PaymentIntentPaymentMethodOptionsUsBankAccountPreferredSettlementSpeed>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: >-
          optional<PaymentIntentPaymentMethodOptionsUsBankAccountSetupFutureUsage>
      verification_method:
        docs: Bank account verification method.
        type: >-
          optional<PaymentIntentPaymentMethodOptionsUsBankAccountVerificationMethod>
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsUsBankAccountPreferredSettlementSpeed:
    docs: Preferred transaction settlement speed
    enum:
      - fastest
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsUsBankAccountSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentPaymentMethodOptionsUsBankAccountVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentProcessing:
    docs: ''
    properties:
      card:
        type: optional<PaymentIntentCardProcessing>
      type:
        docs: >-
          Type of the payment method for which payment is in `processing` state,
          one of `card`.
        type: literal<"card">
    source:
      openapi: ../openapi.yaml
  PaymentIntentProcessingCustomerNotification:
    docs: ''
    properties:
      approval_requested:
        docs: >-
          Whether customer approval has been requested for this payment. For
          payments greater than INR 15000 or mandate amount, the customer must
          provide explicit approval of the payment with their bank.
        type: optional<boolean>
      completes_at:
        docs: >-
          If customer approval is required, they need to provide approval before
          this time.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PaymentIntentRequiresAction:
    docs: Occurs when a PaymentIntent transitions to requires_action state
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentReview:
    discriminated: false
    docs: ID of the review associated with this PaymentIntent, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Review
  PaymentIntentSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentSource:
    discriminated: false
    docs: >-
      This is a legacy field that will be removed in the future. It is the ID of
      the Source object that is associated with this PaymentIntent, if one was
      supplied.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentSource
      - type: DeletedPaymentSource
  PaymentIntentStatus:
    docs: >-
      Status of this PaymentIntent, one of `requires_payment_method`,
      `requires_confirmation`, `requires_action`, `processing`,
      `requires_capture`, `canceled`, or `succeeded`. Read more about each
      PaymentIntent
      [status](https://stripe.com/docs/payments/intents#intent-statuses).
    enum:
      - canceled
      - processing
      - requires_action
      - requires_capture
      - requires_confirmation
      - requires_payment_method
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentSucceeded:
    docs: Occurs when a PaymentIntent has successfully completed payment.
    properties:
      object:
        type: PaymentIntent
    source:
      openapi: ../openapi.yaml
  PaymentIntentTypeSpecificPaymentMethodOptionsClient:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: >-
          optional<PaymentIntentTypeSpecificPaymentMethodOptionsClientCaptureMethod>
      installments:
        type: optional<PaymentFlowsInstallmentOptions>
      request_incremental_authorization_support:
        docs: >-
          Request ability to
          [increment](https://stripe.com/docs/terminal/features/incremental-authorizations)
          this PaymentIntent if the combination of MCC and card brand is
          eligible. Check
          [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported)
          in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm)
          response to verify support.
        type: optional<boolean>
      require_cvc_recollection:
        docs: >-
          When enabled, using a card that is attached to a customer will require
          the CVC to be provided again (i.e. using the cvc_token parameter).
        type: optional<boolean>
      routing:
        type: optional<PaymentMethodOptionsCardPresentRouting>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: >-
          optional<PaymentIntentTypeSpecificPaymentMethodOptionsClientSetupFutureUsage>
      verification_method:
        docs: Bank account verification method.
        type: >-
          optional<PaymentIntentTypeSpecificPaymentMethodOptionsClientVerificationMethod>
    source:
      openapi: ../openapi.yaml
  PaymentIntentTypeSpecificPaymentMethodOptionsClientCaptureMethod:
    docs: Controls when the funds will be captured from the customer's account.
    enum:
      - manual
      - manual_preferred
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentTypeSpecificPaymentMethodOptionsClientSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentIntentTypeSpecificPaymentMethodOptionsClientVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLink:
    docs: >-
      A payment link is a shareable URL that will take your customers to a
      hosted payment page. A payment link can be shared and used multiple times.


      When a customer opens a payment link it will open a new [checkout
      session](https://stripe.com/docs/api/checkout/sessions) to render the
      payment page. You can use [checkout session
      events](https://stripe.com/docs/api/events/types#event_types-checkout.session.completed)
      to track payments through payment links.


      Related guide: [Payment Links API](https://stripe.com/docs/payment-links)
    properties:
      active:
        docs: >-
          Whether the payment link's `url` is active. If `false`, customers
          visiting the URL will be shown a page saying that the link has been
          deactivated.
        type: boolean
      after_completion:
        type: PaymentLinksResourceAfterCompletion
      allow_promotion_codes:
        docs: Whether user redeemable promotion codes are enabled.
        type: boolean
      application:
        docs: The ID of the Connect application that created the Payment Link.
        type: optional<PaymentLinkApplication>
      application_fee_amount:
        docs: >-
          The amount of the application fee (if any) that will be requested to
          be applied to the payment and transferred to the application owner's
          Stripe account.
        type: optional<integer>
      application_fee_percent:
        docs: >-
          This represents the percentage of the subscription invoice total that
          will be transferred to the application owner's Stripe account.
        type: optional<double>
      automatic_tax:
        type: PaymentLinksResourceAutomaticTax
      billing_address_collection:
        docs: >-
          Configuration for collecting the customer's billing address. Defaults
          to `auto`.
        type: PaymentLinkBillingAddressCollection
      consent_collection:
        docs: >-
          When set, provides configuration to gather active consent from
          customers.
        type: optional<PaymentLinksResourceConsentCollection>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      custom_fields:
        docs: >-
          Collect additional information from your customer using custom fields.
          Up to 3 fields are supported.
        type: list<PaymentLinksResourceCustomFields>
      custom_text:
        type: PaymentLinksResourceCustomText
      customer_creation:
        docs: Configuration for Customer creation during checkout.
        type: PaymentLinkCustomerCreation
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      inactive_message:
        docs: >-
          The custom message to be displayed to a customer when a payment link
          is no longer active.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_creation:
        docs: Configuration for creating invoice for payment mode payment links.
        type: optional<PaymentLinksResourceInvoiceCreation>
      line_items:
        docs: The line items representing what is being sold.
        type: optional<PaymentLinkLineItems>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payment_link">
      on_behalf_of:
        docs: >-
          The account on behalf of which to charge. See the [Connect
          documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
          for details.
        type: optional<PaymentLinkOnBehalfOf>
      payment_intent_data:
        docs: >-
          Indicates the parameters to be passed to PaymentIntent creation during
          checkout.
        type: optional<PaymentLinksResourcePaymentIntentData>
      payment_method_collection:
        docs: >-
          Configuration for collecting a payment method during checkout.
          Defaults to `always`.
        type: PaymentLinkPaymentMethodCollection
      payment_method_types:
        docs: >-
          The list of payment method types that customers can use. When `null`,
          Stripe will dynamically show relevant payment methods you've enabled
          in your [payment method
          settings](https://dashboard.stripe.com/settings/payment_methods).
        type: optional<list<PaymentLinkPaymentMethodTypesItem>>
      phone_number_collection:
        type: PaymentLinksResourcePhoneNumberCollection
      restrictions:
        docs: Settings that restrict the usage of a payment link.
        type: optional<PaymentLinksResourceRestrictions>
      shipping_address_collection:
        docs: Configuration for collecting the customer's shipping address.
        type: optional<PaymentLinksResourceShippingAddressCollection>
      shipping_options:
        docs: The shipping rate options applied to the session.
        type: list<PaymentLinksResourceShippingOption>
      submit_type:
        docs: >-
          Indicates the type of transaction being performed which customizes
          relevant text on the page, such as the submit button.
        type: PaymentLinkSubmitType
      subscription_data:
        docs: >-
          When creating a subscription, the specified configuration data will be
          used. There must be at least one line item with a recurring price to
          use `subscription_data`.
        type: optional<PaymentLinksResourceSubscriptionData>
      tax_id_collection:
        type: PaymentLinksResourceTaxIdCollection
      transfer_data:
        docs: >-
          The account (if any) the payments will be attributed to for tax
          reporting, and where funds from each payment will be transferred to.
        type: optional<PaymentLinksResourceTransferData>
      url:
        docs: The public URL that can be shared with customers.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinkApplication:
    discriminated: false
    docs: The ID of the Connect application that created the Payment Link.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  PaymentLinkBillingAddressCollection:
    docs: >-
      Configuration for collecting the customer's billing address. Defaults to
      `auto`.
    enum:
      - auto
      - required
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinkCreated:
    docs: Occurs when a payment link is created.
    properties:
      object:
        type: PaymentLink
    source:
      openapi: ../openapi.yaml
  PaymentLinkCustomerCreation:
    docs: Configuration for Customer creation during checkout.
    enum:
      - always
      - if_required
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinkLineItems:
    docs: The line items representing what is being sold.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Item>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinkOnBehalfOf:
    discriminated: false
    docs: >-
      The account on behalf of which to charge. See the [Connect
      documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  PaymentLinkPaymentMethodCollection:
    docs: >-
      Configuration for collecting a payment method during checkout. Defaults to
      `always`.
    enum:
      - always
      - if_required
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinkPaymentMethodTypesItem:
    enum:
      - affirm
      - afterpay_clearpay
      - alipay
      - alma
      - au_becs_debit
      - bacs_debit
      - bancontact
      - blik
      - boleto
      - card
      - cashapp
      - eps
      - fpx
      - giropay
      - grabpay
      - ideal
      - klarna
      - konbini
      - link
      - mobilepay
      - multibanco
      - oxxo
      - p24
      - pay_by_bank
      - paynow
      - paypal
      - pix
      - promptpay
      - sepa_debit
      - sofort
      - swish
      - twint
      - us_bank_account
      - wechat_pay
      - zip
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceAfterCompletion:
    docs: ''
    properties:
      hosted_confirmation:
        type: optional<PaymentLinksResourceCompletionBehaviorConfirmationPage>
      redirect:
        type: optional<PaymentLinksResourceCompletionBehaviorRedirect>
      type:
        docs: The specified behavior after the purchase is complete.
        type: PaymentLinksResourceAfterCompletionType
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceAfterCompletionType:
    docs: The specified behavior after the purchase is complete.
    enum:
      - hosted_confirmation
      - redirect
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceAutomaticTax:
    docs: ''
    properties:
      enabled:
        docs: >-
          If `true`, tax will be calculated automatically using the customer's
          location.
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCompletedSessions:
    docs: ''
    properties:
      count:
        docs: >-
          The current number of checkout sessions that have been completed on
          the payment link which count towards the `completed_sessions`
          restriction to be met.
        type: integer
      limit:
        docs: >-
          The maximum number of checkout sessions that can be completed for the
          `completed_sessions` restriction to be met.
        type: integer
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCompletionBehaviorConfirmationPage:
    docs: ''
    properties:
      custom_message:
        docs: >-
          The custom message that is displayed to the customer after the
          purchase is complete.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCompletionBehaviorRedirect:
    docs: ''
    properties:
      url:
        docs: >-
          The URL the customer will be redirected to after the purchase is
          complete.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceConsentCollection:
    docs: ''
    properties:
      payment_method_reuse_agreement:
        docs: >-
          Settings related to the payment method reuse text shown in the
          Checkout UI.
        type: optional<PaymentLinksResourcePaymentMethodReuseAgreement>
      promotions:
        docs: >-
          If set to `auto`, enables the collection of customer consent for
          promotional communications.
        type: optional<PaymentLinksResourceConsentCollectionPromotions>
      terms_of_service:
        docs: >-
          If set to `required`, it requires cutomers to accept the terms of
          service before being able to pay. If set to `none`, customers won't be
          shown a checkbox to accept the terms of service.
        type: optional<PaymentLinksResourceConsentCollectionTermsOfService>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceConsentCollectionPromotions:
    docs: >-
      If set to `auto`, enables the collection of customer consent for
      promotional communications.
    enum:
      - auto
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceConsentCollectionTermsOfService:
    docs: >-
      If set to `required`, it requires cutomers to accept the terms of service
      before being able to pay. If set to `none`, customers won't be shown a
      checkbox to accept the terms of service.
    enum:
      - none
      - required
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFields:
    docs: ''
    properties:
      dropdown:
        type: optional<PaymentLinksResourceCustomFieldsDropdown>
      key:
        docs: >-
          String of your choice that your integration can use to reconcile this
          field. Must be unique to this field, alphanumeric, and up to 200
          characters.
        type: string
        validation:
          maxLength: 5000
      label:
        type: PaymentLinksResourceCustomFieldsLabel
      numeric:
        type: optional<PaymentLinksResourceCustomFieldsNumeric>
      optional:
        docs: >-
          Whether the customer is required to complete the field before
          completing the Checkout Session. Defaults to `false`.
        type: boolean
      text:
        type: optional<PaymentLinksResourceCustomFieldsText>
      type:
        docs: The type of the field.
        type: PaymentLinksResourceCustomFieldsType
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsDropdown:
    docs: ''
    properties:
      options:
        docs: >-
          The options available for the customer to select. Up to 200 options
          allowed.
        type: list<PaymentLinksResourceCustomFieldsDropdownOption>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsDropdownOption:
    docs: ''
    properties:
      label:
        docs: >-
          The label for the option, displayed to the customer. Up to 100
          characters.
        type: string
        validation:
          maxLength: 5000
      value:
        docs: >-
          The value for this option, not displayed to the customer, used by your
          integration to reconcile the option selected by the customer. Must be
          unique to this option, alphanumeric, and up to 100 characters.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsLabel:
    docs: ''
    properties:
      custom:
        docs: >-
          Custom text for the label, displayed to the customer. Up to 50
          characters.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The type of the label.
        type: literal<"custom">
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsNumeric:
    docs: ''
    properties:
      maximum_length:
        docs: The maximum character length constraint for the customer's input.
        type: optional<integer>
      minimum_length:
        docs: The minimum character length requirement for the customer's input.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsText:
    docs: ''
    properties:
      maximum_length:
        docs: The maximum character length constraint for the customer's input.
        type: optional<integer>
      minimum_length:
        docs: The minimum character length requirement for the customer's input.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomFieldsType:
    docs: The type of the field.
    enum:
      - dropdown
      - numeric
      - text
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomText:
    docs: ''
    properties:
      after_submit:
        docs: >-
          Custom text that should be displayed after the payment confirmation
          button.
        type: optional<PaymentLinksResourceCustomTextPosition>
      shipping_address:
        docs: >-
          Custom text that should be displayed alongside shipping address
          collection.
        type: optional<PaymentLinksResourceCustomTextPosition>
      submit:
        docs: >-
          Custom text that should be displayed alongside the payment
          confirmation button.
        type: optional<PaymentLinksResourceCustomTextPosition>
      terms_of_service_acceptance:
        docs: >-
          Custom text that should be displayed in place of the default terms of
          service agreement text.
        type: optional<PaymentLinksResourceCustomTextPosition>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceCustomTextPosition:
    docs: ''
    properties:
      message:
        docs: Text may be up to 1200 characters in length.
        type: string
        validation:
          maxLength: 500
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceInvoiceCreation:
    docs: ''
    properties:
      enabled:
        docs: Enable creating an invoice on successful payment.
        type: boolean
      invoice_data:
        docs: >-
          Configuration for the invoice. Default invoice values will be used if
          unspecified.
        type: optional<PaymentLinksResourceInvoiceSettings>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceInvoiceSettings:
    docs: ''
    properties:
      account_tax_ids:
        docs: The account tax IDs associated with the invoice.
        type: optional<list<PaymentLinksResourceInvoiceSettingsAccountTaxIdsItem>>
      custom_fields:
        docs: A list of up to 4 custom fields to be displayed on the invoice.
        type: optional<list<InvoiceSettingCustomField>>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      footer:
        docs: Footer to be displayed on the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified
          account.
        type: optional<ConnectAccountReference>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      rendering_options:
        docs: Options for invoice PDF rendering.
        type: optional<InvoiceSettingRenderingOptions>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceInvoiceSettingsAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  PaymentLinksResourcePaymentIntentData:
    docs: ''
    properties:
      capture_method:
        docs: Indicates when the funds will be captured from the customer's account.
        type: optional<PaymentLinksResourcePaymentIntentDataCaptureMethod>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          will set metadata on [Payment
          Intents](https://stripe.com/docs/api/payment_intents) generated from
          this payment link.
        type: map<string, string>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with the payment
          method collected during checkout.
        type: optional<PaymentLinksResourcePaymentIntentDataSetupFutureUsage>
      statement_descriptor:
        docs: >-
          For a non-card payment, information about the charge that appears on
          the customer's statement when this payment succeeds in creating a
          charge.
        type: optional<string>
        validation:
          maxLength: 5000
      statement_descriptor_suffix:
        docs: >-
          For a card payment, information about the charge that appears on the
          customer's statement when this payment succeeds in creating a charge.
          Concatenated with the account's statement descriptor prefix to form
          the complete statement descriptor.
        type: optional<string>
        validation:
          maxLength: 5000
      transfer_group:
        docs: >-
          A string that identifies the resulting payment as part of a group. See
          the PaymentIntents [use case for connected
          accounts](https://stripe.com/docs/connect/separate-charges-and-transfers)
          for details.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourcePaymentIntentDataCaptureMethod:
    docs: Indicates when the funds will be captured from the customer's account.
    enum:
      - automatic
      - automatic_async
      - manual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourcePaymentIntentDataSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with the payment method
      collected during checkout.
    enum:
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourcePaymentMethodReuseAgreement:
    docs: ''
    properties:
      position:
        docs: >-
          Determines the position and visibility of the payment method reuse
          agreement in the UI. When set to `auto`, Stripe's defaults will be
          used.


          When set to `hidden`, the payment method reuse agreement text will
          always be hidden in the UI.
        type: PaymentLinksResourcePaymentMethodReuseAgreementPosition
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourcePaymentMethodReuseAgreementPosition:
    docs: >-
      Determines the position and visibility of the payment method reuse
      agreement in the UI. When set to `auto`, Stripe's defaults will be used.


      When set to `hidden`, the payment method reuse agreement text will always
      be hidden in the UI.
    enum:
      - auto
      - hidden
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourcePhoneNumberCollection:
    docs: ''
    properties:
      enabled:
        docs: If `true`, a phone number will be collected during checkout.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceRestrictions:
    docs: ''
    properties:
      completed_sessions:
        type: PaymentLinksResourceCompletedSessions
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceShippingAddressCollection:
    docs: ''
    properties:
      allowed_countries:
        docs: >-
          An array of two-letter ISO country codes representing which countries
          Checkout should provide as options for shipping locations. Unsupported
          country codes: `AS, CX, CC, CU, HM, IR, KP, MH, FM, NF, MP, PW, SD,
          SY, UM, VI`.
        type: >-
          list<PaymentLinksResourceShippingAddressCollectionAllowedCountriesItem>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceShippingAddressCollectionAllowedCountriesItem:
    enum:
      - AC
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CV
      - CW
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MK
      - ML
      - MM
      - MN
      - MO
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NG
      - NI
      - NL
      - 'NO'
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SZ
      - TA
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VN
      - VU
      - WF
      - WS
      - XK
      - YE
      - YT
      - ZA
      - ZM
      - ZW
      - ZZ
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceShippingOption:
    docs: ''
    properties:
      shipping_amount:
        docs: A non-negative integer in cents representing how much to charge.
        type: integer
      shipping_rate:
        docs: The ID of the Shipping Rate to use for this shipping option.
        type: PaymentLinksResourceShippingOptionShippingRate
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceShippingOptionShippingRate:
    discriminated: false
    docs: The ID of the Shipping Rate to use for this shipping option.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ShippingRate
  PaymentLinksResourceSubscriptionData:
    docs: ''
    properties:
      description:
        docs: >-
          The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the
          subscription for rendering in Stripe surfaces and certain local
          payment methods UIs.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_settings:
        type: PaymentLinksResourceSubscriptionDataInvoiceSettings
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          will set metadata on
          [Subscriptions](https://stripe.com/docs/api/subscriptions) generated
          from this payment link.
        type: map<string, string>
      trial_period_days:
        docs: >-
          Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: optional<integer>
      trial_settings:
        docs: Settings related to subscription trials.
        type: optional<SubscriptionsTrialsResourceTrialSettings>
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceSubscriptionDataInvoiceSettings:
    docs: ''
    properties:
      issuer:
        type: ConnectAccountReference
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceTaxIdCollection:
    docs: ''
    properties:
      enabled:
        docs: Indicates whether tax ID collection is enabled for the session.
        type: boolean
      required: PaymentLinksResourceTaxIdCollectionRequired
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceTaxIdCollectionRequired:
    enum:
      - if_supported
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceTransferData:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount in cents (or local equivalent) that will be transferred to
          the destination account. By default, the entire amount is transferred
          to the destination.
        type: optional<integer>
      destination:
        docs: The connected account receiving the transfer.
        type: PaymentLinksResourceTransferDataDestination
    source:
      openapi: ../openapi.yaml
  PaymentLinksResourceTransferDataDestination:
    discriminated: false
    docs: The connected account receiving the transfer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  PaymentLinkSubmitType:
    docs: >-
      Indicates the type of transaction being performed which customizes
      relevant text on the page, such as the submit button.
    enum:
      - auto
      - book
      - donate
      - pay
      - subscribe
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentLinkUpdated:
    docs: Occurs when a payment link is updated.
    properties:
      object:
        type: PaymentLink
    source:
      openapi: ../openapi.yaml
  PaymentMethod:
    docs: >-
      PaymentMethod objects represent your customer's payment instruments.

      You can use them with
      [PaymentIntents](https://stripe.com/docs/payments/payment-intents) to
      collect payments or save them to

      Customer objects to store instrument details for future payments.


      Related guides: [Payment
      Methods](https://stripe.com/docs/payments/payment-methods) and [More
      Payment
      Scenarios](https://stripe.com/docs/payments/more-payment-scenarios).
    properties:
      acss_debit:
        type: optional<PaymentMethodAcssDebit>
      affirm:
        type: optional<PaymentMethodAffirm>
      afterpay_clearpay:
        type: optional<PaymentMethodAfterpayClearpay>
      alipay:
        type: optional<PaymentFlowsPrivatePaymentMethodsAlipay>
      allow_redisplay:
        docs: >-
          This field indicates whether this payment method can be shown again to
          its customer in a checkout flow. Stripe products such as Checkout and
          Elements use this field to determine whether a payment method can be
          shown as a saved payment method in a checkout flow. The field defaults
          to “unspecified”.
        type: optional<PaymentMethodAllowRedisplay>
      alma:
        type: optional<PaymentMethodAlma>
      amazon_pay:
        type: optional<PaymentMethodAmazonPay>
      au_becs_debit:
        type: optional<PaymentMethodAuBecsDebit>
      bacs_debit:
        type: optional<PaymentMethodBacsDebit>
      bancontact:
        type: optional<PaymentMethodBancontact>
      billing_details:
        type: BillingDetails
      blik:
        type: optional<PaymentMethodBlik>
      boleto:
        type: optional<PaymentMethodBoleto>
      card:
        type: optional<PaymentMethodCard>
      card_present:
        type: optional<PaymentMethodCardPresent>
      cashapp:
        type: optional<PaymentMethodCashapp>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: >-
          The ID of the Customer to which this PaymentMethod is saved. This will
          not be set when the PaymentMethod has not been saved to a Customer.
        type: optional<PaymentMethodCustomer>
      customer_balance:
        type: optional<PaymentMethodCustomerBalance>
      eps:
        type: optional<PaymentMethodEps>
      fpx:
        type: optional<PaymentMethodFpx>
      giropay:
        type: optional<PaymentMethodGiropay>
      grabpay:
        type: optional<PaymentMethodGrabpay>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      ideal:
        type: optional<PaymentMethodIdeal>
      interac_present:
        type: optional<PaymentMethodInteracPresent>
      kakao_pay:
        type: optional<PaymentMethodKakaoPay>
      klarna:
        type: optional<PaymentMethodKlarna>
      konbini:
        type: optional<PaymentMethodKonbini>
      kr_card:
        type: optional<PaymentMethodKrCard>
      link:
        type: optional<PaymentMethodLink>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      mobilepay:
        type: optional<PaymentMethodMobilepay>
      multibanco:
        type: optional<PaymentMethodMultibanco>
      naver_pay:
        type: optional<PaymentMethodNaverPay>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payment_method">
      oxxo:
        type: optional<PaymentMethodOxxo>
      p24:
        type: optional<PaymentMethodP24>
      pay_by_bank:
        type: optional<PaymentMethodPayByBank>
      payco:
        type: optional<PaymentMethodPayco>
      paynow:
        type: optional<PaymentMethodPaynow>
      paypal:
        type: optional<PaymentMethodPaypal>
      pix:
        type: optional<PaymentMethodPix>
      promptpay:
        type: optional<PaymentMethodPromptpay>
      radar_options:
        type: optional<RadarRadarOptions>
      revolut_pay:
        type: optional<PaymentMethodRevolutPay>
      samsung_pay:
        type: optional<PaymentMethodSamsungPay>
      sepa_debit:
        type: optional<PaymentMethodSepaDebit>
      sofort:
        type: optional<PaymentMethodSofort>
      swish:
        type: optional<PaymentMethodSwish>
      twint:
        type: optional<PaymentMethodTwint>
      type:
        docs: >-
          The type of the PaymentMethod. An additional hash is included on the
          PaymentMethod with a name matching this value. It contains additional
          information specific to the PaymentMethod type.
        type: PaymentMethodType
      us_bank_account:
        type: optional<PaymentMethodUsBankAccount>
      wechat_pay:
        type: optional<PaymentMethodWechatPay>
      zip:
        type: optional<PaymentMethodZip>
    source:
      openapi: ../openapi.yaml
  PaymentMethodAcssDebit:
    docs: ''
    properties:
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      institution_number:
        docs: Institution number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      transit_number:
        docs: Transit number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodAffirm:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodAfterpayClearpay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodAllowRedisplay:
    docs: >-
      This field indicates whether this payment method can be shown again to its
      customer in a checkout flow. Stripe products such as Checkout and Elements
      use this field to determine whether a payment method can be shown as a
      saved payment method in a checkout flow. The field defaults to
      “unspecified”.
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodAlma:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodAmazonPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodAttached:
    docs: Occurs whenever a new payment method is attached to a customer.
    properties:
      object:
        type: PaymentMethod
    source:
      openapi: ../openapi.yaml
  PaymentMethodAuBecsDebit:
    docs: ''
    properties:
      bsb_number:
        docs: >-
          Six-digit number identifying bank and branch associated with this bank
          account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodAutomaticallyUpdated:
    docs: >-
      Occurs whenever a payment method's details are automatically updated by
      the network.
    properties:
      object:
        type: PaymentMethod
    source:
      openapi: ../openapi.yaml
  PaymentMethodBacsDebit:
    docs: ''
    properties:
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      sort_code:
        docs: Sort code of the bank account. (e.g., `10-20-30`)
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodBancontact:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodBlik:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodBoleto:
    docs: ''
    properties:
      tax_id:
        docs: Uniquely identifies the customer tax id (CNPJ or CPF)
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodCard:
    docs: ''
    properties:
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: string
        validation:
          maxLength: 5000
      checks:
        docs: Checks on Card address and CVC if provided.
        type: optional<PaymentMethodCardChecks>
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      display_brand:
        docs: >-
          The brand to use when displaying the card, this accounts for
          customer's brand choice on dual-branded cards. Can be
          `american_express`, `cartes_bancaires`, `diners_club`, `discover`,
          `eftpos_australia`, `interac`, `jcb`, `mastercard`, `union_pay`,
          `visa`, or `other` and may contain more values in the future.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
        validation:
          maxLength: 5000
      generated_from:
        docs: Details of the original PaymentMethod that created this object.
        type: optional<PaymentMethodCardGeneratedCard>
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: string
        validation:
          maxLength: 5000
      networks:
        docs: >-
          Contains information about card networks that can be used to process
          the payment.
        type: optional<Networks>
      regulated_status:
        docs: Status of a card based on the card issuer.
        type: optional<PaymentMethodCardRegulatedStatus>
      three_d_secure_usage:
        docs: >-
          Contains details on how this Card may be used for 3D Secure
          authentication.
        type: optional<ThreeDSecureUsage>
      wallet:
        docs: >-
          If this Card is part of a card wallet, this contains the details of
          the card wallet.
        type: optional<PaymentMethodCardWallet>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardChecks:
    docs: ''
    properties:
      address_line1_check:
        docs: >-
          If a address line1 was provided, results of the check, one of `pass`,
          `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      address_postal_code_check:
        docs: >-
          If a address postal code was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      cvc_check:
        docs: >-
          If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardGeneratedCard:
    docs: ''
    properties:
      charge:
        docs: The charge that created this object.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_method_details:
        docs: >-
          Transaction-specific details of the payment method used in the
          payment.
        type: optional<CardGeneratedFromPaymentMethodDetails>
      setup_attempt:
        docs: The ID of the SetupAttempt that generated this PaymentMethod, if any.
        type: optional<PaymentMethodCardGeneratedCardSetupAttempt>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardGeneratedCardSetupAttempt:
    discriminated: false
    docs: The ID of the SetupAttempt that generated this PaymentMethod, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupAttempt
  PaymentMethodCardPresent:
    docs: ''
    properties:
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      brand_product:
        docs: >-
          The [product code](https://stripe.com/docs/card-product-codes) that
          identifies the specific program or product associated with a card.
        type: optional<string>
        validation:
          maxLength: 5000
      cardholder_name:
        docs: >-
          The cardholder name as read from the card, in [ISO
          7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include
          alphanumeric characters, special characters and first/last name
          separator (`/`). In some cases, the cardholder name may not be
          available depending on how the issuer has configured the card.
          Cardholder name is typically not available on swipe or contactless
          payments, such as those made with Apple Pay and Google Pay.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      networks:
        docs: >-
          Contains information about card networks that can be used to process
          the payment.
        type: optional<PaymentMethodCardPresentNetworks>
      offline:
        docs: Details about payment methods collected offline.
        type: optional<PaymentMethodDetailsCardPresentOffline>
      preferred_locales:
        docs: >-
          EMV tag 5F2D. Preferred languages specified by the integrated circuit
          chip.
        type: optional<list<string>>
      read_method:
        docs: How card details were read in this transaction.
        type: optional<PaymentMethodCardPresentReadMethod>
      wallet:
        type: optional<PaymentFlowsPrivatePaymentMethodsCardPresentCommonWallet>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardPresentNetworks:
    docs: ''
    properties:
      available:
        docs: All available networks for the card.
        type: list<string>
      preferred:
        docs: The preferred network for the card.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardPresentReadMethod:
    docs: How card details were read in this transaction.
    enum:
      - contact_emv
      - contactless_emv
      - contactless_magstripe_mode
      - magnetic_stripe_fallback
      - magnetic_stripe_track2
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardRegulatedStatus:
    docs: Status of a card based on the card issuer.
    enum:
      - regulated
      - unregulated
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWallet:
    docs: ''
    properties:
      amex_express_checkout:
        type: optional<PaymentMethodCardWalletAmexExpressCheckout>
      apple_pay:
        type: optional<PaymentMethodCardWalletApplePay>
      dynamic_last4:
        docs: >-
          (For tokenized numbers only.) The last four digits of the device
          account number.
        type: optional<string>
        validation:
          maxLength: 5000
      google_pay:
        type: optional<PaymentMethodCardWalletGooglePay>
      link:
        type: optional<PaymentMethodCardWalletLink>
      masterpass:
        type: optional<PaymentMethodCardWalletMasterpass>
      samsung_pay:
        type: optional<PaymentMethodCardWalletSamsungPay>
      type:
        docs: >-
          The type of the card wallet, one of `amex_express_checkout`,
          `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`,
          `visa_checkout`, or `link`. An additional hash is included on the
          Wallet subhash with a name matching this value. It contains additional
          information specific to the card wallet type.
        type: PaymentMethodCardWalletType
      visa_checkout:
        type: optional<PaymentMethodCardWalletVisaCheckout>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletAmexExpressCheckout:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletApplePay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletGooglePay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletLink:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletMasterpass:
    docs: ''
    properties:
      billing_address:
        docs: >-
          Owner's verified billing address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
      email:
        docs: >-
          Owner's verified email. Values are verified or provided by the wallet
          directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: >-
          Owner's verified full name. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_address:
        docs: >-
          Owner's verified shipping address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletSamsungPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletType:
    docs: >-
      The type of the card wallet, one of `amex_express_checkout`, `apple_pay`,
      `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An
      additional hash is included on the Wallet subhash with a name matching
      this value. It contains additional information specific to the card wallet
      type.
    enum:
      - amex_express_checkout
      - apple_pay
      - google_pay
      - link
      - masterpass
      - samsung_pay
      - visa_checkout
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodCardWalletVisaCheckout:
    docs: ''
    properties:
      billing_address:
        docs: >-
          Owner's verified billing address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
      email:
        docs: >-
          Owner's verified email. Values are verified or provided by the wallet
          directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: >-
          Owner's verified full name. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_address:
        docs: >-
          Owner's verified shipping address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
    source:
      openapi: ../openapi.yaml
  PaymentMethodCashapp:
    docs: ''
    properties:
      buyer_id:
        docs: A unique and immutable identifier assigned by Cash App to every buyer.
        type: optional<string>
        validation:
          maxLength: 5000
      cashtag:
        docs: A public identifier for buyers using Cash App.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigBizPaymentMethodConfigurationDetails:
    docs: ''
    properties:
      id:
        docs: ID of the payment method configuration used.
        type: string
        validation:
          maxLength: 5000
      parent:
        docs: ID of the parent payment method configuration used.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigResourceDisplayPreference:
    docs: ''
    properties:
      overridable:
        docs: >-
          For child configs, whether or not the account's preference will be
          observed. If `false`, the parent configuration's default is used.
        type: optional<boolean>
      preference:
        docs: The account's display preference.
        type: PaymentMethodConfigResourceDisplayPreferencePreference
      value:
        docs: The effective display preference value.
        type: PaymentMethodConfigResourceDisplayPreferenceValue
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigResourceDisplayPreferencePreference:
    docs: The account's display preference.
    enum:
      - none
      - 'off'
      - 'on'
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigResourceDisplayPreferenceValue:
    docs: The effective display preference value.
    enum:
      - 'off'
      - 'on'
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigResourcePaymentMethodProperties:
    docs: ''
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfiguration:
    docs: >-
      PaymentMethodConfigurations control which payment methods are displayed to
      your customers when you don't explicitly specify payment method types. You
      can have multiple configurations with different sets of payment methods
      for different scenarios.


      There are two types of PaymentMethodConfigurations. Which is used depends
      on the [charge type](https://stripe.com/docs/connect/charges):


      **Direct** configurations apply to payments created on your account,
      including Connect destination charges, Connect separate charges and
      transfers, and payments not involving Connect.


      **Child** configurations apply to payments created on your connected
      accounts using direct charges, and charges with the on_behalf_of
      parameter.


      Child configurations have a `parent` that sets default values and controls
      which settings connected accounts may override. You can specify a parent
      ID at payment time, and Stripe will automatically resolve the connected
      account’s associated child configuration. Parent configurations are
      [managed in the
      dashboard](https://dashboard.stripe.com/settings/payment_methods/connected_accounts)
      and are not available in this API.


      Related guides:

      - [Payment Method Configurations
      API](https://stripe.com/docs/connect/payment-method-configurations)

      - [Multiple configurations on dynamic payment
      methods](https://stripe.com/docs/payments/multiple-payment-method-configs)

      - [Multiple configurations for your Connect
      accounts](https://stripe.com/docs/connect/multiple-payment-method-configurations)
    properties:
      acss_debit:
        docs: ''
        type: optional<PaymentMethodConfigurationAcssDebit>
      active:
        docs: Whether the configuration can be used for new payments.
        type: boolean
      affirm:
        docs: ''
        type: optional<PaymentMethodConfigurationAffirm>
      afterpay_clearpay:
        docs: ''
        type: optional<PaymentMethodConfigurationAfterpayClearpay>
      alipay:
        docs: ''
        type: optional<PaymentMethodConfigurationAlipay>
      alma:
        docs: ''
        type: optional<PaymentMethodConfigurationAlma>
      amazon_pay:
        docs: ''
        type: optional<PaymentMethodConfigurationAmazonPay>
      apple_pay:
        docs: ''
        type: optional<PaymentMethodConfigurationApplePay>
      application:
        docs: >-
          For child configs, the Connect application associated with the
          configuration.
        type: optional<string>
        validation:
          maxLength: 5000
      au_becs_debit:
        docs: ''
        type: optional<PaymentMethodConfigurationAuBecsDebit>
      bacs_debit:
        docs: ''
        type: optional<PaymentMethodConfigurationBacsDebit>
      bancontact:
        docs: ''
        type: optional<PaymentMethodConfigurationBancontact>
      blik:
        docs: ''
        type: optional<PaymentMethodConfigurationBlik>
      boleto:
        docs: ''
        type: optional<PaymentMethodConfigurationBoleto>
      card:
        docs: ''
        type: optional<PaymentMethodConfigurationCard>
      cartes_bancaires:
        docs: ''
        type: optional<PaymentMethodConfigurationCartesBancaires>
      cashapp:
        docs: ''
        type: optional<PaymentMethodConfigurationCashapp>
      customer_balance:
        docs: ''
        type: optional<PaymentMethodConfigurationCustomerBalance>
      eps:
        docs: ''
        type: optional<PaymentMethodConfigurationEps>
      fpx:
        docs: ''
        type: optional<PaymentMethodConfigurationFpx>
      giropay:
        docs: ''
        type: optional<PaymentMethodConfigurationGiropay>
      google_pay:
        docs: ''
        type: optional<PaymentMethodConfigurationGooglePay>
      grabpay:
        docs: ''
        type: optional<PaymentMethodConfigurationGrabpay>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      ideal:
        docs: ''
        type: optional<PaymentMethodConfigurationIdeal>
      is_default:
        docs: >-
          The default configuration is used whenever a payment method
          configuration is not specified.
        type: boolean
      jcb:
        docs: ''
        type: optional<PaymentMethodConfigurationJcb>
      klarna:
        docs: ''
        type: optional<PaymentMethodConfigurationKlarna>
      konbini:
        docs: ''
        type: optional<PaymentMethodConfigurationKonbini>
      link:
        docs: ''
        type: optional<PaymentMethodConfigurationLink>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      mobilepay:
        docs: ''
        type: optional<PaymentMethodConfigurationMobilepay>
      multibanco:
        docs: ''
        type: optional<PaymentMethodConfigurationMultibanco>
      name:
        docs: The configuration's name.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payment_method_configuration">
      oxxo:
        docs: ''
        type: optional<PaymentMethodConfigurationOxxo>
      p24:
        docs: ''
        type: optional<PaymentMethodConfigurationP24>
      parent:
        docs: For child configs, the configuration's parent configuration.
        type: optional<string>
        validation:
          maxLength: 5000
      pay_by_bank:
        docs: ''
        type: optional<PaymentMethodConfigurationPayByBank>
      paynow:
        docs: ''
        type: optional<PaymentMethodConfigurationPaynow>
      paypal:
        docs: ''
        type: optional<PaymentMethodConfigurationPaypal>
      promptpay:
        docs: ''
        type: optional<PaymentMethodConfigurationPromptpay>
      revolut_pay:
        docs: ''
        type: optional<PaymentMethodConfigurationRevolutPay>
      sepa_debit:
        docs: ''
        type: optional<PaymentMethodConfigurationSepaDebit>
      sofort:
        docs: ''
        type: optional<PaymentMethodConfigurationSofort>
      swish:
        docs: ''
        type: optional<PaymentMethodConfigurationSwish>
      twint:
        docs: ''
        type: optional<PaymentMethodConfigurationTwint>
      us_bank_account:
        docs: ''
        type: optional<PaymentMethodConfigurationUsBankAccount>
      wechat_pay:
        docs: ''
        type: optional<PaymentMethodConfigurationWechatPay>
      zip:
        docs: ''
        type: optional<PaymentMethodConfigurationZip>
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAcssDebit:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAffirm:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAfterpayClearpay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAlipay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAlma:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAmazonPay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationApplePay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationAuBecsDebit:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationBacsDebit:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationBancontact:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationBlik:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationBoleto:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationCard:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationCartesBancaires:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationCashapp:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationCustomerBalance:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationEps:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationFpx:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationGiropay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationGooglePay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationGrabpay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationIdeal:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationJcb:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationKlarna:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationKonbini:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationLink:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationMobilepay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationMultibanco:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationOxxo:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationP24:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationPayByBank:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationPaynow:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationPaypal:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationPromptpay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationRevolutPay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationSepaDebit:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationSofort:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationSwish:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationTwint:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationUsBankAccount:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationWechatPay:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodConfigurationZip:
    docs: ''
    inline: true
    properties:
      available:
        docs: >-
          Whether this payment method may be offered at checkout. True if
          `display_preference` is `on` and the payment method's capability is
          active.
        type: boolean
      display_preference:
        type: PaymentMethodConfigResourceDisplayPreference
    source:
      openapi: ../openapi.yaml
  PaymentMethodCustomer:
    discriminated: false
    docs: >-
      The ID of the Customer to which this PaymentMethod is saved. This will not
      be set when the PaymentMethod has not been saved to a Customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  PaymentMethodCustomerBalance:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetached:
    docs: Occurs whenever a payment method is detached from a customer.
    properties:
      object:
        type: PaymentMethod
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetails:
    docs: ''
    properties:
      ach_credit_transfer:
        type: optional<PaymentMethodDetailsAchCreditTransfer>
      ach_debit:
        type: optional<PaymentMethodDetailsAchDebit>
      acss_debit:
        type: optional<PaymentMethodDetailsAcssDebit>
      affirm:
        type: optional<PaymentMethodDetailsAffirm>
      afterpay_clearpay:
        type: optional<PaymentMethodDetailsAfterpayClearpay>
      alipay:
        type: optional<PaymentFlowsPrivatePaymentMethodsAlipayDetails>
      alma:
        type: optional<PaymentMethodDetailsAlma>
      amazon_pay:
        type: optional<PaymentMethodDetailsAmazonPay>
      au_becs_debit:
        type: optional<PaymentMethodDetailsAuBecsDebit>
      bacs_debit:
        type: optional<PaymentMethodDetailsBacsDebit>
      bancontact:
        type: optional<PaymentMethodDetailsBancontact>
      blik:
        type: optional<PaymentMethodDetailsBlik>
      boleto:
        type: optional<PaymentMethodDetailsBoleto>
      card:
        type: optional<PaymentMethodDetailsCard>
      card_present:
        type: optional<PaymentMethodDetailsCardPresent>
      cashapp:
        type: optional<PaymentMethodDetailsCashapp>
      customer_balance:
        type: optional<PaymentMethodDetailsCustomerBalance>
      eps:
        type: optional<PaymentMethodDetailsEps>
      fpx:
        type: optional<PaymentMethodDetailsFpx>
      giropay:
        type: optional<PaymentMethodDetailsGiropay>
      grabpay:
        type: optional<PaymentMethodDetailsGrabpay>
      ideal:
        type: optional<PaymentMethodDetailsIdeal>
      interac_present:
        type: optional<PaymentMethodDetailsInteracPresent>
      kakao_pay:
        type: optional<PaymentMethodDetailsKakaoPay>
      klarna:
        type: optional<PaymentMethodDetailsKlarna>
      konbini:
        type: optional<PaymentMethodDetailsKonbini>
      kr_card:
        type: optional<PaymentMethodDetailsKrCard>
      link:
        type: optional<PaymentMethodDetailsLink>
      mobilepay:
        type: optional<PaymentMethodDetailsMobilepay>
      multibanco:
        type: optional<PaymentMethodDetailsMultibanco>
      naver_pay:
        type: optional<PaymentMethodDetailsNaverPay>
      oxxo:
        type: optional<PaymentMethodDetailsOxxo>
      p24:
        type: optional<PaymentMethodDetailsP24>
      pay_by_bank:
        type: optional<PaymentMethodDetailsPayByBank>
      payco:
        type: optional<PaymentMethodDetailsPayco>
      paynow:
        type: optional<PaymentMethodDetailsPaynow>
      paypal:
        type: optional<PaymentMethodDetailsPaypal>
      pix:
        type: optional<PaymentMethodDetailsPix>
      promptpay:
        type: optional<PaymentMethodDetailsPromptpay>
      revolut_pay:
        type: optional<PaymentMethodDetailsRevolutPay>
      samsung_pay:
        type: optional<PaymentMethodDetailsSamsungPay>
      sepa_credit_transfer:
        type: optional<PaymentMethodDetailsSepaCreditTransfer>
      sepa_debit:
        type: optional<PaymentMethodDetailsSepaDebit>
      sofort:
        type: optional<PaymentMethodDetailsSofort>
      stripe_account:
        type: optional<PaymentMethodDetailsStripeAccount>
      swish:
        type: optional<PaymentMethodDetailsSwish>
      twint:
        type: optional<PaymentMethodDetailsTwint>
      type:
        docs: >-
          The type of transaction-specific details of the payment method used in
          the payment, one of `ach_credit_transfer`, `ach_debit`, `acss_debit`,
          `alipay`, `au_becs_debit`, `bancontact`, `card`, `card_present`,
          `eps`, `giropay`, `ideal`, `klarna`, `multibanco`, `p24`,
          `sepa_debit`, `sofort`, `stripe_account`, or `wechat`.

          An additional hash is included on `payment_method_details` with a name
          matching this value.

          It contains information specific to the payment method.
        type: string
        validation:
          maxLength: 5000
      us_bank_account:
        type: optional<PaymentMethodDetailsUsBankAccount>
      wechat:
        type: optional<PaymentMethodDetailsWechat>
      wechat_pay:
        type: optional<PaymentMethodDetailsWechatPay>
      zip:
        type: optional<PaymentMethodDetailsZip>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAchCreditTransfer:
    docs: ''
    properties:
      account_number:
        docs: Account number to transfer funds to.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the routing number.
        type: optional<string>
        validation:
          maxLength: 5000
      routing_number:
        docs: Routing transit number for the bank account to transfer funds to.
        type: optional<string>
        validation:
          maxLength: 5000
      swift_code:
        docs: SWIFT code of the bank associated with the routing number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAchDebit:
    docs: ''
    properties:
      account_holder_type:
        docs: >-
          Type of entity that holds the account. This can be either `individual`
          or `company`.
        type: optional<PaymentMethodDetailsAchDebitAccountHolderType>
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      routing_number:
        docs: Routing transit number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAchDebitAccountHolderType:
    docs: >-
      Type of entity that holds the account. This can be either `individual` or
      `company`.
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAcssDebit:
    docs: ''
    properties:
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      institution_number:
        docs: Institution number of the bank account
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<string>
        validation:
          maxLength: 5000
      transit_number:
        docs: Transit number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAffirm:
    docs: ''
    properties:
      transaction_id:
        docs: The Affirm transaction ID associated with this payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAfterpayClearpay:
    docs: ''
    properties:
      order_id:
        docs: The Afterpay order ID associated with this payment intent.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: Order identifier shown to the merchant in Afterpay’s online portal.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAlma:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAmazonPay:
    docs: ''
    properties:
      funding:
        type: optional<AmazonPayUnderlyingPaymentMethodFundingDetails>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsAuBecsDebit:
    docs: ''
    properties:
      bsb_number:
        docs: Bank-State-Branch number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsBacsDebit:
    docs: ''
    properties:
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<string>
        validation:
          maxLength: 5000
      sort_code:
        docs: Sort code of the bank account. (e.g., `10-20-30`)
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsBancontact:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this Charge.
        type: optional<PaymentMethodDetailsBancontactGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
        type: optional<PaymentMethodDetailsBancontactGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_language:
        docs: >-
          Preferred language of the Bancontact authorization page that the
          customer is redirected to.

          Can be one of `en`, `de`, `fr`, or `nl`
        type: optional<PaymentMethodDetailsBancontactPreferredLanguage>
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by
          Bancontact directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsBancontactGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  PaymentMethodDetailsBancontactGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  PaymentMethodDetailsBancontactPreferredLanguage:
    docs: >-
      Preferred language of the Bancontact authorization page that the customer
      is redirected to.

      Can be one of `en`, `de`, `fr`, or `nl`
    enum:
      - de
      - en
      - fr
      - nl
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsBlik:
    docs: ''
    properties:
      buyer_id:
        docs: A unique and immutable identifier assigned by BLIK to every buyer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsBoleto:
    docs: ''
    properties:
      tax_id:
        docs: >-
          The tax ID of the customer (CPF for individuals consumers or CNPJ for
          businesses consumers)
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCard:
    docs: ''
    properties:
      amount_authorized:
        docs: The authorized amount.
        type: optional<integer>
      authorization_code:
        docs: Authorization code on the charge.
        type: optional<string>
        validation:
          maxLength: 5000
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      capture_before:
        docs: >-
          When using manual capture, a future timestamp at which the charge will
          be automatically refunded if uncaptured.
        type: optional<integer>
      checks:
        docs: >-
          Check results by Card networks on Card address and CVC at time of
          payment.
        type: optional<PaymentMethodDetailsCardChecks>
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      extended_authorization:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesExtendedAuthorizationExtendedAuthorization>
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      incremental_authorization:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesIncrementalAuthorizationIncrementalAuthorization>
      installments:
        docs: >-
          Installment details for this payment (Mexico only).


          For more information, see the [installments integration
          guide](https://stripe.com/docs/payments/installments).
        type: optional<PaymentMethodDetailsCardInstallments>
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment or created by it.
        type: optional<string>
        validation:
          maxLength: 5000
      moto:
        docs: True if this payment was marked as MOTO and out of scope for SCA.
        type: optional<boolean>
      multicapture:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceMulticapture>
      network:
        docs: >-
          Identifies which network this charge was processed on. Can be `amex`,
          `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      network_token:
        docs: >-
          If this card has network token credentials, this contains the details
          of the network token credentials.
        type: optional<PaymentMethodDetailsCardNetworkToken>
      network_transaction_id:
        docs: >-
          This is used by the financial networks to identify a transaction. Visa
          calls this the Transaction ID, Mastercard calls this the Trace ID, and
          American Express calls this the Acquirer Reference Data. The first
          three digits of the Trace ID is the Financial Network Code, the next 6
          digits is the Banknet Reference Number, and the last 4 digits
          represent the date (MM/DD). This field will be available for
          successful Visa, Mastercard, or American Express transactions and
          always null for other card brands.
        type: optional<string>
        validation:
          maxLength: 5000
      overcapture:
        type: >-
          optional<PaymentFlowsPrivatePaymentMethodsCardDetailsApiResourceEnterpriseFeaturesOvercaptureOvercapture>
      regulated_status:
        docs: Status of a card based on the card issuer.
        type: optional<PaymentMethodDetailsCardRegulatedStatus>
      three_d_secure:
        docs: Populated if this transaction used 3D Secure authentication.
        type: optional<ThreeDSecureDetailsCharge>
      wallet:
        docs: >-
          If this Card is part of a card wallet, this contains the details of
          the card wallet.
        type: optional<PaymentMethodDetailsCardWallet>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardChecks:
    docs: ''
    properties:
      address_line1_check:
        docs: >-
          If a address line1 was provided, results of the check, one of `pass`,
          `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      address_postal_code_check:
        docs: >-
          If a address postal code was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      cvc_check:
        docs: >-
          If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardInstallments:
    docs: ''
    properties:
      plan:
        docs: Installment plan selected for the payment.
        type: optional<PaymentMethodDetailsCardInstallmentsPlan>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardInstallmentsPlan:
    docs: ''
    properties:
      count:
        docs: >-
          For `fixed_count` installment plans, this is the number of installment
          payments your customer will make to their credit card.
        type: optional<integer>
      interval:
        docs: >-
          For `fixed_count` installment plans, this is the interval between
          installment payments your customer will make to their credit card.

          One of `month`.
        type: optional<literal<"month">>
      type:
        docs: Type of installment plan, one of `fixed_count`.
        type: literal<"fixed_count">
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardNetworkToken:
    docs: ''
    properties:
      used:
        docs: >-
          Indicates if Stripe used a network token, either user provided or
          Stripe managed when processing the transaction.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardPresent:
    docs: ''
    properties:
      amount_authorized:
        docs: The authorized amount
        type: optional<integer>
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      brand_product:
        docs: >-
          The [product code](https://stripe.com/docs/card-product-codes) that
          identifies the specific program or product associated with a card.
        type: optional<string>
        validation:
          maxLength: 5000
      capture_before:
        docs: >-
          When using manual capture, a future timestamp after which the charge
          will be automatically refunded if uncaptured.
        type: optional<integer>
      cardholder_name:
        docs: >-
          The cardholder name as read from the card, in [ISO
          7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include
          alphanumeric characters, special characters and first/last name
          separator (`/`). In some cases, the cardholder name may not be
          available depending on how the issuer has configured the card.
          Cardholder name is typically not available on swipe or contactless
          payments, such as those made with Apple Pay and Google Pay.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      emv_auth_data:
        docs: Authorization response cryptogram.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_card:
        docs: >-
          ID of a card PaymentMethod generated from the card_present
          PaymentMethod that may be attached to a Customer for future
          transactions. Only present if it was possible to generate a card
          PaymentMethod.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      incremental_authorization_supported:
        docs: >-
          Whether this
          [PaymentIntent](https://stripe.com/docs/api/payment_intents) is
          eligible for incremental authorizations. Request support using
          [request_incremental_authorization_support](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-payment_method_options-card_present-request_incremental_authorization_support).
        type: boolean
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      network:
        docs: >-
          Identifies which network this charge was processed on. Can be `amex`,
          `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      network_transaction_id:
        docs: >-
          This is used by the financial networks to identify a transaction. Visa
          calls this the Transaction ID, Mastercard calls this the Trace ID, and
          American Express calls this the Acquirer Reference Data. The first
          three digits of the Trace ID is the Financial Network Code, the next 6
          digits is the Banknet Reference Number, and the last 4 digits
          represent the date (MM/DD). This field will be available for
          successful Visa, Mastercard, or American Express transactions and
          always null for other card brands.
        type: optional<string>
        validation:
          maxLength: 5000
      offline:
        docs: Details about payments collected offline.
        type: optional<PaymentMethodDetailsCardPresentOffline>
      overcapture_supported:
        docs: Defines whether the authorized amount can be over-captured or not
        type: boolean
      preferred_locales:
        docs: >-
          EMV tag 5F2D. Preferred languages specified by the integrated circuit
          chip.
        type: optional<list<string>>
      read_method:
        docs: How card details were read in this transaction.
        type: optional<PaymentMethodDetailsCardPresentReadMethod>
      receipt:
        docs: >-
          A collection of fields required to be displayed on receipts. Only
          required for EMV transactions.
        type: optional<PaymentMethodDetailsCardPresentReceipt>
      wallet:
        type: optional<PaymentFlowsPrivatePaymentMethodsCardPresentCommonWallet>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardPresentOffline:
    docs: ''
    properties:
      stored_at:
        docs: Time at which the payment was collected while offline
        type: optional<integer>
      type:
        docs: >-
          The method used to process this payment method offline. Only deferred
          is allowed.
        type: optional<literal<"deferred">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardPresentReadMethod:
    docs: How card details were read in this transaction.
    enum:
      - contact_emv
      - contactless_emv
      - contactless_magstripe_mode
      - magnetic_stripe_fallback
      - magnetic_stripe_track2
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardPresentReceipt:
    docs: ''
    properties:
      account_type:
        docs: The type of account being debited or credited
        type: optional<PaymentMethodDetailsCardPresentReceiptAccountType>
      application_cryptogram:
        docs: EMV tag 9F26, cryptogram generated by the integrated circuit chip.
        type: optional<string>
        validation:
          maxLength: 5000
      application_preferred_name:
        docs: Mnenomic of the Application Identifier.
        type: optional<string>
        validation:
          maxLength: 5000
      authorization_code:
        docs: Identifier for this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      authorization_response_code:
        docs: EMV tag 8A. A code returned by the card issuer.
        type: optional<string>
        validation:
          maxLength: 5000
      cardholder_verification_method:
        docs: >-
          Describes the method used by the cardholder to verify ownership of the
          card. One of the following: `approval`, `failure`, `none`,
          `offline_pin`, `offline_pin_and_signature`, `online_pin`, or
          `signature`.
        type: optional<string>
        validation:
          maxLength: 5000
      dedicated_file_name:
        docs: >-
          EMV tag 84. Similar to the application identifier stored on the
          integrated circuit chip.
        type: optional<string>
        validation:
          maxLength: 5000
      terminal_verification_results:
        docs: The outcome of a series of EMV functions performed by the card reader.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_status_information:
        docs: >-
          An indication of various EMV functions performed during the
          transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardPresentReceiptAccountType:
    docs: The type of account being debited or credited
    enum:
      - checking
      - credit
      - prepaid
      - unknown
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardRegulatedStatus:
    docs: Status of a card based on the card issuer.
    enum:
      - regulated
      - unregulated
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWallet:
    docs: ''
    properties:
      amex_express_checkout:
        type: optional<PaymentMethodDetailsCardWalletAmexExpressCheckout>
      apple_pay:
        type: optional<PaymentMethodDetailsCardWalletApplePay>
      dynamic_last4:
        docs: >-
          (For tokenized numbers only.) The last four digits of the device
          account number.
        type: optional<string>
        validation:
          maxLength: 5000
      google_pay:
        type: optional<PaymentMethodDetailsCardWalletGooglePay>
      link:
        type: optional<PaymentMethodDetailsCardWalletLink>
      masterpass:
        type: optional<PaymentMethodDetailsCardWalletMasterpass>
      samsung_pay:
        type: optional<PaymentMethodDetailsCardWalletSamsungPay>
      type:
        docs: >-
          The type of the card wallet, one of `amex_express_checkout`,
          `apple_pay`, `google_pay`, `masterpass`, `samsung_pay`,
          `visa_checkout`, or `link`. An additional hash is included on the
          Wallet subhash with a name matching this value. It contains additional
          information specific to the card wallet type.
        type: PaymentMethodDetailsCardWalletType
      visa_checkout:
        type: optional<PaymentMethodDetailsCardWalletVisaCheckout>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletAmexExpressCheckout:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletApplePay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletGooglePay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletLink:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletMasterpass:
    docs: ''
    properties:
      billing_address:
        docs: >-
          Owner's verified billing address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
      email:
        docs: >-
          Owner's verified email. Values are verified or provided by the wallet
          directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: >-
          Owner's verified full name. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_address:
        docs: >-
          Owner's verified shipping address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletSamsungPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletType:
    docs: >-
      The type of the card wallet, one of `amex_express_checkout`, `apple_pay`,
      `google_pay`, `masterpass`, `samsung_pay`, `visa_checkout`, or `link`. An
      additional hash is included on the Wallet subhash with a name matching
      this value. It contains additional information specific to the card wallet
      type.
    enum:
      - amex_express_checkout
      - apple_pay
      - google_pay
      - link
      - masterpass
      - samsung_pay
      - visa_checkout
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCardWalletVisaCheckout:
    docs: ''
    properties:
      billing_address:
        docs: >-
          Owner's verified billing address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
      email:
        docs: >-
          Owner's verified email. Values are verified or provided by the wallet
          directly (if supported) at the time of authorization or settlement.
          They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: >-
          Owner's verified full name. Values are verified or provided by the
          wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      shipping_address:
        docs: >-
          Owner's verified shipping address. Values are verified or provided by
          the wallet directly (if supported) at the time of authorization or
          settlement. They cannot be set or mutated.
        type: optional<Address>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCashapp:
    docs: ''
    properties:
      buyer_id:
        docs: A unique and immutable identifier assigned by Cash App to every buyer.
        type: optional<string>
        validation:
          maxLength: 5000
      cashtag:
        docs: A public identifier for buyers using Cash App.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsCustomerBalance:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsEps:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank. Should be one of `arzte_und_apotheker_bank`,
          `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`,
          `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`,
          `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
          `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`,
          `easybank_ag`, `erste_bank_und_sparkassen`,
          `hypo_alpeadriabank_international_ag`,
          `hypo_noe_lb_fur_niederosterreich_u_wien`,
          `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`,
          `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`,
          `marchfelder_bank`, `oberbank_ag`,
          `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`,
          `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or
          `vr_bank_braunau`.
        type: optional<PaymentMethodDetailsEpsBank>
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by EPS
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.

          EPS rarely provides this information so the attribute is usually
          empty.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsEpsBank:
    docs: >-
      The customer's bank. Should be one of `arzte_und_apotheker_bank`,
      `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`,
      `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`,
      `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
      `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`,
      `easybank_ag`, `erste_bank_und_sparkassen`,
      `hypo_alpeadriabank_international_ag`,
      `hypo_noe_lb_fur_niederosterreich_u_wien`,
      `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`,
      `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`,
      `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`,
      `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`,
      `volkskreditbank_ag`, or `vr_bank_braunau`.
    enum:
      - arzte_und_apotheker_bank
      - austrian_anadi_bank_ag
      - bank_austria
      - bankhaus_carl_spangler
      - bankhaus_schelhammer_und_schattera_ag
      - bawag_psk_ag
      - bks_bank_ag
      - brull_kallmus_bank_ag
      - btv_vier_lander_bank
      - capital_bank_grawe_gruppe_ag
      - deutsche_bank_ag
      - dolomitenbank
      - easybank_ag
      - erste_bank_und_sparkassen
      - hypo_alpeadriabank_international_ag
      - hypo_bank_burgenland_aktiengesellschaft
      - hypo_noe_lb_fur_niederosterreich_u_wien
      - hypo_oberosterreich_salzburg_steiermark
      - hypo_tirol_bank_ag
      - hypo_vorarlberg_bank_ag
      - marchfelder_bank
      - oberbank_ag
      - raiffeisen_bankengruppe_osterreich
      - schoellerbank_ag
      - sparda_bank_wien
      - volksbank_gruppe
      - volkskreditbank_ag
      - vr_bank_braunau
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsFpx:
    docs: ''
    properties:
      account_holder_type:
        docs: >-
          Account holder type, if provided. Can be one of `individual` or
          `company`.
        type: optional<PaymentMethodDetailsFpxAccountHolderType>
      bank:
        docs: >-
          The customer's bank. Can be one of `affin_bank`, `agrobank`,
          `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`,
          `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`,
          `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`,
          `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or
          `bank_of_china`.
        type: PaymentMethodDetailsFpxBank
      transaction_id:
        docs: >-
          Unique transaction id generated by FPX for every request from the
          merchant
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsFpxAccountHolderType:
    docs: Account holder type, if provided. Can be one of `individual` or `company`.
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsFpxBank:
    docs: >-
      The customer's bank. Can be one of `affin_bank`, `agrobank`,
      `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`,
      `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`,
      `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`,
      `maybank2e`, `pb_enterprise`, or `bank_of_china`.
    enum:
      - affin_bank
      - agrobank
      - alliance_bank
      - ambank
      - bank_islam
      - bank_muamalat
      - bank_of_china
      - bank_rakyat
      - bsn
      - cimb
      - deutsche_bank
      - hong_leong_bank
      - hsbc
      - kfh
      - maybank2e
      - maybank2u
      - ocbc
      - pb_enterprise
      - public_bank
      - rhb
      - standard_chartered
      - uob
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsGiropay:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by Giropay
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.

          Giropay rarely provides this information so the attribute is usually
          empty.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsGrabpay:
    docs: ''
    properties:
      transaction_id:
        docs: Unique transaction id generated by GrabPay
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsIdeal:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
          `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`,
          `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or
          `yoursafe`.
        type: optional<PaymentMethodDetailsIdealBank>
      bic:
        docs: The Bank Identifier Code of the customer's bank.
        type: optional<PaymentMethodDetailsIdealBic>
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this Charge.
        type: optional<PaymentMethodDetailsIdealGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
        type: optional<PaymentMethodDetailsIdealGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by iDEAL
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsIdealBank:
    docs: >-
      The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
      `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`,
      `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or
      `yoursafe`.
    enum:
      - abn_amro
      - asn_bank
      - bunq
      - handelsbanken
      - ing
      - knab
      - moneyou
      - n26
      - nn
      - rabobank
      - regiobank
      - revolut
      - sns_bank
      - triodos_bank
      - van_lanschot
      - yoursafe
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsIdealBic:
    docs: The Bank Identifier Code of the customer's bank.
    enum:
      - ABNANL2A
      - ASNBNL21
      - BITSNL2A
      - BUNQNL2A
      - FVLBNL22
      - HANDNL2A
      - INGBNL2A
      - KNABNL2H
      - MOYONL21
      - NNBANL2G
      - NTSBDEB1
      - RABONL2U
      - RBRBNL21
      - REVOIE23
      - REVOLT21
      - SNSBNL2A
      - TRIONL2U
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsIdealGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  PaymentMethodDetailsIdealGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  PaymentMethodDetailsInteracPresent:
    docs: ''
    properties:
      brand:
        docs: Card brand. Can be `interac`, `mastercard` or `visa`.
        type: optional<string>
        validation:
          maxLength: 5000
      cardholder_name:
        docs: >-
          The cardholder name as read from the card, in [ISO
          7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include
          alphanumeric characters, special characters and first/last name
          separator (`/`). In some cases, the cardholder name may not be
          available depending on how the issuer has configured the card.
          Cardholder name is typically not available on swipe or contactless
          payments, such as those made with Apple Pay and Google Pay.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      emv_auth_data:
        docs: Authorization response cryptogram.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_card:
        docs: >-
          ID of a card PaymentMethod generated from the card_present
          PaymentMethod that may be attached to a Customer for future
          transactions. Only present if it was possible to generate a card
          PaymentMethod.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      network:
        docs: >-
          Identifies which network this charge was processed on. Can be `amex`,
          `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      network_transaction_id:
        docs: >-
          This is used by the financial networks to identify a transaction. Visa
          calls this the Transaction ID, Mastercard calls this the Trace ID, and
          American Express calls this the Acquirer Reference Data. The first
          three digits of the Trace ID is the Financial Network Code, the next 6
          digits is the Banknet Reference Number, and the last 4 digits
          represent the date (MM/DD). This field will be available for
          successful Visa, Mastercard, or American Express transactions and
          always null for other card brands.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_locales:
        docs: >-
          EMV tag 5F2D. Preferred languages specified by the integrated circuit
          chip.
        type: optional<list<string>>
      read_method:
        docs: How card details were read in this transaction.
        type: optional<PaymentMethodDetailsInteracPresentReadMethod>
      receipt:
        docs: >-
          A collection of fields required to be displayed on receipts. Only
          required for EMV transactions.
        type: optional<PaymentMethodDetailsInteracPresentReceipt>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsInteracPresentReadMethod:
    docs: How card details were read in this transaction.
    enum:
      - contact_emv
      - contactless_emv
      - contactless_magstripe_mode
      - magnetic_stripe_fallback
      - magnetic_stripe_track2
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsInteracPresentReceipt:
    docs: ''
    properties:
      account_type:
        docs: The type of account being debited or credited
        type: optional<PaymentMethodDetailsInteracPresentReceiptAccountType>
      application_cryptogram:
        docs: EMV tag 9F26, cryptogram generated by the integrated circuit chip.
        type: optional<string>
        validation:
          maxLength: 5000
      application_preferred_name:
        docs: Mnenomic of the Application Identifier.
        type: optional<string>
        validation:
          maxLength: 5000
      authorization_code:
        docs: Identifier for this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      authorization_response_code:
        docs: EMV tag 8A. A code returned by the card issuer.
        type: optional<string>
        validation:
          maxLength: 5000
      cardholder_verification_method:
        docs: >-
          Describes the method used by the cardholder to verify ownership of the
          card. One of the following: `approval`, `failure`, `none`,
          `offline_pin`, `offline_pin_and_signature`, `online_pin`, or
          `signature`.
        type: optional<string>
        validation:
          maxLength: 5000
      dedicated_file_name:
        docs: >-
          EMV tag 84. Similar to the application identifier stored on the
          integrated circuit chip.
        type: optional<string>
        validation:
          maxLength: 5000
      terminal_verification_results:
        docs: The outcome of a series of EMV functions performed by the card reader.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_status_information:
        docs: >-
          An indication of various EMV functions performed during the
          transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsInteracPresentReceiptAccountType:
    docs: The type of account being debited or credited
    enum:
      - checking
      - savings
      - unknown
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKakaoPay:
    docs: ''
    properties:
      buyer_id:
        docs: >-
          A unique identifier for the buyer as determined by the local payment
          processor.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKlarna:
    docs: ''
    properties:
      payer_details:
        docs: The payer details for this transaction.
        type: optional<KlarnaPayerDetails>
      payment_method_category:
        docs: >-
          The Klarna payment method used for this transaction.

          Can be one of `pay_later`, `pay_now`, `pay_with_financing`, or
          `pay_in_installments`
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_locale:
        docs: >-
          Preferred language of the Klarna authorization page that the customer
          is redirected to.

          Can be one of `de-AT`, `en-AT`, `nl-BE`, `fr-BE`, `en-BE`, `de-DE`,
          `en-DE`, `da-DK`, `en-DK`, `es-ES`, `en-ES`, `fi-FI`, `sv-FI`,
          `en-FI`, `en-GB`, `en-IE`, `it-IT`, `en-IT`, `nl-NL`, `en-NL`,
          `nb-NO`, `en-NO`, `sv-SE`, `en-SE`, `en-US`, `es-US`, `fr-FR`,
          `en-FR`, `cs-CZ`, `en-CZ`, `ro-RO`, `en-RO`, `el-GR`, `en-GR`,
          `en-AU`, `en-NZ`, `en-CA`, `fr-CA`, `pl-PL`, `en-PL`, `pt-PT`,
          `en-PT`, `de-CH`, `fr-CH`, `it-CH`, or `en-CH`
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKonbini:
    docs: ''
    properties:
      store:
        docs: >-
          If the payment succeeded, this contains the details of the convenience
          store where the payment was completed.
        type: optional<PaymentMethodDetailsKonbiniStore>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKonbiniStore:
    docs: ''
    properties:
      chain:
        docs: >-
          The name of the convenience store chain where the payment was
          completed.
        type: optional<PaymentMethodDetailsKonbiniStoreChain>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKonbiniStoreChain:
    docs: The name of the convenience store chain where the payment was completed.
    enum:
      - familymart
      - lawson
      - ministop
      - seicomart
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKrCard:
    docs: ''
    properties:
      brand:
        docs: The local credit or debit card brand.
        type: optional<PaymentMethodDetailsKrCardBrand>
      buyer_id:
        docs: >-
          A unique identifier for the buyer as determined by the local payment
          processor.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: >-
          The last four digits of the card. This may not be present for American
          Express cards.
        type: optional<string>
        validation:
          maxLength: 4
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsKrCardBrand:
    docs: The local credit or debit card brand.
    enum:
      - bc
      - citi
      - hana
      - hyundai
      - jeju
      - jeonbuk
      - kakaobank
      - kbank
      - kdbbank
      - kookmin
      - kwangju
      - lotte
      - mg
      - nh
      - post
      - samsung
      - savingsbank
      - shinhan
      - shinhyup
      - suhyup
      - tossbank
      - woori
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsLink:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter ISO code representing the funding source country beneath
          the Link payment.

          You could use this attribute to get a sense of international fees.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsMobilepay:
    docs: ''
    properties:
      card:
        docs: Internal card details
        type: optional<InternalCard>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsMultibanco:
    docs: ''
    properties:
      entity:
        docs: Entity number associated with this Multibanco payment.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: Reference number associated with this Multibanco payment.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsNaverPay:
    docs: ''
    properties:
      buyer_id:
        docs: >-
          A unique identifier for the buyer as determined by the local payment
          processor.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsOxxo:
    docs: ''
    properties:
      number:
        docs: OXXO reference number
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsP24:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank. Can be one of `ing`, `citi_handlowy`,
          `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`,
          `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `velobank`,
          `blik`, `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`,
          `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`,
          `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`,
          `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.
        type: optional<PaymentMethodDetailsP24Bank>
      reference:
        docs: Unique reference for this Przelewy24 payment.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by
          Przelewy24 directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.

          Przelewy24 rarely provides this information so the attribute is
          usually empty.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsP24Bank:
    docs: >-
      The customer's bank. Can be one of `ing`, `citi_handlowy`,
      `tmobile_usbugi_bankowe`, `plus_bank`, `etransfer_pocztowy24`,
      `banki_spbdzielcze`, `bank_nowy_bfg_sa`, `getin_bank`, `velobank`, `blik`,
      `noble_pay`, `ideabank`, `envelobank`, `santander_przelew24`,
      `nest_przelew`, `mbank_mtransfer`, `inteligo`, `pbac_z_ipko`,
      `bnp_paribas`, `credit_agricole`, `toyota_bank`, `bank_pekao_sa`,
      `volkswagen_bank`, `bank_millennium`, `alior_bank`, or `boz`.
    enum:
      - alior_bank
      - bank_millennium
      - bank_nowy_bfg_sa
      - bank_pekao_sa
      - banki_spbdzielcze
      - blik
      - bnp_paribas
      - boz
      - citi_handlowy
      - credit_agricole
      - envelobank
      - etransfer_pocztowy24
      - getin_bank
      - ideabank
      - ing
      - inteligo
      - mbank_mtransfer
      - nest_przelew
      - noble_pay
      - pbac_z_ipko
      - plus_bank
      - santander_przelew24
      - tmobile_usbugi_bankowe
      - toyota_bank
      - velobank
      - volkswagen_bank
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPassthroughCard:
    docs: ''
    properties:
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: optional<integer>
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: optional<integer>
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPayByBank:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPayco:
    docs: ''
    properties:
      buyer_id:
        docs: >-
          A unique identifier for the buyer as determined by the local payment
          processor.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPaynow:
    docs: ''
    properties:
      reference:
        docs: Reference number associated with this PayNow payment
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPaypal:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter ISO code representing the buyer's country. Values are
          provided by PayPal directly (if supported) at the time of
          authorization or settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_email:
        docs: >-
          Owner's email. Values are provided by PayPal directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_id:
        docs: >-
          PayPal account PayerID. This identifier uniquely identifies the PayPal
          customer.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_name:
        docs: >-
          Owner's full name. Values provided by PayPal directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      seller_protection:
        docs: >-
          The level of protection offered as defined by PayPal Seller Protection
          for Merchants, for this transaction.
        type: optional<PaypalSellerProtection>
      transaction_id:
        docs: A unique ID generated by PayPal for this transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPix:
    docs: ''
    properties:
      bank_transaction_id:
        docs: Unique transaction id generated by BCB
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsPromptpay:
    docs: ''
    properties:
      reference:
        docs: Bill reference generated by PromptPay
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsRevolutPay:
    docs: ''
    properties:
      funding:
        type: optional<RevolutPayUnderlyingPaymentMethodFundingDetails>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSamsungPay:
    docs: ''
    properties:
      buyer_id:
        docs: >-
          A unique identifier for the buyer as determined by the local payment
          processor.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSepaCreditTransfer:
    docs: ''
    properties:
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      iban:
        docs: IBAN of the bank account to transfer funds to.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSepaDebit:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      branch_code:
        docs: Branch code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: >-
          Find the ID of the mandate used for this payment under the
          [payment_method_details.sepa_debit.mandate](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-sepa_debit-mandate)
          property on the Charge. Use this mandate ID to [retrieve the
          Mandate](https://stripe.com/docs/api/mandates/retrieve).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSofort:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this Charge.
        type: optional<PaymentMethodDetailsSofortGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this Charge.
        type: optional<PaymentMethodDetailsSofortGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_language:
        docs: >-
          Preferred language of the SOFORT authorization page that the customer
          is redirected to.

          Can be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`
        type: optional<PaymentMethodDetailsSofortPreferredLanguage>
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by SOFORT
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSofortGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  PaymentMethodDetailsSofortGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this Charge.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  PaymentMethodDetailsSofortPreferredLanguage:
    docs: >-
      Preferred language of the SOFORT authorization page that the customer is
      redirected to.

      Can be one of `de`, `en`, `es`, `fr`, `it`, `nl`, or `pl`
    enum:
      - de
      - en
      - es
      - fr
      - it
      - nl
      - pl
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsStripeAccount:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsSwish:
    docs: ''
    properties:
      fingerprint:
        docs: >-
          Uniquely identifies the payer's Swish account. You can use this
          attribute to check whether two Swish transactions were paid for by the
          same payer
        type: optional<string>
        validation:
          maxLength: 5000
      payment_reference:
        docs: Payer bank reference number for the payment
        type: optional<string>
        validation:
          maxLength: 5000
      verified_phone_last4:
        docs: The last four digits of the Swish account phone number
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsTwint:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsUsBankAccount:
    docs: ''
    properties:
      account_holder_type:
        docs: 'Account holder type: individual or company.'
        type: optional<PaymentMethodDetailsUsBankAccountAccountHolderType>
      account_type:
        docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
        type: optional<PaymentMethodDetailsUsBankAccountAccountType>
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate:
        docs: ID of the mandate used to make this payment.
        type: optional<PaymentMethodDetailsUsBankAccountMandate>
      payment_reference:
        docs: Reference number to locate ACH payments with customer's bank.
        type: optional<string>
        validation:
          maxLength: 5000
      routing_number:
        docs: Routing number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsUsBankAccountAccountHolderType:
    docs: 'Account holder type: individual or company.'
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsUsBankAccountAccountType:
    docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsUsBankAccountMandate:
    discriminated: false
    docs: ID of the mandate used to make this payment.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  PaymentMethodDetailsWechat:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsWechatPay:
    docs: ''
    properties:
      fingerprint:
        docs: >-
          Uniquely identifies this particular WeChat Pay account. You can use
          this attribute to check whether two WeChat accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      transaction_id:
        docs: Transaction ID of this particular WeChat Pay transaction.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDetailsZip:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodDomain:
    docs: >-
      A payment method domain represents a web domain that you have registered
      with Stripe.

      Stripe Elements use registered payment method domains to control where
      certain payment methods are shown.


      Related guide: [Payment method
      domains](https://stripe.com/docs/payments/payment-methods/pmd-registration).
    properties:
      amazon_pay:
        type: PaymentMethodDomainResourcePaymentMethodStatus
      apple_pay:
        type: PaymentMethodDomainResourcePaymentMethodStatus
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      domain_name:
        docs: The domain name that this payment method domain object represents.
        type: string
        validation:
          maxLength: 5000
      enabled:
        docs: >-
          Whether this payment method domain is enabled. If the domain is not
          enabled, payment methods that require a payment method domain will not
          appear in Elements.
        type: boolean
      google_pay:
        type: PaymentMethodDomainResourcePaymentMethodStatus
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      link:
        type: PaymentMethodDomainResourcePaymentMethodStatus
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payment_method_domain">
      paypal:
        type: PaymentMethodDomainResourcePaymentMethodStatus
    source:
      openapi: ../openapi.yaml
  PaymentMethodDomainResourcePaymentMethodStatus:
    docs: >-
      Indicates the status of a specific payment method on a payment method
      domain.
    properties:
      status:
        docs: The status of the payment method on the domain.
        type: PaymentMethodDomainResourcePaymentMethodStatusStatus
      status_details:
        type: optional<PaymentMethodDomainResourcePaymentMethodStatusDetails>
    source:
      openapi: ../openapi.yaml
  PaymentMethodDomainResourcePaymentMethodStatusDetails:
    docs: >-
      Contains additional details about the status of a payment method for a
      specific payment method domain.
    properties:
      error_message:
        docs: >-
          The error message associated with the status of the payment method on
          the domain.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodDomainResourcePaymentMethodStatusStatus:
    docs: The status of the payment method on the domain.
    enum:
      - active
      - inactive
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodEps:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank. Should be one of `arzte_und_apotheker_bank`,
          `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`,
          `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`,
          `bks_bank_ag`, `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
          `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`,
          `easybank_ag`, `erste_bank_und_sparkassen`,
          `hypo_alpeadriabank_international_ag`,
          `hypo_noe_lb_fur_niederosterreich_u_wien`,
          `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`,
          `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`,
          `marchfelder_bank`, `oberbank_ag`,
          `raiffeisen_bankengruppe_osterreich`, `schoellerbank_ag`,
          `sparda_bank_wien`, `volksbank_gruppe`, `volkskreditbank_ag`, or
          `vr_bank_braunau`.
        type: optional<PaymentMethodEpsBank>
    source:
      openapi: ../openapi.yaml
  PaymentMethodEpsBank:
    docs: >-
      The customer's bank. Should be one of `arzte_und_apotheker_bank`,
      `austrian_anadi_bank_ag`, `bank_austria`, `bankhaus_carl_spangler`,
      `bankhaus_schelhammer_und_schattera_ag`, `bawag_psk_ag`, `bks_bank_ag`,
      `brull_kallmus_bank_ag`, `btv_vier_lander_bank`,
      `capital_bank_grawe_gruppe_ag`, `deutsche_bank_ag`, `dolomitenbank`,
      `easybank_ag`, `erste_bank_und_sparkassen`,
      `hypo_alpeadriabank_international_ag`,
      `hypo_noe_lb_fur_niederosterreich_u_wien`,
      `hypo_oberosterreich_salzburg_steiermark`, `hypo_tirol_bank_ag`,
      `hypo_vorarlberg_bank_ag`, `hypo_bank_burgenland_aktiengesellschaft`,
      `marchfelder_bank`, `oberbank_ag`, `raiffeisen_bankengruppe_osterreich`,
      `schoellerbank_ag`, `sparda_bank_wien`, `volksbank_gruppe`,
      `volkskreditbank_ag`, or `vr_bank_braunau`.
    enum:
      - arzte_und_apotheker_bank
      - austrian_anadi_bank_ag
      - bank_austria
      - bankhaus_carl_spangler
      - bankhaus_schelhammer_und_schattera_ag
      - bawag_psk_ag
      - bks_bank_ag
      - brull_kallmus_bank_ag
      - btv_vier_lander_bank
      - capital_bank_grawe_gruppe_ag
      - deutsche_bank_ag
      - dolomitenbank
      - easybank_ag
      - erste_bank_und_sparkassen
      - hypo_alpeadriabank_international_ag
      - hypo_bank_burgenland_aktiengesellschaft
      - hypo_noe_lb_fur_niederosterreich_u_wien
      - hypo_oberosterreich_salzburg_steiermark
      - hypo_tirol_bank_ag
      - hypo_vorarlberg_bank_ag
      - marchfelder_bank
      - oberbank_ag
      - raiffeisen_bankengruppe_osterreich
      - schoellerbank_ag
      - sparda_bank_wien
      - volksbank_gruppe
      - volkskreditbank_ag
      - vr_bank_braunau
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodFpx:
    docs: ''
    properties:
      account_holder_type:
        docs: >-
          Account holder type, if provided. Can be one of `individual` or
          `company`.
        type: optional<PaymentMethodFpxAccountHolderType>
      bank:
        docs: >-
          The customer's bank, if provided. Can be one of `affin_bank`,
          `agrobank`, `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`,
          `bank_rakyat`, `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`,
          `maybank2u`, `ocbc`, `public_bank`, `rhb`, `standard_chartered`,
          `uob`, `deutsche_bank`, `maybank2e`, `pb_enterprise`, or
          `bank_of_china`.
        type: PaymentMethodFpxBank
    source:
      openapi: ../openapi.yaml
  PaymentMethodFpxAccountHolderType:
    docs: Account holder type, if provided. Can be one of `individual` or `company`.
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodFpxBank:
    docs: >-
      The customer's bank, if provided. Can be one of `affin_bank`, `agrobank`,
      `alliance_bank`, `ambank`, `bank_islam`, `bank_muamalat`, `bank_rakyat`,
      `bsn`, `cimb`, `hong_leong_bank`, `hsbc`, `kfh`, `maybank2u`, `ocbc`,
      `public_bank`, `rhb`, `standard_chartered`, `uob`, `deutsche_bank`,
      `maybank2e`, `pb_enterprise`, or `bank_of_china`.
    enum:
      - affin_bank
      - agrobank
      - alliance_bank
      - ambank
      - bank_islam
      - bank_muamalat
      - bank_of_china
      - bank_rakyat
      - bsn
      - cimb
      - deutsche_bank
      - hong_leong_bank
      - hsbc
      - kfh
      - maybank2e
      - maybank2u
      - ocbc
      - pb_enterprise
      - public_bank
      - rhb
      - standard_chartered
      - uob
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodGiropay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodGrabpay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodIdeal:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank, if provided. Can be one of `abn_amro`,
          `asn_bank`, `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`,
          `nn`, `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`,
          `van_lanschot`, or `yoursafe`.
        type: optional<PaymentMethodIdealBank>
      bic:
        docs: >-
          The Bank Identifier Code of the customer's bank, if the bank was
          provided.
        type: optional<PaymentMethodIdealBic>
    source:
      openapi: ../openapi.yaml
  PaymentMethodIdealBank:
    docs: >-
      The customer's bank, if provided. Can be one of `abn_amro`, `asn_bank`,
      `bunq`, `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`,
      `rabobank`, `regiobank`, `revolut`, `sns_bank`, `triodos_bank`,
      `van_lanschot`, or `yoursafe`.
    enum:
      - abn_amro
      - asn_bank
      - bunq
      - handelsbanken
      - ing
      - knab
      - moneyou
      - n26
      - nn
      - rabobank
      - regiobank
      - revolut
      - sns_bank
      - triodos_bank
      - van_lanschot
      - yoursafe
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodIdealBic:
    docs: The Bank Identifier Code of the customer's bank, if the bank was provided.
    enum:
      - ABNANL2A
      - ASNBNL21
      - BITSNL2A
      - BUNQNL2A
      - FVLBNL22
      - HANDNL2A
      - INGBNL2A
      - KNABNL2H
      - MOYONL21
      - NNBANL2G
      - NTSBDEB1
      - RABONL2U
      - RBRBNL21
      - REVOIE23
      - REVOLT21
      - SNSBNL2A
      - TRIONL2U
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodInteracPresent:
    docs: ''
    properties:
      brand:
        docs: Card brand. Can be `interac`, `mastercard` or `visa`.
        type: optional<string>
        validation:
          maxLength: 5000
      cardholder_name:
        docs: >-
          The cardholder name as read from the card, in [ISO
          7813](https://en.wikipedia.org/wiki/ISO/IEC_7813) format. May include
          alphanumeric characters, special characters and first/last name
          separator (`/`). In some cases, the cardholder name may not be
          available depending on how the issuer has configured the card.
          Cardholder name is typically not available on swipe or contactless
          payments, such as those made with Apple Pay and Google Pay.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      networks:
        docs: >-
          Contains information about card networks that can be used to process
          the payment.
        type: optional<PaymentMethodCardPresentNetworks>
      preferred_locales:
        docs: >-
          EMV tag 5F2D. Preferred languages specified by the integrated circuit
          chip.
        type: optional<list<string>>
      read_method:
        docs: How card details were read in this transaction.
        type: optional<PaymentMethodInteracPresentReadMethod>
    source:
      openapi: ../openapi.yaml
  PaymentMethodInteracPresentReadMethod:
    docs: How card details were read in this transaction.
    enum:
      - contact_emv
      - contactless_emv
      - contactless_magstripe_mode
      - magnetic_stripe_fallback
      - magnetic_stripe_track2
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodKakaoPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodKlarna:
    docs: ''
    properties:
      dob:
        docs: The customer's date of birth, if provided.
        type: optional<PaymentFlowsPrivatePaymentMethodsKlarnaDob>
    source:
      openapi: ../openapi.yaml
  PaymentMethodKonbini:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodKrCard:
    docs: ''
    properties:
      brand:
        docs: The local credit or debit card brand.
        type: optional<PaymentMethodKrCardBrand>
      last4:
        docs: >-
          The last four digits of the card. This may not be present for American
          Express cards.
        type: optional<string>
        validation:
          maxLength: 4
    source:
      openapi: ../openapi.yaml
  PaymentMethodKrCardBrand:
    docs: The local credit or debit card brand.
    enum:
      - bc
      - citi
      - hana
      - hyundai
      - jeju
      - jeonbuk
      - kakaobank
      - kbank
      - kdbbank
      - kookmin
      - kwangju
      - lotte
      - mg
      - nh
      - post
      - samsung
      - savingsbank
      - shinhan
      - shinhyup
      - suhyup
      - tossbank
      - woori
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodLink:
    docs: ''
    properties:
      email:
        docs: Account owner's email address.
        type: optional<string>
        validation:
          maxLength: 5000
      persistent_token:
        docs: >-
          [Deprecated] This is a legacy parameter that no longer has any
          function.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodMobilepay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodMultibanco:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodNaverPay:
    docs: ''
    properties:
      funding:
        docs: Whether to fund this transaction with Naver Pay points or a card.
        type: PaymentMethodNaverPayFunding
    source:
      openapi: ../openapi.yaml
  PaymentMethodNaverPayFunding:
    docs: Whether to fund this transaction with Naver Pay points or a card.
    enum:
      - card
      - points
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAffirm:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      preferred_locale:
        docs: >-
          Preferred language of the Affirm authorization page that the customer
          is redirected to.
        type: optional<string>
        validation:
          maxLength: 30
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAfterpayClearpay:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      reference:
        docs: >-
          An internal identifier or reference that this payment corresponds to.
          You must limit the identifier to 128 characters, and it can only
          contain letters, numbers, underscores, backslashes, and dashes.

          This field differs from the statement descriptor and item name.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAlipay:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsAlipaySetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAlipaySetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAlma:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAmazonPay:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsAmazonPaySetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsAmazonPaySetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsBancontact:
    docs: ''
    properties:
      preferred_language:
        docs: >-
          Preferred language of the Bancontact authorization page that the
          customer is redirected to.
        type: PaymentMethodOptionsBancontactPreferredLanguage
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsBancontactSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsBancontactPreferredLanguage:
    docs: >-
      Preferred language of the Bancontact authorization page that the customer
      is redirected to.
    enum:
      - de
      - en
      - fr
      - nl
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsBancontactSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsBoleto:
    docs: ''
    properties:
      expires_after_days:
        docs: >-
          The number of calendar days before a Boleto voucher expires. For
          example, if you create a Boleto voucher on Monday and you set
          expires_after_days to 2, the Boleto voucher will expire on Wednesday
          at 23:59 America/Sao_Paulo time.
        type: integer
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsBoletoSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsBoletoSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardInstallments:
    docs: ''
    properties:
      available_plans:
        docs: Installment plans that may be selected for this PaymentIntent.
        type: optional<list<PaymentMethodDetailsCardInstallmentsPlan>>
      enabled:
        docs: Whether Installments are enabled for this PaymentIntent.
        type: boolean
      plan:
        docs: Installment plan selected for this PaymentIntent.
        type: optional<PaymentMethodDetailsCardInstallmentsPlan>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardMandateOptions:
    docs: ''
    properties:
      amount:
        docs: Amount to be charged for future payments.
        type: integer
      amount_type:
        docs: >-
          One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to
          the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
        type: PaymentMethodOptionsCardMandateOptionsAmountType
      description:
        docs: >-
          A description of the mandate or subscription that is meant to be
          displayed to the customer.
        type: optional<string>
        validation:
          maxLength: 200
      end_date:
        docs: >-
          End date of the mandate or subscription. If not provided, the mandate
          will be active until canceled. If provided, end date should be after
          start date.
        type: optional<integer>
      interval:
        docs: >-
          Specifies payment frequency. One of `day`, `week`, `month`, `year`, or
          `sporadic`.
        type: PaymentMethodOptionsCardMandateOptionsInterval
      interval_count:
        docs: >-
          The number of intervals between payments. For example,
          `interval=month` and `interval_count=3` indicates one payment every
          three months. Maximum of one year interval allowed (1 year, 12 months,
          or 52 weeks). This parameter is optional when `interval=sporadic`.
        type: optional<integer>
      reference:
        docs: Unique identifier for the mandate or subscription.
        type: string
        validation:
          maxLength: 80
      start_date:
        docs: >-
          Start date of the mandate or subscription. Start date should not be
          lesser than yesterday.
        type: integer
      supported_types:
        docs: Specifies the type of mandates supported. Possible values are `india`.
        type: optional<list<literal<"india">>>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardMandateOptionsAmountType:
    docs: >-
      One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the
      exact amount to be charged in future payments. If `maximum`, the amount
      charged can be up to the value passed for the `amount` param.
    enum:
      - fixed
      - maximum
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardMandateOptionsInterval:
    docs: >-
      Specifies payment frequency. One of `day`, `week`, `month`, `year`, or
      `sporadic`.
    enum:
      - day
      - month
      - sporadic
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardPresent:
    docs: ''
    properties:
      request_extended_authorization:
        docs: >-
          Request ability to capture this payment beyond the standard
          [authorization validity
          window](https://stripe.com/docs/terminal/features/extended-authorizations#authorization-validity)
        type: optional<boolean>
      request_incremental_authorization_support:
        docs: >-
          Request ability to
          [increment](https://stripe.com/docs/terminal/features/incremental-authorizations)
          this PaymentIntent if the combination of MCC and card brand is
          eligible. Check
          [incremental_authorization_supported](https://stripe.com/docs/api/charges/object#charge_object-payment_method_details-card_present-incremental_authorization_supported)
          in the [Confirm](https://stripe.com/docs/api/payment_intents/confirm)
          response to verify support.
        type: optional<boolean>
      routing:
        type: optional<PaymentMethodOptionsCardPresentRouting>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardPresentRouting:
    docs: ''
    properties:
      requested_priority:
        docs: Requested routing priority
        type: optional<PaymentMethodOptionsCardPresentRoutingRequestedPriority>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCardPresentRoutingRequestedPriority:
    docs: Requested routing priority
    enum:
      - domestic
      - international
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCashapp:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsCashappSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCashappSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
      - on_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalance:
    docs: ''
    properties:
      bank_transfer:
        type: optional<PaymentMethodOptionsCustomerBalanceBankTransfer>
      funding_type:
        docs: >-
          The funding method type to be used when there are not enough funds in
          the customer balance. Permitted values include: `bank_transfer`.
        type: optional<literal<"bank_transfer">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalanceBankTransfer:
    docs: ''
    properties:
      eu_bank_transfer:
        type: optional<PaymentMethodOptionsCustomerBalanceEuBankAccount>
      requested_address_types:
        docs: >-
          List of address types that should be returned in the
          financial_addresses response. If not specified, all valid types will
          be returned.


          Permitted values include: `sort_code`, `zengin`, `iban`, or `spei`.
        type: >-
          optional<list<PaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypesItem>>
      type:
        docs: >-
          The bank transfer type that this PaymentIntent is allowed to use for
          funding Permitted values include: `eu_bank_transfer`,
          `gb_bank_transfer`, `jp_bank_transfer`, `mx_bank_transfer`, or
          `us_bank_transfer`.
        type: optional<PaymentMethodOptionsCustomerBalanceBankTransferType>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalanceBankTransferRequestedAddressTypesItem:
    enum:
      - aba
      - iban
      - sepa
      - sort_code
      - spei
      - swift
      - zengin
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalanceBankTransferType:
    docs: >-
      The bank transfer type that this PaymentIntent is allowed to use for
      funding Permitted values include: `eu_bank_transfer`, `gb_bank_transfer`,
      `jp_bank_transfer`, `mx_bank_transfer`, or `us_bank_transfer`.
    enum:
      - eu_bank_transfer
      - gb_bank_transfer
      - jp_bank_transfer
      - mx_bank_transfer
      - us_bank_transfer
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalanceEuBankAccount:
    docs: ''
    properties:
      country:
        docs: >-
          The desired country code of the bank account information. Permitted
          values include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
        type: PaymentMethodOptionsCustomerBalanceEuBankAccountCountry
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsCustomerBalanceEuBankAccountCountry:
    docs: >-
      The desired country code of the bank account information. Permitted values
      include: `BE`, `DE`, `ES`, `FR`, `IE`, or `NL`.
    enum:
      - BE
      - DE
      - ES
      - FR
      - IE
      - NL
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsFpx:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsGiropay:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsGrabpay:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsIdeal:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsIdealSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsIdealSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsInteracPresent:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsKlarna:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      preferred_locale:
        docs: >-
          Preferred locale of the Klarna checkout page that the customer is
          redirected to.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsKonbini:
    docs: ''
    properties:
      confirmation_number:
        docs: >-
          An optional 10 to 11 digit numeric-only string determining the
          confirmation code at applicable convenience stores.
        type: optional<string>
        validation:
          maxLength: 5000
      expires_after_days:
        docs: >-
          The number of calendar days (between 1 and 60) after which Konbini
          payment instructions will expire. For example, if a PaymentIntent is
          confirmed with Konbini and `expires_after_days` set to 2 on Monday
          JST, the instructions will expire on Wednesday 23:59:59 JST.
        type: optional<integer>
      expires_at:
        docs: >-
          The timestamp at which the Konbini payment instructions will expire.
          Only one of `expires_after_days` or `expires_at` may be set.
        type: optional<integer>
      product_description:
        docs: >-
          A product descriptor of up to 22 characters, which will appear to
          customers at the convenience store.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsKrCard:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsKrCardSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsKrCardSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsMultibanco:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsOxxo:
    docs: ''
    properties:
      expires_after_days:
        docs: >-
          The number of calendar days before an OXXO invoice expires. For
          example, if you create an OXXO invoice on Monday and you set
          expires_after_days to 2, the OXXO invoice will expire on Wednesday at
          23:59 America/Mexico_City time.
        type: integer
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsP24:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPayByBank:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPaynow:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPaypal:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      preferred_locale:
        docs: >-
          Preferred locale of the PayPal checkout page that the customer is
          redirected to.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: >-
          A reference of the PayPal transaction visible to customer which is
          mapped to PayPal's invoice ID. This must be a globally unique ID if
          you have configured in your PayPal settings to block multiple payments
          per invoice ID.
        type: optional<string>
        validation:
          maxLength: 5000
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsPaypalSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPaypalSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPix:
    docs: ''
    properties:
      expires_after_seconds:
        docs: >-
          The number of seconds (between 10 and 1209600) after which Pix payment
          will expire.
        type: optional<integer>
      expires_at:
        docs: The timestamp at which the Pix expires.
        type: optional<integer>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsPromptpay:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsRevolutPay:
    docs: ''
    properties:
      capture_method:
        docs: Controls when the funds will be captured from the customer's account.
        type: optional<literal<"manual">>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsRevolutPaySetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsRevolutPaySetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsSofort:
    docs: ''
    properties:
      preferred_language:
        docs: >-
          Preferred language of the SOFORT authorization page that the customer
          is redirected to.
        type: optional<PaymentMethodOptionsSofortPreferredLanguage>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<PaymentMethodOptionsSofortSetupFutureUsage>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsSofortPreferredLanguage:
    docs: >-
      Preferred language of the SOFORT authorization page that the customer is
      redirected to.
    enum:
      - de
      - en
      - es
      - fr
      - it
      - nl
      - pl
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsSofortSetupFutureUsage:
    docs: >-
      Indicates that you intend to make future payments with this
      PaymentIntent's payment method.


      If you provide a Customer with the PaymentIntent, you can use this
      parameter to [attach the payment method](/payments/save-during-payment) to
      the Customer after the PaymentIntent is confirmed and the customer
      completes any required actions. If you don't provide a Customer, you can
      still [attach](/api/payment_methods/attach) the payment method to a
      Customer after the transaction completes.


      If the payment method is `card_present` and isn't a digital wallet, Stripe
      creates and attaches a
      [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
      payment method representing the card to the Customer instead.


      When processing card payments, Stripe uses `setup_future_usage` to help
      you comply with regional legislation and network rules, such as
      [SCA](/strong-customer-authentication).
    enum:
      - none
      - off_session
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsTwint:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsUsBankAccountMandateOptions:
    docs: ''
    properties:
      collection_method:
        docs: Mandate collection method
        type: optional<literal<"paper">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsWechatPay:
    docs: ''
    properties:
      app_id:
        docs: >-
          The app ID registered with WeChat Pay. Only required when client is
          ios or android.
        type: optional<string>
        validation:
          maxLength: 5000
      client:
        docs: The client type that the end customer will pay from
        type: optional<PaymentMethodOptionsWechatPayClient>
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsWechatPayClient:
    docs: The client type that the end customer will pay from
    enum:
      - android
      - ios
      - web
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodOptionsZip:
    docs: ''
    properties:
      setup_future_usage:
        docs: >-
          Indicates that you intend to make future payments with this
          PaymentIntent's payment method.


          If you provide a Customer with the PaymentIntent, you can use this
          parameter to [attach the payment
          method](/payments/save-during-payment) to the Customer after the
          PaymentIntent is confirmed and the customer completes any required
          actions. If you don't provide a Customer, you can still
          [attach](/api/payment_methods/attach) the payment method to a Customer
          after the transaction completes.


          If the payment method is `card_present` and isn't a digital wallet,
          Stripe creates and attaches a
          [generated_card](/api/charges/object#charge_object-payment_method_details-card_present-generated_card)
          payment method representing the card to the Customer instead.


          When processing card payments, Stripe uses `setup_future_usage` to
          help you comply with regional legislation and network rules, such as
          [SCA](/strong-customer-authentication).
        type: optional<literal<"none">>
    source:
      openapi: ../openapi.yaml
  PaymentMethodOxxo:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodP24:
    docs: ''
    properties:
      bank:
        docs: The customer's bank, if provided.
        type: optional<PaymentMethodP24Bank>
    source:
      openapi: ../openapi.yaml
  PaymentMethodP24Bank:
    docs: The customer's bank, if provided.
    enum:
      - alior_bank
      - bank_millennium
      - bank_nowy_bfg_sa
      - bank_pekao_sa
      - banki_spbdzielcze
      - blik
      - bnp_paribas
      - boz
      - citi_handlowy
      - credit_agricole
      - envelobank
      - etransfer_pocztowy24
      - getin_bank
      - ideabank
      - ing
      - inteligo
      - mbank_mtransfer
      - nest_przelew
      - noble_pay
      - pbac_z_ipko
      - plus_bank
      - santander_przelew24
      - tmobile_usbugi_bankowe
      - toyota_bank
      - velobank
      - volkswagen_bank
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodPayByBank:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodPayco:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodPaynow:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodPaypal:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter ISO code representing the buyer's country. Values are
          provided by PayPal directly (if supported) at the time of
          authorization or settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_email:
        docs: >-
          Owner's email. Values are provided by PayPal directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      payer_id:
        docs: >-
          PayPal account PayerID. This identifier uniquely identifies the PayPal
          customer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodPix:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodPromptpay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodRevolutPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodSamsungPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodSepaDebit:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      branch_code:
        docs: Branch code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_from:
        docs: Information about the object that generated this PaymentMethod.
        type: optional<SepaDebitGeneratedFrom>
      last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodSofort:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter ISO code representing the country the bank account is
          located in.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentMethodSwish:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodTwint:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodType:
    docs: >-
      The type of the PaymentMethod. An additional hash is included on the
      PaymentMethod with a name matching this value. It contains additional
      information specific to the PaymentMethod type.
    enum:
      - acss_debit
      - affirm
      - afterpay_clearpay
      - alipay
      - alma
      - amazon_pay
      - au_becs_debit
      - bacs_debit
      - bancontact
      - blik
      - boleto
      - card
      - card_present
      - cashapp
      - customer_balance
      - eps
      - fpx
      - giropay
      - grabpay
      - ideal
      - interac_present
      - kakao_pay
      - klarna
      - konbini
      - kr_card
      - link
      - mobilepay
      - multibanco
      - naver_pay
      - oxxo
      - p24
      - pay_by_bank
      - payco
      - paynow
      - paypal
      - pix
      - promptpay
      - revolut_pay
      - samsung_pay
      - sepa_debit
      - sofort
      - swish
      - twint
      - us_bank_account
      - wechat_pay
      - zip
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodUpdated:
    docs: >-
      Occurs whenever a payment method is updated via the [PaymentMethod update
      API](https://docs.stripe.com/api/payment_methods/update).
    properties:
      object:
        type: PaymentMethod
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccount:
    docs: ''
    properties:
      account_holder_type:
        docs: 'Account holder type: individual or company.'
        type: optional<PaymentMethodUsBankAccountAccountHolderType>
      account_type:
        docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
        type: optional<PaymentMethodUsBankAccountAccountType>
      bank_name:
        docs: The name of the bank.
        type: optional<string>
        validation:
          maxLength: 5000
      financial_connections_account:
        docs: >-
          The ID of the Financial Connections Account used to create the payment
          method.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: >-
          Uniquely identifies this particular bank account. You can use this
          attribute to check whether two bank accounts are the same.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      networks:
        docs: Contains information about US bank account networks that can be used.
        type: optional<UsBankAccountNetworks>
      routing_number:
        docs: Routing number of the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      status_details:
        docs: >-
          Contains information about the future reusability of this
          PaymentMethod.
        type: optional<PaymentMethodUsBankAccountStatusDetails>
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountAccountHolderType:
    docs: 'Account holder type: individual or company.'
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountAccountType:
    docs: 'Account type: checkings or savings. Defaults to checking if omitted.'
    enum:
      - checking
      - savings
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountBlocked:
    docs: ''
    properties:
      network_code:
        docs: The ACH network code that resulted in this block.
        type: optional<PaymentMethodUsBankAccountBlockedNetworkCode>
      reason:
        docs: The reason why this PaymentMethod's fingerprint has been blocked
        type: optional<PaymentMethodUsBankAccountBlockedReason>
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountBlockedNetworkCode:
    docs: The ACH network code that resulted in this block.
    enum:
      - R02
      - R03
      - R04
      - R05
      - R07
      - R08
      - R10
      - R11
      - R16
      - R20
      - R29
      - R31
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountBlockedReason:
    docs: The reason why this PaymentMethod's fingerprint has been blocked
    enum:
      - bank_account_closed
      - bank_account_frozen
      - bank_account_invalid_details
      - bank_account_restricted
      - bank_account_unusable
      - debit_not_authorized
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentMethodUsBankAccountStatusDetails:
    docs: ''
    properties:
      blocked:
        type: optional<PaymentMethodUsBankAccountBlocked>
    source:
      openapi: ../openapi.yaml
  PaymentMethodWechatPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentMethodZip:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionAdaptivePricing:
    docs: ''
    properties:
      enabled:
        docs: Whether Adaptive Pricing is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionAfterExpiration:
    docs: ''
    properties:
      recovery:
        docs: >-
          When set, configuration used to recover the Checkout Session on
          expiry.
        type: optional<PaymentPagesCheckoutSessionAfterExpirationRecovery>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionAfterExpirationRecovery:
    docs: ''
    properties:
      allow_promotion_codes:
        docs: >-
          Enables user redeemable promotion codes on the recovered Checkout
          Sessions. Defaults to `false`
        type: boolean
      enabled:
        docs: >-
          If `true`, a recovery url will be generated to recover this Checkout
          Session if it

          expires before a transaction is completed. It will be attached to the

          Checkout Session object upon expiration.
        type: boolean
      expires_at:
        docs: The timestamp at which the recovery URL will expire.
        type: optional<integer>
      url:
        docs: >-
          URL that creates a new Checkout Session when clicked that is a copy of
          this expired Checkout Session
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionAutomaticTax:
    docs: ''
    properties:
      enabled:
        docs: Indicates whether automatic tax is enabled for the session
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
      status:
        docs: >-
          The status of the most recent automated tax calculation for this
          session.
        type: optional<PaymentPagesCheckoutSessionAutomaticTaxStatus>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionAutomaticTaxStatus:
    docs: The status of the most recent automated tax calculation for this session.
    enum:
      - complete
      - failed
      - requires_location_inputs
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionConsent:
    docs: ''
    properties:
      promotions:
        docs: >-
          If `opt_in`, the customer consents to receiving promotional
          communications

          from the merchant about this Checkout Session.
        type: optional<PaymentPagesCheckoutSessionConsentPromotions>
      terms_of_service:
        docs: >-
          If `accepted`, the customer in this Checkout Session has agreed to the
          merchant's terms of service.
        type: optional<literal<"accepted">>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionConsentCollection:
    docs: ''
    properties:
      payment_method_reuse_agreement:
        docs: >-
          If set to `hidden`, it will hide legal text related to the reuse of a
          payment method.
        type: optional<PaymentPagesCheckoutSessionPaymentMethodReuseAgreement>
      promotions:
        docs: >-
          If set to `auto`, enables the collection of customer consent for
          promotional communications. The Checkout

          Session will determine whether to display an option to opt into
          promotional communication

          from the merchant depending on the customer's locale. Only available
          to US merchants.
        type: optional<PaymentPagesCheckoutSessionConsentCollectionPromotions>
      terms_of_service:
        docs: >-
          If set to `required`, it requires customers to accept the terms of
          service before being able to pay.
        type: optional<PaymentPagesCheckoutSessionConsentCollectionTermsOfService>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionConsentCollectionPromotions:
    docs: >-
      If set to `auto`, enables the collection of customer consent for
      promotional communications. The Checkout

      Session will determine whether to display an option to opt into
      promotional communication

      from the merchant depending on the customer's locale. Only available to US
      merchants.
    enum:
      - auto
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionConsentCollectionTermsOfService:
    docs: >-
      If set to `required`, it requires customers to accept the terms of service
      before being able to pay.
    enum:
      - none
      - required
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionConsentPromotions:
    docs: |-
      If `opt_in`, the customer consents to receiving promotional communications
      from the merchant about this Checkout Session.
    enum:
      - opt_in
      - opt_out
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCurrencyConversion:
    docs: ''
    properties:
      amount_subtotal:
        docs: >-
          Total of all items in source currency before discounts or taxes are
          applied.
        type: integer
      amount_total:
        docs: >-
          Total of all items in source currency after discounts and taxes are
          applied.
        type: integer
      fx_rate:
        docs: >-
          Exchange rate used to convert source currency amounts to customer
          currency amounts
        type: string
      source_currency:
        docs: Creation currency of the CheckoutSession before localization
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomerDetails:
    docs: ''
    properties:
      address:
        docs: >-
          The customer's address after a completed Checkout Session. Note: This
          property is populated only for sessions on or after March 30, 2022.
        type: optional<Address>
      email:
        docs: >-
          The email associated with the Customer, if one exists, on the Checkout
          Session after a completed Checkout Session or at time of session
          expiry.

          Otherwise, if the customer has consented to promotional content, this
          value is the most recent valid email provided by the customer on the
          Checkout form.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: >-
          The customer's name after a completed Checkout Session. Note: This
          property is populated only for sessions on or after March 30, 2022.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: The customer's phone number after a completed Checkout Session.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_exempt:
        docs: The customer’s tax exempt status after a completed Checkout Session.
        type: optional<PaymentPagesCheckoutSessionCustomerDetailsTaxExempt>
      tax_ids:
        docs: The customer’s tax IDs after a completed Checkout Session.
        type: optional<list<PaymentPagesCheckoutSessionTaxId>>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomerDetailsTaxExempt:
    docs: The customer’s tax exempt status after a completed Checkout Session.
    enum:
      - exempt
      - none
      - reverse
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFields:
    docs: ''
    properties:
      dropdown:
        type: optional<PaymentPagesCheckoutSessionCustomFieldsDropdown>
      key:
        docs: >-
          String of your choice that your integration can use to reconcile this
          field. Must be unique to this field, alphanumeric, and up to 200
          characters.
        type: string
        validation:
          maxLength: 5000
      label:
        type: PaymentPagesCheckoutSessionCustomFieldsLabel
      numeric:
        type: optional<PaymentPagesCheckoutSessionCustomFieldsNumeric>
      optional:
        docs: >-
          Whether the customer is required to complete the field before
          completing the Checkout Session. Defaults to `false`.
        type: boolean
      text:
        type: optional<PaymentPagesCheckoutSessionCustomFieldsText>
      type:
        docs: The type of the field.
        type: PaymentPagesCheckoutSessionCustomFieldsType
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsDropdown:
    docs: ''
    properties:
      default_value:
        docs: The value that will pre-fill on the payment page.
        type: optional<string>
        validation:
          maxLength: 5000
      options:
        docs: >-
          The options available for the customer to select. Up to 200 options
          allowed.
        type: list<PaymentPagesCheckoutSessionCustomFieldsOption>
      value:
        docs: >-
          The option selected by the customer. This will be the `value` for the
          option.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsLabel:
    docs: ''
    properties:
      custom:
        docs: >-
          Custom text for the label, displayed to the customer. Up to 50
          characters.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The type of the label.
        type: literal<"custom">
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsNumeric:
    docs: ''
    properties:
      default_value:
        docs: The value that will pre-fill the field on the payment page.
        type: optional<string>
        validation:
          maxLength: 5000
      maximum_length:
        docs: The maximum character length constraint for the customer's input.
        type: optional<integer>
      minimum_length:
        docs: The minimum character length requirement for the customer's input.
        type: optional<integer>
      value:
        docs: The value entered by the customer, containing only digits.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsOption:
    docs: ''
    properties:
      label:
        docs: >-
          The label for the option, displayed to the customer. Up to 100
          characters.
        type: string
        validation:
          maxLength: 5000
      value:
        docs: >-
          The value for this option, not displayed to the customer, used by your
          integration to reconcile the option selected by the customer. Must be
          unique to this option, alphanumeric, and up to 100 characters.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsText:
    docs: ''
    properties:
      default_value:
        docs: The value that will pre-fill the field on the payment page.
        type: optional<string>
        validation:
          maxLength: 5000
      maximum_length:
        docs: The maximum character length constraint for the customer's input.
        type: optional<integer>
      minimum_length:
        docs: The minimum character length requirement for the customer's input.
        type: optional<integer>
      value:
        docs: The value entered by the customer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomFieldsType:
    docs: The type of the field.
    enum:
      - dropdown
      - numeric
      - text
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomText:
    docs: ''
    properties:
      after_submit:
        docs: >-
          Custom text that should be displayed after the payment confirmation
          button.
        type: optional<PaymentPagesCheckoutSessionCustomTextPosition>
      shipping_address:
        docs: >-
          Custom text that should be displayed alongside shipping address
          collection.
        type: optional<PaymentPagesCheckoutSessionCustomTextPosition>
      submit:
        docs: >-
          Custom text that should be displayed alongside the payment
          confirmation button.
        type: optional<PaymentPagesCheckoutSessionCustomTextPosition>
      terms_of_service_acceptance:
        docs: >-
          Custom text that should be displayed in place of the default terms of
          service agreement text.
        type: optional<PaymentPagesCheckoutSessionCustomTextPosition>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionCustomTextPosition:
    docs: ''
    properties:
      message:
        docs: Text may be up to 1200 characters in length.
        type: string
        validation:
          maxLength: 500
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionDiscount:
    docs: ''
    properties:
      coupon:
        docs: Coupon attached to the Checkout Session.
        type: optional<PaymentPagesCheckoutSessionDiscountCoupon>
      promotion_code:
        docs: Promotion code attached to the Checkout Session.
        type: optional<PaymentPagesCheckoutSessionDiscountPromotionCode>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionDiscountCoupon:
    discriminated: false
    docs: Coupon attached to the Checkout Session.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Coupon
  PaymentPagesCheckoutSessionDiscountPromotionCode:
    discriminated: false
    docs: Promotion code attached to the Checkout Session.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PromotionCode
  PaymentPagesCheckoutSessionInvoiceCreation:
    docs: ''
    properties:
      enabled:
        docs: >-
          Indicates whether invoice creation is enabled for the Checkout
          Session.
        type: boolean
      invoice_data:
        type: PaymentPagesCheckoutSessionInvoiceSettings
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionInvoiceSettings:
    docs: ''
    properties:
      account_tax_ids:
        docs: The account tax IDs associated with the invoice.
        type: >-
          optional<list<PaymentPagesCheckoutSessionInvoiceSettingsAccountTaxIdsItem>>
      custom_fields:
        docs: Custom fields displayed on the invoice.
        type: optional<list<InvoiceSettingCustomField>>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      footer:
        docs: Footer displayed on the invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The connected account that issues the invoice. The invoice is
          presented with the branding and support information of the specified
          account.
        type: optional<ConnectAccountReference>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      rendering_options:
        docs: Options for invoice PDF rendering.
        type: optional<InvoiceSettingRenderingOptions>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionInvoiceSettingsAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  PaymentPagesCheckoutSessionPaymentMethodReuseAgreement:
    docs: ''
    properties:
      position:
        docs: >-
          Determines the position and visibility of the payment method reuse
          agreement in the UI. When set to `auto`, Stripe's defaults will be
          used.


          When set to `hidden`, the payment method reuse agreement text will
          always be hidden in the UI.
        type: PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionPaymentMethodReuseAgreementPosition:
    docs: >-
      Determines the position and visibility of the payment method reuse
      agreement in the UI. When set to `auto`, Stripe's defaults will be used.


      When set to `hidden`, the payment method reuse agreement text will always
      be hidden in the UI.
    enum:
      - auto
      - hidden
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionPhoneNumberCollection:
    docs: ''
    properties:
      enabled:
        docs: Indicates whether phone number collection is enabled for the session
        type: boolean
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionSavedPaymentMethodOptions:
    docs: ''
    properties:
      allow_redisplay_filters:
        docs: >-
          Uses the `allow_redisplay` value of each saved payment method to
          filter the set presented to a returning customer. By default, only
          saved payment methods with ’allow_redisplay: ‘always’ are shown in
          Checkout.
        type: >-
          optional<list<PaymentPagesCheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFiltersItem>>
      payment_method_remove:
        docs: >-
          Enable customers to choose if they wish to remove their saved payment
          methods. Disabled by default.
        type: >-
          optional<PaymentPagesCheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemove>
      payment_method_save:
        docs: >-
          Enable customers to choose if they wish to save their payment method
          for future use. Disabled by default.
        type: >-
          optional<PaymentPagesCheckoutSessionSavedPaymentMethodOptionsPaymentMethodSave>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionSavedPaymentMethodOptionsAllowRedisplayFiltersItem:
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionSavedPaymentMethodOptionsPaymentMethodRemove:
    docs: >-
      Enable customers to choose if they wish to remove their saved payment
      methods. Disabled by default.
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionSavedPaymentMethodOptionsPaymentMethodSave:
    docs: >-
      Enable customers to choose if they wish to save their payment method for
      future use. Disabled by default.
    enum:
      - disabled
      - enabled
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionShippingAddressCollection:
    docs: ''
    properties:
      allowed_countries:
        docs: >-
          An array of two-letter ISO country codes representing which countries
          Checkout should provide as options for

          shipping locations. Unsupported country codes: `AS, CX, CC, CU, HM,
          IR, KP, MH, FM, NF, MP, PW, SY, UM, VI`.
        type: >-
          list<PaymentPagesCheckoutSessionShippingAddressCollectionAllowedCountriesItem>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionShippingAddressCollectionAllowedCountriesItem:
    enum:
      - AC
      - AD
      - AE
      - AF
      - AG
      - AI
      - AL
      - AM
      - AO
      - AQ
      - AR
      - AT
      - AU
      - AW
      - AX
      - AZ
      - BA
      - BB
      - BD
      - BE
      - BF
      - BG
      - BH
      - BI
      - BJ
      - BL
      - BM
      - BN
      - BO
      - BQ
      - BR
      - BS
      - BT
      - BV
      - BW
      - BY
      - BZ
      - CA
      - CD
      - CF
      - CG
      - CH
      - CI
      - CK
      - CL
      - CM
      - CN
      - CO
      - CR
      - CV
      - CW
      - CY
      - CZ
      - DE
      - DJ
      - DK
      - DM
      - DO
      - DZ
      - EC
      - EE
      - EG
      - EH
      - ER
      - ES
      - ET
      - FI
      - FJ
      - FK
      - FO
      - FR
      - GA
      - GB
      - GD
      - GE
      - GF
      - GG
      - GH
      - GI
      - GL
      - GM
      - GN
      - GP
      - GQ
      - GR
      - GS
      - GT
      - GU
      - GW
      - GY
      - HK
      - HN
      - HR
      - HT
      - HU
      - ID
      - IE
      - IL
      - IM
      - IN
      - IO
      - IQ
      - IS
      - IT
      - JE
      - JM
      - JO
      - JP
      - KE
      - KG
      - KH
      - KI
      - KM
      - KN
      - KR
      - KW
      - KY
      - KZ
      - LA
      - LB
      - LC
      - LI
      - LK
      - LR
      - LS
      - LT
      - LU
      - LV
      - LY
      - MA
      - MC
      - MD
      - ME
      - MF
      - MG
      - MK
      - ML
      - MM
      - MN
      - MO
      - MQ
      - MR
      - MS
      - MT
      - MU
      - MV
      - MW
      - MX
      - MY
      - MZ
      - NA
      - NC
      - NE
      - NG
      - NI
      - NL
      - 'NO'
      - NP
      - NR
      - NU
      - NZ
      - OM
      - PA
      - PE
      - PF
      - PG
      - PH
      - PK
      - PL
      - PM
      - PN
      - PR
      - PS
      - PT
      - PY
      - QA
      - RE
      - RO
      - RS
      - RU
      - RW
      - SA
      - SB
      - SC
      - SD
      - SE
      - SG
      - SH
      - SI
      - SJ
      - SK
      - SL
      - SM
      - SN
      - SO
      - SR
      - SS
      - ST
      - SV
      - SX
      - SZ
      - TA
      - TC
      - TD
      - TF
      - TG
      - TH
      - TJ
      - TK
      - TL
      - TM
      - TN
      - TO
      - TR
      - TT
      - TV
      - TW
      - TZ
      - UA
      - UG
      - US
      - UY
      - UZ
      - VA
      - VC
      - VE
      - VG
      - VN
      - VU
      - WF
      - WS
      - XK
      - YE
      - YT
      - ZA
      - ZM
      - ZW
      - ZZ
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionShippingCost:
    docs: ''
    properties:
      amount_subtotal:
        docs: Total shipping cost before any discounts or taxes are applied.
        type: integer
      amount_tax:
        docs: >-
          Total tax amount applied due to shipping costs. If no tax was applied,
          defaults to 0.
        type: integer
      amount_total:
        docs: Total shipping cost after discounts and taxes are applied.
        type: integer
      shipping_rate:
        docs: The ID of the ShippingRate for this order.
        type: optional<PaymentPagesCheckoutSessionShippingCostShippingRate>
      taxes:
        docs: The taxes applied to the shipping rate.
        type: optional<list<LineItemsTaxAmount>>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionShippingCostShippingRate:
    discriminated: false
    docs: The ID of the ShippingRate for this order.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ShippingRate
  PaymentPagesCheckoutSessionShippingOption:
    docs: ''
    properties:
      shipping_amount:
        docs: A non-negative integer in cents representing how much to charge.
        type: integer
      shipping_rate:
        docs: The shipping rate.
        type: PaymentPagesCheckoutSessionShippingOptionShippingRate
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionShippingOptionShippingRate:
    discriminated: false
    docs: The shipping rate.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ShippingRate
  PaymentPagesCheckoutSessionTaxId:
    docs: ''
    properties:
      type:
        docs: >-
          The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`,
          `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`,
          `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`,
          `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`,
          `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`,
          `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`,
          `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`,
          `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`,
          `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`,
          `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`,
          `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`,
          `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, `tz_vat`,
          `uz_vat`, `uz_tin`, `md_vat`, `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`,
          `bb_tin`, `cd_nif`, `mr_nif`, `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`,
          `mk_vat`, `sr_fin`, `sn_ninea`, `am_tin`, `np_pan`, `tj_tin`,
          `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
        type: PaymentPagesCheckoutSessionTaxIdType
      value:
        docs: The value of the tax ID.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionTaxIdCollection:
    docs: ''
    properties:
      enabled:
        docs: Indicates whether tax ID collection is enabled for the session
        type: boolean
      required:
        docs: Indicates whether a tax ID is required on the payment page
        type: PaymentPagesCheckoutSessionTaxIdCollectionRequired
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionTaxIdCollectionRequired:
    docs: Indicates whether a tax ID is required on the payment page
    enum:
      - if_supported
      - never
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionTaxIdType:
    docs: >-
      The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`,
      `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`,
      `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`,
      `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`,
      `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`,
      `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`,
      `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`, `us_ein`, `kr_brn`,
      `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`,
      `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`,
      `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`,
      `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`, `bh_vat`, `kz_bin`, `ng_tin`,
      `om_vat`, `de_stn`, `ch_uid`, `tz_vat`, `uz_vat`, `uz_tin`, `md_vat`,
      `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`, `bb_tin`, `cd_nif`, `mr_nif`,
      `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`, `mk_vat`, `sr_fin`, `sn_ninea`,
      `am_tin`, `np_pan`, `tj_tin`, `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
    enum:
      - ad_nrt
      - ae_trn
      - al_tin
      - am_tin
      - ao_tin
      - ar_cuit
      - au_abn
      - au_arn
      - ba_tin
      - bb_tin
      - bg_uic
      - bh_vat
      - bo_tin
      - br_cnpj
      - br_cpf
      - bs_tin
      - by_tin
      - ca_bn
      - ca_gst_hst
      - ca_pst_bc
      - ca_pst_mb
      - ca_pst_sk
      - ca_qst
      - cd_nif
      - ch_uid
      - ch_vat
      - cl_tin
      - cn_tin
      - co_nit
      - cr_tin
      - de_stn
      - do_rcn
      - ec_ruc
      - eg_tin
      - es_cif
      - eu_oss_vat
      - eu_vat
      - gb_vat
      - ge_vat
      - gn_nif
      - hk_br
      - hr_oib
      - hu_tin
      - id_npwp
      - il_vat
      - in_gst
      - is_vat
      - jp_cn
      - jp_rn
      - jp_trn
      - ke_pin
      - kh_tin
      - kr_brn
      - kz_bin
      - li_uid
      - li_vat
      - ma_vat
      - md_vat
      - me_pib
      - mk_vat
      - mr_nif
      - mx_rfc
      - my_frp
      - my_itn
      - my_sst
      - ng_tin
      - no_vat
      - no_voec
      - np_pan
      - nz_gst
      - om_vat
      - pe_ruc
      - ph_tin
      - ro_tin
      - rs_pib
      - ru_inn
      - ru_kpp
      - sa_vat
      - sg_gst
      - sg_uen
      - si_tin
      - sn_ninea
      - sr_fin
      - sv_nit
      - th_vat
      - tj_tin
      - tr_tin
      - tw_vat
      - tz_vat
      - ua_vat
      - ug_tin
      - unknown
      - us_ein
      - uy_ruc
      - uz_tin
      - uz_vat
      - ve_rif
      - vn_tin
      - za_vat
      - zm_tin
      - zw_tin
    inline: true
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionTotalDetails:
    docs: ''
    properties:
      amount_discount:
        docs: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        docs: This is the sum of all the shipping amounts.
        type: optional<integer>
      amount_tax:
        docs: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        type: optional<PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown>
    source:
      openapi: ../openapi.yaml
  PaymentPagesCheckoutSessionTotalDetailsResourceBreakdown:
    docs: ''
    properties:
      discounts:
        docs: The aggregated discounts.
        type: list<LineItemsDiscountAmount>
      taxes:
        docs: The aggregated tax amounts by rate.
        type: list<LineItemsTaxAmount>
    source:
      openapi: ../openapi.yaml
  PaymentSource:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: Account
      - type: BankAccount
      - type: Card
      - type: Source
  Payout:
    docs: >-
      A `Payout` object is created when you receive funds from Stripe, or when
      you

      initiate a payout to either a bank account or debit card of a [connected

      Stripe account](/docs/connect/bank-debit-card-payouts). You can retrieve
      individual payouts,

      and list all payouts. Payouts are made on [varying

      schedules](/docs/connect/manage-payout-schedule), depending on your
      country and

      industry.


      Related guide: [Receiving payouts](https://stripe.com/docs/payouts)
    properties:
      amount:
        docs: >-
          The amount (in cents (or local equivalent)) that transfers to your
          bank account or debit card.
        type: integer
      application_fee:
        docs: >-
          The application fee (if any) for the payout. [See the Connect
          documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees)
          for details.
        type: optional<PayoutApplicationFee>
      application_fee_amount:
        docs: >-
          The amount of the application fee (if any) requested for the payout.
          [See the Connect
          documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees)
          for details.
        type: optional<integer>
      arrival_date:
        docs: >-
          Date that you can expect the payout to arrive in the bank. This
          factors in delays to account for weekends or bank holidays.
        type: integer
      automatic:
        docs: >-
          Returns `true` if the payout is created by an [automated payout
          schedule](https://stripe.com/docs/payouts#payout-schedule) and `false`
          if it's [requested
          manually](https://stripe.com/docs/payouts#manual-payouts).
        type: boolean
      balance_transaction:
        docs: >-
          ID of the balance transaction that describes the impact of this payout
          on your account balance.
        type: optional<PayoutBalanceTransaction>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      destination:
        docs: ID of the bank account or card the payout is sent to.
        type: optional<PayoutDestination>
      failure_balance_transaction:
        docs: >-
          If the payout fails or cancels, this is the ID of the balance
          transaction that reverses the initial balance transaction and returns
          the funds from the failed payout back in your balance.
        type: optional<PayoutFailureBalanceTransaction>
      failure_code:
        docs: >-
          Error code that provides a reason for a payout failure, if available.
          View our [list of failure
          codes](https://stripe.com/docs/api#payout_failures).
        type: optional<string>
        validation:
          maxLength: 5000
      failure_message:
        docs: Message that provides the reason for a payout failure, if available.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      method:
        docs: >-
          The method used to send this payout, which can be `standard` or
          `instant`. `instant` is supported for payouts to debit cards and bank
          accounts in certain countries. Learn more about [bank support for
          Instant
          Payouts](https://stripe.com/docs/payouts/instant-payouts-banks).
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"payout">
      original_payout:
        docs: If the payout reverses another, this is the ID of the original payout.
        type: optional<PayoutOriginalPayout>
      reconciliation_status:
        docs: >-
          If `completed`, you can use the [Balance Transactions
          API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout)
          to list all balance transactions that are paid out in this payout.
        type: PayoutReconciliationStatus
      reversed_by:
        docs: >-
          If the payout reverses, this is the ID of the payout that reverses
          this payout.
        type: optional<PayoutReversedBy>
      source_type:
        docs: >-
          The source balance this payout came from, which can be one of the
          following: `card`, `fpx`, or `bank_account`.
        type: string
        validation:
          maxLength: 5000
      statement_descriptor:
        docs: >-
          Extra information about a payout that displays on the user's bank
          statement.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          Current status of the payout: `paid`, `pending`, `in_transit`,
          `canceled` or `failed`. A payout is `pending` until it's submitted to
          the bank, when it becomes `in_transit`. The status changes to `paid`
          if the transaction succeeds, or to `failed` or `canceled` (within 5
          business days). Some payouts that fail might initially show as `paid`,
          then change to `failed`.
        type: string
        validation:
          maxLength: 5000
      trace_id:
        docs: >-
          A value that generates from the beneficiary's bank that allows users
          to track payouts with their bank. Banks might call this a "reference
          number" or something similar.
        type: optional<PayoutsTraceId>
      type:
        docs: Can be `bank_account` or `card`.
        type: PayoutType
    source:
      openapi: ../openapi.yaml
  PayoutApplicationFee:
    discriminated: false
    docs: >-
      The application fee (if any) for the payout. [See the Connect
      documentation](https://stripe.com/docs/connect/instant-payouts#monetization-and-fees)
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ApplicationFee
  PayoutBalanceTransaction:
    discriminated: false
    docs: >-
      ID of the balance transaction that describes the impact of this payout on
      your account balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  PayoutCanceled:
    docs: Occurs whenever a payout is canceled.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PayoutCreated:
    docs: Occurs whenever a payout is created.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PayoutDestination:
    discriminated: false
    docs: ID of the bank account or card the payout is sent to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: ExternalAccount
      - type: DeletedExternalAccount
  PayoutFailed:
    docs: Occurs whenever a payout attempt fails.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PayoutFailureBalanceTransaction:
    discriminated: false
    docs: >-
      If the payout fails or cancels, this is the ID of the balance transaction
      that reverses the initial balance transaction and returns the funds from
      the failed payout back in your balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  PayoutOriginalPayout:
    discriminated: false
    docs: If the payout reverses another, this is the ID of the original payout.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Payout
  PayoutPaid:
    docs: >-
      Occurs whenever a payout is *expected* to be available in the destination
      account. If the payout fails, a `payout.failed` notification is also sent,
      at a later time.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PayoutReconciliationCompleted:
    docs: >-
      Occurs whenever balance transactions paid out in an automatic payout can
      be queried.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PayoutReconciliationStatus:
    docs: >-
      If `completed`, you can use the [Balance Transactions
      API](https://stripe.com/docs/api/balance_transactions/list#balance_transaction_list-payout)
      to list all balance transactions that are paid out in this payout.
    enum:
      - completed
      - in_progress
      - not_applicable
    inline: true
    source:
      openapi: ../openapi.yaml
  PayoutReversedBy:
    discriminated: false
    docs: >-
      If the payout reverses, this is the ID of the payout that reverses this
      payout.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Payout
  PayoutsTraceId:
    docs: ''
    properties:
      status:
        docs: >-
          Possible values are `pending`, `supported`, and `unsupported`. When
          `payout.status` is `pending` or `in_transit`, this will be `pending`.
          When the payout transitions to `paid`, `failed`, or `canceled`, this
          status will become `supported` or `unsupported` shortly after in most
          cases. In some cases, this may appear as `pending` for up to 10 days
          after `arrival_date` until transitioning to `supported` or
          `unsupported`.
        type: string
        validation:
          maxLength: 5000
      value:
        docs: >-
          The trace ID value if `trace_id.status` is `supported`, otherwise
          `nil`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PayoutType:
    docs: Can be `bank_account` or `card`.
    enum:
      - bank_account
      - card
    inline: true
    source:
      openapi: ../openapi.yaml
  PayoutUpdated:
    docs: Occurs whenever a payout is updated.
    properties:
      object:
        type: Payout
    source:
      openapi: ../openapi.yaml
  PaypalSellerProtection:
    docs: ''
    properties:
      dispute_categories:
        docs: >-
          An array of conditions that are covered for the transaction, if
          applicable.
        type: optional<list<PaypalSellerProtectionDisputeCategoriesItem>>
      status:
        docs: >-
          Indicates whether the transaction is eligible for PayPal's seller
          protection.
        type: PaypalSellerProtectionStatus
    source:
      openapi: ../openapi.yaml
  PaypalSellerProtectionDisputeCategoriesItem:
    enum:
      - fraudulent
      - product_not_received
    inline: true
    source:
      openapi: ../openapi.yaml
  PaypalSellerProtectionStatus:
    docs: >-
      Indicates whether the transaction is eligible for PayPal's seller
      protection.
    enum:
      - eligible
      - not_eligible
      - partially_eligible
    inline: true
    source:
      openapi: ../openapi.yaml
  Period:
    docs: ''
    properties:
      end:
        docs: >-
          The end date of this usage period. All usage up to and including this
          point in time is included.
        type: optional<integer>
      start:
        docs: >-
          The start date of this usage period. All usage after this point in
          time is included.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  Person:
    docs: >-
      This is an object representing a person associated with a Stripe account.


      A platform cannot access a person for an account where
      [account.controller.requirement_collection](/api/accounts/object#account_object-controller-requirement_collection)
      is `stripe`, which includes Standard and Express accounts, after creating
      an Account Link or Account Session to start Connect onboarding.


      See the [Standard onboarding](/connect/standard-accounts) or [Express
      onboarding](/connect/express-accounts) documentation for information about
      prefilling information and account onboarding steps. Learn more about
      [handling identity verification with the
      API](/connect/handling-api-verification#person-information).
    properties:
      account:
        docs: The account the person is associated with.
        type: optional<string>
        validation:
          maxLength: 5000
      additional_tos_acceptances:
        type: optional<PersonAdditionalTosAcceptances>
      address:
        type: optional<Address>
      address_kana:
        docs: The Kana variation of the person's address (Japan only).
        type: optional<LegalEntityJapanAddress>
      address_kanji:
        docs: The Kanji variation of the person's address (Japan only).
        type: optional<LegalEntityJapanAddress>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      dob:
        type: optional<LegalEntityDob>
      email:
        docs: The person's email address.
        type: optional<string>
        validation:
          maxLength: 5000
      first_name:
        docs: The person's first name.
        type: optional<string>
        validation:
          maxLength: 5000
      first_name_kana:
        docs: The Kana variation of the person's first name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      first_name_kanji:
        docs: The Kanji variation of the person's first name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      full_name_aliases:
        docs: A list of alternate names or aliases that the person is known by.
        type: optional<list<string>>
      future_requirements:
        docs: >-
          Information about the [upcoming new requirements for this
          person](https://stripe.com/docs/connect/custom-accounts/future-requirements),
          including what information needs to be collected, and by when.
        type: optional<PersonFutureRequirements>
      gender:
        docs: The person's gender.
        type: optional<string>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      id_number_provided:
        docs: >-
          Whether the person's `id_number` was provided. True if either the full
          ID number was provided or if only the required part of the ID number
          was provided (ex. last four of an individual's SSN for the US
          indicated by `ssn_last_4_provided`).
        type: optional<boolean>
      id_number_secondary_provided:
        docs: Whether the person's `id_number_secondary` was provided.
        type: optional<boolean>
      last_name:
        docs: The person's last name.
        type: optional<string>
        validation:
          maxLength: 5000
      last_name_kana:
        docs: The Kana variation of the person's last name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      last_name_kanji:
        docs: The Kanji variation of the person's last name (Japan only).
        type: optional<string>
        validation:
          maxLength: 5000
      maiden_name:
        docs: The person's maiden name.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, string>>
      nationality:
        docs: The country where the person is a national.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"person">
      phone:
        docs: The person's phone number.
        type: optional<string>
        validation:
          maxLength: 5000
      political_exposure:
        docs: >-
          Indicates if the person or any of their representatives, family
          members, or other closely related persons, declares that they hold or
          have held an important public job or function, in any jurisdiction.
        type: optional<PersonPoliticalExposure>
      registered_address:
        type: optional<Address>
      relationship:
        type: optional<PersonRelationship>
      requirements:
        docs: >-
          Information about the requirements for this person, including what
          information needs to be collected, and by when.
        type: optional<PersonRequirements>
      ssn_last_4_provided:
        docs: >-
          Whether the last four digits of the person's Social Security number
          have been provided (U.S. only).
        type: optional<boolean>
      verification:
        type: optional<LegalEntityPersonVerification>
    source:
      openapi: ../openapi.yaml
  PersonAdditionalTosAcceptance:
    docs: ''
    properties:
      date:
        docs: >-
          The Unix timestamp marking when the legal guardian accepted the
          service agreement.
        type: optional<integer>
      ip:
        docs: >-
          The IP address from which the legal guardian accepted the service
          agreement.
        type: optional<string>
        validation:
          maxLength: 5000
      user_agent:
        docs: >-
          The user agent of the browser from which the legal guardian accepted
          the service agreement.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PersonAdditionalTosAcceptances:
    docs: ''
    properties:
      account:
        docs: >-
          Details on the legal guardian's acceptance of the main Stripe service
          agreement.
        type: optional<PersonAdditionalTosAcceptance>
    source:
      openapi: ../openapi.yaml
  PersonCreated:
    docs: Occurs whenever a person associated with an account is created.
    properties:
      object:
        type: Person
    source:
      openapi: ../openapi.yaml
  PersonDeleted:
    docs: Occurs whenever a person associated with an account is deleted.
    properties:
      object:
        type: Person
    source:
      openapi: ../openapi.yaml
  PersonFutureRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the person's account enabled.
          If not collected by the account's
          `future_requirements[current_deadline]`, these fields will transition
          to the main `requirements` hash, and may immediately become
          `past_due`, but the account may also be given a grace period depending
          on the account's enablement state prior to transition.
        type: list<string>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: list<AccountRequirementsError>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well, and the
          account's `future_requirements[current_deadline]` becomes set.
        type: list<string>
      past_due:
        docs: >-
          Fields that weren't collected by the account's
          `requirements.current_deadline`. These fields need to be collected to
          enable the person's account. New fields will never appear here;
          `future_requirements.past_due` will always be a subset of
          `requirements.past_due`.
        type: list<string>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due` or `currently_due`. Fields might appear in
          `eventually_due` or `currently_due` and in `pending_verification` if
          verification fails but another verification is still pending.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  PersonPoliticalExposure:
    docs: >-
      Indicates if the person or any of their representatives, family members,
      or other closely related persons, declares that they hold or have held an
      important public job or function, in any jurisdiction.
    enum:
      - existing
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  PersonRelationship:
    docs: ''
    properties:
      authorizer:
        docs: Whether the person is the authorizer of the account's representative.
        type: optional<boolean>
      director:
        docs: >-
          Whether the person is a director of the account's legal entity.
          Directors are typically members of the governing board of the company,
          or responsible for ensuring the company meets its regulatory
          obligations.
        type: optional<boolean>
      executive:
        docs: >-
          Whether the person has significant responsibility to control, manage,
          or direct the organization.
        type: optional<boolean>
      legal_guardian:
        docs: >-
          Whether the person is the legal guardian of the account's
          representative.
        type: optional<boolean>
      owner:
        docs: Whether the person is an owner of the account’s legal entity.
        type: optional<boolean>
      percent_ownership:
        docs: The percent owned by the person of the account's legal entity.
        type: optional<double>
      representative:
        docs: >-
          Whether the person is authorized as the primary representative of the
          account. This is the person nominated by the business to provide
          information about themselves, and general information about the
          account. There can only be one representative at any given time. At
          the time the account is created, this person should be set to the
          person responsible for opening the account.
        type: optional<boolean>
      title:
        docs: The person's title (e.g., CEO, Support Engineer).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PersonRequirements:
    docs: ''
    properties:
      alternatives:
        docs: >-
          Fields that are due and can be satisfied by providing the
          corresponding alternative fields instead.
        type: optional<list<AccountRequirementsAlternative>>
      currently_due:
        docs: >-
          Fields that need to be collected to keep the person's account enabled.
          If not collected by the account's `current_deadline`, these fields
          appear in `past_due` as well, and the account is disabled.
        type: list<string>
      errors:
        docs: >-
          Fields that are `currently_due` and need to be collected again because
          validation or verification failed.
        type: list<AccountRequirementsError>
      eventually_due:
        docs: >-
          Fields you must collect when all thresholds are reached. As they
          become required, they appear in `currently_due` as well, and the
          account's `current_deadline` becomes set.
        type: list<string>
      past_due:
        docs: >-
          Fields that weren't collected by the account's `current_deadline`.
          These fields need to be collected to enable the person's account.
        type: list<string>
      pending_verification:
        docs: >-
          Fields that might become required depending on the results of
          verification or review. It's an empty array unless an asynchronous
          verification is pending. If verification fails, these fields move to
          `eventually_due`, `currently_due`, or `past_due`. Fields might appear
          in `eventually_due`, `currently_due`, or `past_due` and in
          `pending_verification` if verification fails but another verification
          is still pending.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  PersonUpdated:
    docs: Occurs whenever a person associated with an account is updated.
    properties:
      object:
        type: Person
    source:
      openapi: ../openapi.yaml
  Plan:
    docs: >-
      You can now model subscriptions more flexibly using the [Prices
      API](https://stripe.com/docs/api#prices). It replaces the Plans API and is
      backwards compatible to simplify your migration.


      Plans define the base price, currency, and billing cycle for recurring
      purchases of products.

      [Products](https://stripe.com/docs/api#products) help you track inventory
      or provisioning, and plans help you track pricing. Different physical
      goods or levels of service should be represented by products, and pricing
      options should be represented by plans. This approach lets you change
      prices without having to change your provisioning scheme.


      For example, you might have a single "gold" product that has plans for
      $10/month, $100/year, €9/month, and €90/year.


      Related guides: [Set up a
      subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription)
      and more about [products and
      prices](https://stripe.com/docs/products-prices/overview).
    properties:
      active:
        docs: Whether the plan can be used for new purchases.
        type: boolean
      aggregate_usage:
        docs: >-
          Specifies a usage aggregation strategy for plans of
          `usage_type=metered`. Allowed values are `sum` for summing up all
          usage during a period, `last_during_period` for using the last usage
          record reported within a period, `last_ever` for using the last usage
          record ever (across period bounds) or `max` which uses the usage
          record with the maximum reported usage during a period. Defaults to
          `sum`.
        type: optional<PlanAggregateUsage>
      amount:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if
          `billing_scheme=per_unit`.
        type: optional<integer>
      amount_decimal:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only
          set if `billing_scheme=per_unit`.
        type: optional<string>
      billing_scheme:
        docs: >-
          Describes how to compute the price per period. Either `per_unit` or
          `tiered`. `per_unit` indicates that the fixed amount (specified in
          `amount`) will be charged per unit in `quantity` (for plans with
          `usage_type=licensed`), or per unit of total usage (for plans with
          `usage_type=metered`). `tiered` indicates that the unit pricing will
          be computed using a tiering strategy as defined using the `tiers` and
          `tiers_mode` attributes.
        type: PlanBillingScheme
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      interval:
        docs: >-
          The frequency at which a subscription is billed. One of `day`, `week`,
          `month` or `year`.
        type: PlanInterval
      interval_count:
        docs: >-
          The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and
          `interval_count=3` bills every 3 months.
        type: integer
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      meter:
        docs: The meter tracking the usage of a metered price
        type: optional<string>
        validation:
          maxLength: 5000
      nickname:
        docs: A brief description of the plan, hidden from customers.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"plan">
      product:
        docs: The product whose pricing this plan determines.
        type: optional<PlanProduct>
      tiers:
        docs: >-
          Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for
          `billing_scheme`.
        type: optional<list<PlanTier>>
      tiers_mode:
        docs: >-
          Defines if the tiering price should be `graduated` or `volume` based.
          In `volume`-based tiering, the maximum quantity within a period
          determines the per unit price. In `graduated` tiering, pricing can
          change as the quantity grows.
        type: optional<PlanTiersMode>
      transform_usage:
        docs: >-
          Apply a transformation to the reported usage or set quantity before
          computing the amount billed. Cannot be combined with `tiers`.
        type: optional<TransformUsage>
      trial_period_days:
        docs: >-
          Default number of trial days when subscribing a customer to this plan
          using
          [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: optional<integer>
      usage_type:
        docs: >-
          Configures how the quantity per period should be determined. Can be
          either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates
          the total usage based on usage records. Defaults to `licensed`.
        type: PlanUsageType
    source:
      openapi: ../openapi.yaml
  PlanAggregateUsage:
    docs: >-
      Specifies a usage aggregation strategy for plans of `usage_type=metered`.
      Allowed values are `sum` for summing up all usage during a period,
      `last_during_period` for using the last usage record reported within a
      period, `last_ever` for using the last usage record ever (across period
      bounds) or `max` which uses the usage record with the maximum reported
      usage during a period. Defaults to `sum`.
    enum:
      - last_during_period
      - last_ever
      - max
      - sum
    inline: true
    source:
      openapi: ../openapi.yaml
  PlanBillingScheme:
    docs: >-
      Describes how to compute the price per period. Either `per_unit` or
      `tiered`. `per_unit` indicates that the fixed amount (specified in
      `amount`) will be charged per unit in `quantity` (for plans with
      `usage_type=licensed`), or per unit of total usage (for plans with
      `usage_type=metered`). `tiered` indicates that the unit pricing will be
      computed using a tiering strategy as defined using the `tiers` and
      `tiers_mode` attributes.
    enum:
      - per_unit
      - tiered
    inline: true
    source:
      openapi: ../openapi.yaml
  PlanCreated:
    docs: Occurs whenever a plan is created.
    properties:
      object:
        type: Plan
    source:
      openapi: ../openapi.yaml
  PlanDeleted:
    docs: Occurs whenever a plan is deleted.
    properties:
      object:
        type: Plan
    source:
      openapi: ../openapi.yaml
  PlanInterval:
    docs: >-
      The frequency at which a subscription is billed. One of `day`, `week`,
      `month` or `year`.
    enum:
      - day
      - month
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  PlanProduct:
    discriminated: false
    docs: The product whose pricing this plan determines.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Product
      - type: DeletedProduct
  PlanTier:
    docs: ''
    properties:
      flat_amount:
        docs: Price for the entire tier.
        type: optional<integer>
      flat_amount_decimal:
        docs: >-
          Same as `flat_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
      unit_amount:
        docs: Per unit price for units relevant to the tier.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          Same as `unit_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
      up_to:
        docs: Up to and including to this quantity will be contained in the tier.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PlanTiersMode:
    docs: >-
      Defines if the tiering price should be `graduated` or `volume` based. In
      `volume`-based tiering, the maximum quantity within a period determines
      the per unit price. In `graduated` tiering, pricing can change as the
      quantity grows.
    enum:
      - graduated
      - volume
    inline: true
    source:
      openapi: ../openapi.yaml
  PlanUpdated:
    docs: Occurs whenever a plan is updated.
    properties:
      object:
        type: Plan
    source:
      openapi: ../openapi.yaml
  PlanUsageType:
    docs: >-
      Configures how the quantity per period should be determined. Can be either
      `metered` or `licensed`. `licensed` automatically bills the `quantity` set
      when adding it to a subscription. `metered` aggregates the total usage
      based on usage records. Defaults to `licensed`.
    enum:
      - licensed
      - metered
    inline: true
    source:
      openapi: ../openapi.yaml
  PlatformEarningFeeSource:
    docs: ''
    properties:
      charge:
        docs: Charge ID that created this application fee.
        type: optional<string>
        validation:
          maxLength: 5000
      payout:
        docs: Payout ID that created this application fee.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: >-
          Type of object that created the application fee, either `charge` or
          `payout`.
        type: PlatformEarningFeeSourceType
    source:
      openapi: ../openapi.yaml
  PlatformEarningFeeSourceType:
    docs: >-
      Type of object that created the application fee, either `charge` or
      `payout`.
    enum:
      - charge
      - payout
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalBusinessProfile:
    docs: ''
    properties:
      headline:
        docs: The messaging shown to customers in the portal.
        type: optional<string>
        validation:
          maxLength: 5000
      privacy_policy_url:
        docs: A link to the business’s publicly available privacy policy.
        type: optional<string>
        validation:
          maxLength: 5000
      terms_of_service_url:
        docs: A link to the business’s publicly available terms of service.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalCustomerUpdate:
    docs: ''
    properties:
      allowed_updates:
        docs: >-
          The types of customer updates that are supported. When empty,
          customers are not updateable.
        type: list<PortalCustomerUpdateAllowedUpdatesItem>
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PortalCustomerUpdateAllowedUpdatesItem:
    enum:
      - address
      - email
      - name
      - phone
      - shipping
      - tax_id
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalFeatures:
    docs: ''
    properties:
      customer_update:
        type: PortalCustomerUpdate
      invoice_history:
        type: PortalInvoiceList
      payment_method_update:
        type: PortalPaymentMethodUpdate
      subscription_cancel:
        type: PortalSubscriptionCancel
      subscription_update:
        type: PortalSubscriptionUpdate
    source:
      openapi: ../openapi.yaml
  PortalFlowsAfterCompletionHostedConfirmation:
    docs: ''
    properties:
      custom_message:
        docs: >-
          A custom message to display to the customer after the flow is
          completed.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsAfterCompletionRedirect:
    docs: ''
    properties:
      return_url:
        docs: >-
          The URL the customer will be redirected to after the flow is
          completed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsCouponOffer:
    docs: ''
    properties:
      coupon:
        docs: The ID of the coupon to be offered.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlow:
    docs: ''
    properties:
      after_completion:
        type: PortalFlowsFlowAfterCompletion
      subscription_cancel:
        docs: Configuration when `flow.type=subscription_cancel`.
        type: optional<PortalFlowsFlowSubscriptionCancel>
      subscription_update:
        docs: Configuration when `flow.type=subscription_update`.
        type: optional<PortalFlowsFlowSubscriptionUpdate>
      subscription_update_confirm:
        docs: Configuration when `flow.type=subscription_update_confirm`.
        type: optional<PortalFlowsFlowSubscriptionUpdateConfirm>
      type:
        docs: Type of flow that the customer will go through.
        type: PortalFlowsFlowType
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowAfterCompletion:
    docs: ''
    properties:
      hosted_confirmation:
        docs: Configuration when `after_completion.type=hosted_confirmation`.
        type: optional<PortalFlowsAfterCompletionHostedConfirmation>
      redirect:
        docs: Configuration when `after_completion.type=redirect`.
        type: optional<PortalFlowsAfterCompletionRedirect>
      type:
        docs: The specified type of behavior after the flow is completed.
        type: PortalFlowsFlowAfterCompletionType
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowAfterCompletionType:
    docs: The specified type of behavior after the flow is completed.
    enum:
      - hosted_confirmation
      - portal_homepage
      - redirect
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowSubscriptionCancel:
    docs: ''
    properties:
      retention:
        docs: Specify a retention strategy to be used in the cancellation flow.
        type: optional<PortalFlowsRetention>
      subscription:
        docs: The ID of the subscription to be canceled.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowSubscriptionUpdate:
    docs: ''
    properties:
      subscription:
        docs: The ID of the subscription to be updated.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowSubscriptionUpdateConfirm:
    docs: ''
    properties:
      discounts:
        docs: >-
          The coupon or promotion code to apply to this subscription update.
          Currently, only up to one may be specified.
        type: optional<list<PortalFlowsSubscriptionUpdateConfirmDiscount>>
      items:
        docs: >-
          The [subscription
          item](https://stripe.com/docs/api/subscription_items) to be updated
          through this flow. Currently, only up to one may be specified and
          subscriptions with multiple items are not updatable.
        type: list<PortalFlowsSubscriptionUpdateConfirmItem>
      subscription:
        docs: The ID of the subscription to be updated.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsFlowType:
    docs: Type of flow that the customer will go through.
    enum:
      - payment_method_update
      - subscription_cancel
      - subscription_update
      - subscription_update_confirm
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalFlowsRetention:
    docs: ''
    properties:
      coupon_offer:
        docs: Configuration when `retention.type=coupon_offer`.
        type: optional<PortalFlowsCouponOffer>
      type:
        docs: Type of retention strategy that will be used.
        type: literal<"coupon_offer">
    source:
      openapi: ../openapi.yaml
  PortalFlowsSubscriptionUpdateConfirmDiscount:
    docs: ''
    properties:
      coupon:
        docs: The ID of the coupon to apply to this subscription update.
        type: optional<string>
        validation:
          maxLength: 5000
      promotion_code:
        docs: The ID of a promotion code to apply to this subscription update.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalFlowsSubscriptionUpdateConfirmItem:
    docs: ''
    properties:
      id:
        docs: >-
          The ID of the [subscription
          item](https://stripe.com/docs/api/subscriptions/object#subscription_object-items-data-id)
          to be updated.
        type: optional<string>
        validation:
          maxLength: 5000
      price:
        docs: >-
          The price the customer should subscribe to through this flow. The
          price must also be included in the configuration's
          [`features.subscription_update.products`](https://stripe.com/docs/api/customer_portal/configuration#portal_configuration_object-features-subscription_update-products).
        type: optional<string>
        validation:
          maxLength: 5000
      quantity:
        docs: >-
          [Quantity](https://stripe.com/docs/subscriptions/quantities) for this
          item that the customer should subscribe to through this flow.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PortalInvoiceList:
    docs: ''
    properties:
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PortalLoginPage:
    docs: ''
    properties:
      enabled:
        docs: >-
          If `true`, a shareable `url` will be generated that will take your
          customers to a hosted login page for the customer portal.


          If `false`, the previously generated `url`, if any, will be
          deactivated.
        type: boolean
      url:
        docs: >-
          A shareable URL to the hosted portal login page. Your customers will
          be able to log in with their
          [email](https://stripe.com/docs/api/customers/object#customer_object-email)
          and receive a link to their customer portal.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalPaymentMethodUpdate:
    docs: ''
    properties:
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
    source:
      openapi: ../openapi.yaml
  PortalResourceScheduleUpdateAtPeriodEnd:
    docs: ''
    properties:
      conditions:
        docs: >-
          List of conditions. When any condition is true, an update will be
          scheduled at the end of the current period.
        type: list<PortalResourceScheduleUpdateAtPeriodEndCondition>
    source:
      openapi: ../openapi.yaml
  PortalResourceScheduleUpdateAtPeriodEndCondition:
    docs: ''
    properties:
      type:
        docs: The type of condition.
        type: PortalResourceScheduleUpdateAtPeriodEndConditionType
    source:
      openapi: ../openapi.yaml
  PortalResourceScheduleUpdateAtPeriodEndConditionType:
    docs: The type of condition.
    enum:
      - decreasing_item_amount
      - shortening_interval
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionCancel:
    docs: ''
    properties:
      cancellation_reason:
        type: PortalSubscriptionCancellationReason
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
      mode:
        docs: >-
          Whether to cancel subscriptions immediately or at the end of the
          billing period.
        type: PortalSubscriptionCancelMode
      proration_behavior:
        docs: >-
          Whether to create prorations when canceling subscriptions. Possible
          values are `none` and `create_prorations`.
        type: PortalSubscriptionCancelProrationBehavior
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionCancellationReason:
    docs: ''
    properties:
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
      options:
        docs: Which cancellation reasons will be given as options to the customer.
        type: list<PortalSubscriptionCancellationReasonOptionsItem>
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionCancellationReasonOptionsItem:
    enum:
      - customer_service
      - low_quality
      - missing_features
      - other
      - switched_service
      - too_complex
      - too_expensive
      - unused
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionCancelMode:
    docs: >-
      Whether to cancel subscriptions immediately or at the end of the billing
      period.
    enum:
      - at_period_end
      - immediately
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionCancelProrationBehavior:
    docs: >-
      Whether to create prorations when canceling subscriptions. Possible values
      are `none` and `create_prorations`.
    enum:
      - always_invoice
      - create_prorations
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionUpdate:
    docs: ''
    properties:
      default_allowed_updates:
        docs: >-
          The types of subscription updates that are supported for items listed
          in the `products` attribute. When empty, subscriptions are not
          updateable.
        type: list<PortalSubscriptionUpdateDefaultAllowedUpdatesItem>
      enabled:
        docs: Whether the feature is enabled.
        type: boolean
      products:
        docs: The list of up to 10 products that support subscription updates.
        type: optional<list<PortalSubscriptionUpdateProduct>>
      proration_behavior:
        docs: >-
          Determines how to handle prorations resulting from subscription
          updates. Valid values are `none`, `create_prorations`, and
          `always_invoice`. Defaults to a value of `none` if you don't set it
          during creation.
        type: PortalSubscriptionUpdateProrationBehavior
      schedule_at_period_end:
        type: PortalResourceScheduleUpdateAtPeriodEnd
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionUpdateDefaultAllowedUpdatesItem:
    enum:
      - price
      - promotion_code
      - quantity
    inline: true
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionUpdateProduct:
    docs: ''
    properties:
      prices:
        docs: >-
          The list of price IDs which, when subscribed to, a subscription can be
          updated.
        type: list<string>
      product:
        docs: The product ID.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PortalSubscriptionUpdateProrationBehavior:
    docs: >-
      Determines how to handle prorations resulting from subscription updates.
      Valid values are `none`, `create_prorations`, and `always_invoice`.
      Defaults to a value of `none` if you don't set it during creation.
    enum:
      - always_invoice
      - create_prorations
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  PostCustomersCustomerSourcesIdRequestAccountHolderType:
    docs: >-
      The type of entity that holds the account. This can be either `individual`
      or `company`.
    enum:
      - company
      - individual
    inline: true
    source:
      openapi: ../openapi.yaml
  PostCustomersCustomerSourcesIdRequestMetadata:
    discriminated: false
    docs: >-
      Set of [key-value pairs](https://stripe.com/docs/api/metadata) that you
      can attach to an object. This can be useful for storing additional
      information about the object in a structured format. Individual keys can
      be unset by posting an empty value to them. All keys can be unset by
      posting an empty value to `metadata`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - map<string, string>
      - literal<"">
  PostCustomersCustomerSourcesIdRequestOwner:
    inline: true
    properties:
      address:
        docs: Owner's address.
        type: optional<PostCustomersCustomerSourcesIdRequestOwnerAddress>
      email:
        docs: Owner's email address.
        type: optional<string>
      name:
        docs: Owner's full name.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: Owner's phone number.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PostCustomersCustomerSourcesIdRequestOwnerAddress:
    docs: Owner's address.
    inline: true
    properties:
      city:
        docs: City, district, suburb, town, or village.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      line1:
        docs: Address line 1 (e.g., street, PO Box, or company name).
        type: optional<string>
        validation:
          maxLength: 5000
      line2:
        docs: Address line 2 (e.g., apartment, suite, unit, or building).
        type: optional<string>
        validation:
          maxLength: 5000
      postal_code:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: State, county, province, or region.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PostCustomersCustomerSourcesIdResponse:
    discriminated: false
    source:
      openapi: ../openapi.yaml
    union:
      - type: Card
      - type: BankAccount
      - type: Source
  PostTaxIdsRequestOwner:
    docs: >-
      The account or customer the tax ID belongs to. Defaults to
      `owner[type]=self`.
    inline: true
    properties:
      account:
        docs: Account the tax ID belongs to. Required when `type=account`
        type: optional<string>
      customer:
        docs: Customer the tax ID belongs to. Required when `type=customer`
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: Type of owner referenced.
        type: PostTaxIdsRequestOwnerType
    source:
      openapi: ../openapi.yaml
  PostTaxIdsRequestOwnerType:
    docs: Type of owner referenced.
    enum:
      - account
      - application
      - customer
      - self
    inline: true
    source:
      openapi: ../openapi.yaml
  PostTaxIdsRequestType:
    docs: >-
      Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`, `am_tin`,
      `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`, `bb_tin`, `bg_uic`,
      `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `bs_tin`, `by_tin`, `ca_bn`,
      `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `cd_nif`,
      `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`,
      `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`,
      `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`,
      `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kh_tin`,
      `kr_brn`, `kz_bin`, `li_uid`, `li_vat`, `ma_vat`, `md_vat`, `me_pib`,
      `mk_vat`, `mr_nif`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`,
      `no_vat`, `no_voec`, `np_pan`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`,
      `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`,
      `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`, `th_vat`, `tj_tin`, `tr_tin`,
      `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`, `us_ein`, `uy_ruc`, `uz_tin`,
      `uz_vat`, `ve_rif`, `vn_tin`, `za_vat`, `zm_tin`, or `zw_tin`
    enum:
      - ad_nrt
      - ae_trn
      - al_tin
      - am_tin
      - ao_tin
      - ar_cuit
      - au_abn
      - au_arn
      - ba_tin
      - bb_tin
      - bg_uic
      - bh_vat
      - bo_tin
      - br_cnpj
      - br_cpf
      - bs_tin
      - by_tin
      - ca_bn
      - ca_gst_hst
      - ca_pst_bc
      - ca_pst_mb
      - ca_pst_sk
      - ca_qst
      - cd_nif
      - ch_uid
      - ch_vat
      - cl_tin
      - cn_tin
      - co_nit
      - cr_tin
      - de_stn
      - do_rcn
      - ec_ruc
      - eg_tin
      - es_cif
      - eu_oss_vat
      - eu_vat
      - gb_vat
      - ge_vat
      - gn_nif
      - hk_br
      - hr_oib
      - hu_tin
      - id_npwp
      - il_vat
      - in_gst
      - is_vat
      - jp_cn
      - jp_rn
      - jp_trn
      - ke_pin
      - kh_tin
      - kr_brn
      - kz_bin
      - li_uid
      - li_vat
      - ma_vat
      - md_vat
      - me_pib
      - mk_vat
      - mr_nif
      - mx_rfc
      - my_frp
      - my_itn
      - my_sst
      - ng_tin
      - no_vat
      - no_voec
      - np_pan
      - nz_gst
      - om_vat
      - pe_ruc
      - ph_tin
      - ro_tin
      - rs_pib
      - ru_inn
      - ru_kpp
      - sa_vat
      - sg_gst
      - sg_uen
      - si_tin
      - sn_ninea
      - sr_fin
      - sv_nit
      - th_vat
      - tj_tin
      - tr_tin
      - tw_vat
      - tz_vat
      - ua_vat
      - ug_tin
      - us_ein
      - uy_ruc
      - uz_tin
      - uz_vat
      - ve_rif
      - vn_tin
      - za_vat
      - zm_tin
      - zw_tin
    inline: true
    source:
      openapi: ../openapi.yaml
  Price:
    docs: >-
      Prices define the unit cost, currency, and (optional) billing cycle for
      both recurring and one-time purchases of products.

      [Products](https://stripe.com/docs/api#products) help you track inventory
      or provisioning, and prices help you track payment terms. Different
      physical goods or levels of service should be represented by products, and
      pricing options should be represented by prices. This approach lets you
      change prices without having to change your provisioning scheme.


      For example, you might have a single "gold" product that has prices for
      $10/month, $100/year, and €9 once.


      Related guides: [Set up a
      subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),
      [create an invoice](https://stripe.com/docs/billing/invoices/create), and
      more about [products and
      prices](https://stripe.com/docs/products-prices/overview).
    properties:
      active:
        docs: Whether the price can be used for new purchases.
        type: boolean
      billing_scheme:
        docs: >-
          Describes how to compute the price per period. Either `per_unit` or
          `tiered`. `per_unit` indicates that the fixed amount (specified in
          `unit_amount` or `unit_amount_decimal`) will be charged per unit in
          `quantity` (for prices with `usage_type=licensed`), or per unit of
          total usage (for prices with `usage_type=metered`). `tiered` indicates
          that the unit pricing will be computed using a tiering strategy as
          defined using the `tiers` and `tiers_mode` attributes.
        type: PriceBillingScheme
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      currency_options:
        docs: >-
          Prices defined in each available currency option. Each key must be a
          three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html) and a
          [supported currency](https://stripe.com/docs/currencies).
        type: optional<map<string, CurrencyOption>>
      custom_unit_amount:
        docs: >-
          When set, provides configuration for the amount to be adjusted by the
          customer during Checkout Sessions and Payment Links.
        type: optional<CustomUnitAmount>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      lookup_key:
        docs: >-
          A lookup key used to retrieve prices dynamically from a static string.
          This may be up to 200 characters.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      nickname:
        docs: A brief description of the price, hidden from customers.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"price">
      product:
        docs: The ID of the product this price is associated with.
        type: PriceProduct
      recurring:
        docs: >-
          The recurring components of a price such as `interval` and
          `usage_type`.
        type: optional<Recurring>
      tax_behavior:
        docs: >-
          Only required if a [default tax
          behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
          was not provided in the Stripe Tax settings. Specifies whether the
          price is considered inclusive of taxes or exclusive of taxes. One of
          `inclusive`, `exclusive`, or `unspecified`. Once specified as either
          `inclusive` or `exclusive`, it cannot be changed.
        type: optional<PriceTaxBehavior>
      tiers:
        docs: >-
          Each element represents a pricing tier. This parameter requires
          `billing_scheme` to be set to `tiered`. See also the documentation for
          `billing_scheme`.
        type: optional<list<PriceTier>>
      tiers_mode:
        docs: >-
          Defines if the tiering price should be `graduated` or `volume` based.
          In `volume`-based tiering, the maximum quantity within a period
          determines the per unit price. In `graduated` tiering, pricing can
          change as the quantity grows.
        type: optional<PriceTiersMode>
      transform_quantity:
        docs: >-
          Apply a transformation to the reported usage or set quantity before
          computing the amount billed. Cannot be combined with `tiers`.
        type: optional<TransformQuantity>
      type:
        docs: >-
          One of `one_time` or `recurring` depending on whether the price is for
          a one-time purchase or a recurring (subscription) purchase.
        type: PriceType
      unit_amount:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a whole integer if possible. Only set if
          `billing_scheme=per_unit`.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          The unit amount in cents (or local equivalent) to be charged,
          represented as a decimal string with at most 12 decimal places. Only
          set if `billing_scheme=per_unit`.
        type: optional<string>
    source:
      openapi: ../openapi.yaml
  PriceBillingScheme:
    docs: >-
      Describes how to compute the price per period. Either `per_unit` or
      `tiered`. `per_unit` indicates that the fixed amount (specified in
      `unit_amount` or `unit_amount_decimal`) will be charged per unit in
      `quantity` (for prices with `usage_type=licensed`), or per unit of total
      usage (for prices with `usage_type=metered`). `tiered` indicates that the
      unit pricing will be computed using a tiering strategy as defined using
      the `tiers` and `tiers_mode` attributes.
    enum:
      - per_unit
      - tiered
    inline: true
    source:
      openapi: ../openapi.yaml
  PriceCreated:
    docs: Occurs whenever a price is created.
    properties:
      object:
        type: Price
    source:
      openapi: ../openapi.yaml
  PriceDeleted:
    docs: Occurs whenever a price is deleted.
    properties:
      object:
        type: Price
    source:
      openapi: ../openapi.yaml
  PriceProduct:
    discriminated: false
    docs: The ID of the product this price is associated with.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Product
      - type: DeletedProduct
  PriceTaxBehavior:
    docs: >-
      Only required if a [default tax
      behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#setting-a-default-tax-behavior-(recommended))
      was not provided in the Stripe Tax settings. Specifies whether the price
      is considered inclusive of taxes or exclusive of taxes. One of
      `inclusive`, `exclusive`, or `unspecified`. Once specified as either
      `inclusive` or `exclusive`, it cannot be changed.
    enum:
      - exclusive
      - inclusive
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  PriceTier:
    docs: ''
    properties:
      flat_amount:
        docs: Price for the entire tier.
        type: optional<integer>
      flat_amount_decimal:
        docs: >-
          Same as `flat_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
      unit_amount:
        docs: Per unit price for units relevant to the tier.
        type: optional<integer>
      unit_amount_decimal:
        docs: >-
          Same as `unit_amount`, but contains a decimal value with at most 12
          decimal places.
        type: optional<string>
      up_to:
        docs: Up to and including to this quantity will be contained in the tier.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  PriceTiersMode:
    docs: >-
      Defines if the tiering price should be `graduated` or `volume` based. In
      `volume`-based tiering, the maximum quantity within a period determines
      the per unit price. In `graduated` tiering, pricing can change as the
      quantity grows.
    enum:
      - graduated
      - volume
    inline: true
    source:
      openapi: ../openapi.yaml
  PriceType:
    docs: >-
      One of `one_time` or `recurring` depending on whether the price is for a
      one-time purchase or a recurring (subscription) purchase.
    enum:
      - one_time
      - recurring
    inline: true
    source:
      openapi: ../openapi.yaml
  PriceUpdated:
    docs: Occurs whenever a price is updated.
    properties:
      object:
        type: Price
    source:
      openapi: ../openapi.yaml
  Product:
    docs: >-
      Products describe the specific goods or services you offer to your
      customers.

      For example, you might offer a Standard and Premium version of your goods
      or service; each version would be a separate Product.

      They can be used in conjunction with
      [Prices](https://stripe.com/docs/api#prices) to configure pricing in
      Payment Links, Checkout, and Subscriptions.


      Related guides: [Set up a
      subscription](https://stripe.com/docs/billing/subscriptions/set-up-subscription),

      [share a Payment Link](https://stripe.com/docs/payment-links),

      [accept payments with
      Checkout](https://stripe.com/docs/payments/accept-a-payment#create-product-prices-upfront),

      and more about [Products and
      Prices](https://stripe.com/docs/products-prices/overview)
    properties:
      active:
        docs: Whether the product is currently available for purchase.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      default_price:
        docs: >-
          The ID of the [Price](https://stripe.com/docs/api/prices) object that
          is the default price for this product.
        type: optional<ProductDefaultPrice>
      description:
        docs: >-
          The product's description, meant to be displayable to the customer.
          Use this field to optionally store a long form explanation of the
          product being sold for your own rendering purposes.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      images:
        docs: >-
          A list of up to 8 URLs of images for this product, meant to be
          displayable to the customer.
        type: list<string>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      marketing_features:
        docs: >-
          A list of up to 15 marketing features for this product. These are
          displayed in [pricing
          tables](https://stripe.com/docs/payments/checkout/pricing-table).
        type: list<ProductMarketingFeature>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      name:
        docs: The product's name, meant to be displayable to the customer.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"product">
      package_dimensions:
        docs: The dimensions of this product for shipping purposes.
        type: optional<PackageDimensions>
      shippable:
        docs: Whether this product is shipped (i.e., physical goods).
        type: optional<boolean>
      statement_descriptor:
        docs: >-
          Extra information about a product which will appear on your customer's
          credit card statement. In the case that multiple products are billed
          at once, the first statement descriptor will be used. Only used for
          subscription payments.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_code:
        docs: A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
        type: optional<ProductTaxCode>
      type:
        docs: >-
          The type of the product. The product is either of type `good`, which
          is eligible for use with Orders and SKUs, or `service`, which is
          eligible for use with Subscriptions and Plans.
        type: ProductType
      unit_label:
        docs: >-
          A label that represents units of this product. When set, this will be
          included in customers' receipts, invoices, Checkout, and the customer
          portal.
        type: optional<string>
        validation:
          maxLength: 5000
      updated:
        docs: >-
          Time at which the object was last updated. Measured in seconds since
          the Unix epoch.
        type: integer
      url:
        docs: A URL of a publicly-accessible webpage for this product.
        type: optional<string>
        validation:
          maxLength: 2048
    source:
      openapi: ../openapi.yaml
  ProductCreated:
    docs: Occurs whenever a product is created.
    properties:
      object:
        type: Product
    source:
      openapi: ../openapi.yaml
  ProductDefaultPrice:
    discriminated: false
    docs: >-
      The ID of the [Price](https://stripe.com/docs/api/prices) object that is
      the default price for this product.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Price
  ProductDeleted:
    docs: Occurs whenever a product is deleted.
    properties:
      object:
        type: Product
    source:
      openapi: ../openapi.yaml
  ProductFeature:
    docs: >-
      A product_feature represents an attachment between a feature and a
      product.

      When a product is purchased that has a feature attached, Stripe will
      create an entitlement to the feature for the purchasing customer.
    properties:
      entitlement_feature:
        type: EntitlementsFeature
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"product_feature">
    source:
      openapi: ../openapi.yaml
  ProductMarketingFeature:
    docs: ''
    properties:
      name:
        docs: The marketing feature name. Up to 80 characters long.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ProductTaxCode:
    discriminated: false
    docs: A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxCode
  ProductType:
    docs: >-
      The type of the product. The product is either of type `good`, which is
      eligible for use with Orders and SKUs, or `service`, which is eligible for
      use with Subscriptions and Plans.
    enum:
      - good
      - service
    inline: true
    source:
      openapi: ../openapi.yaml
  ProductUpdated:
    docs: Occurs whenever a product is updated.
    properties:
      object:
        type: Product
    source:
      openapi: ../openapi.yaml
  PromotionCode:
    docs: >-
      A Promotion Code represents a customer-redeemable code for a
      [coupon](https://stripe.com/docs/api#coupons). It can be used to

      create multiple codes for a single coupon.
    properties:
      active:
        docs: >-
          Whether the promotion code is currently active. A promotion code is
          only active if the coupon is also valid.
        type: boolean
      code:
        docs: >-
          The customer-facing code. Regardless of case, this code must be unique
          across all active promotion codes for each customer. Valid characters
          are lower case letters (a-z), upper case letters (A-Z), and digits
          (0-9).
        type: string
        validation:
          maxLength: 5000
      coupon:
        type: Coupon
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: The customer that this promotion code can be used by.
        type: optional<PromotionCodeCustomer>
      expires_at:
        docs: Date at which the promotion code can no longer be redeemed.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      max_redemptions:
        docs: Maximum number of times this promotion code can be redeemed.
        type: optional<integer>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"promotion_code">
      restrictions:
        type: PromotionCodesResourceRestrictions
      times_redeemed:
        docs: Number of times this promotion code has been used.
        type: integer
    source:
      openapi: ../openapi.yaml
  PromotionCodeCreated:
    docs: Occurs whenever a promotion code is created.
    properties:
      object:
        type: PromotionCode
    source:
      openapi: ../openapi.yaml
  PromotionCodeCurrencyOption:
    docs: ''
    properties:
      minimum_amount:
        docs: >-
          Minimum amount required to redeem this Promotion Code into a Coupon
          (e.g., a purchase must be $100 or more to work).
        type: integer
    source:
      openapi: ../openapi.yaml
  PromotionCodeCustomer:
    discriminated: false
    docs: The customer that this promotion code can be used by.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  PromotionCodesResourceRestrictions:
    docs: ''
    properties:
      currency_options:
        docs: >-
          Promotion code restrictions defined in each available currency option.
          Each key must be a three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html) and a
          [supported currency](https://stripe.com/docs/currencies).
        type: optional<map<string, PromotionCodeCurrencyOption>>
      first_time_transaction:
        docs: >-
          A Boolean indicating if the Promotion Code should only be redeemed for
          Customers without any successful payments or invoices
        type: boolean
      minimum_amount:
        docs: >-
          Minimum amount required to redeem this Promotion Code into a Coupon
          (e.g., a purchase must be $100 or more to work).
        type: optional<integer>
      minimum_amount_currency:
        docs: >-
          Three-letter [ISO code](https://stripe.com/docs/currencies) for
          minimum_amount
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  PromotionCodeUpdated:
    docs: Occurs whenever a promotion code is updated.
    properties:
      object:
        type: PromotionCode
    source:
      openapi: ../openapi.yaml
  Quote:
    docs: >-
      A Quote is a way to model prices that you'd like to provide to a customer.

      Once accepted, it will automatically create an invoice, subscription or
      subscription schedule.
    properties:
      amount_subtotal:
        docs: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        docs: Total after discounts and taxes are applied.
        type: integer
      application:
        docs: ID of the Connect Application that created the quote.
        type: optional<QuoteApplication>
      application_fee_amount:
        docs: >-
          The amount of the application fee (if any) that will be requested to
          be applied to the payment and transferred to the application owner's
          Stripe account. Only applicable if there are no line items with
          recurring prices on the quote.
        type: optional<integer>
      application_fee_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the application owner's Stripe
          account. Only applicable if there are line items with recurring prices
          on the quote.
        type: optional<double>
      automatic_tax:
        type: QuotesResourceAutomaticTax
      collection_method:
        docs: >-
          Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay invoices at the end of the
          subscription cycle or on finalization using the default payment method
          attached to the subscription or customer. When sending an invoice,
          Stripe will email your customer an invoice with payment instructions
          and mark the subscription as `active`. Defaults to
          `charge_automatically`.
        type: QuoteCollectionMethod
      computed:
        type: QuotesResourceComputed
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: optional<string>
        validation:
          maxLength: 5000
      customer:
        docs: >-
          The customer which this quote belongs to. A customer is required
          before finalizing the quote. Once specified, it cannot be changed.
        type: optional<QuoteCustomer>
      default_tax_rates:
        docs: The tax rates applied to this quote.
        type: optional<list<QuoteDefaultTaxRatesItem>>
      description:
        docs: A description that will be displayed on the quote PDF.
        type: optional<string>
        validation:
          maxLength: 5000
      discounts:
        docs: The discounts applied to this quote.
        type: list<QuoteDiscountsItem>
      expires_at:
        docs: >-
          The date on which the quote will be canceled if in `open` or `draft`
          status. Measured in seconds since the Unix epoch.
        type: integer
      footer:
        docs: A footer that will be displayed on the quote PDF.
        type: optional<string>
        validation:
          maxLength: 5000
      from_quote:
        docs: >-
          Details of the quote that was cloned. See the [cloning
          documentation](https://stripe.com/docs/quotes/clone) for more details.
        type: optional<QuotesResourceFromQuote>
      header:
        docs: A header that will be displayed on the quote PDF.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The invoice that was created from this quote.
        type: optional<QuoteInvoice>
      invoice_settings:
        type: InvoiceSettingQuoteSetting
      line_items:
        docs: A list of items the customer is being quoted for.
        type: optional<QuoteLineItems>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      number:
        docs: >-
          A unique number that identifies this particular quote. This number is
          assigned once the quote is
          [finalized](https://stripe.com/docs/quotes/overview#finalize).
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"quote">
      on_behalf_of:
        docs: >-
          The account on behalf of which to charge. See the [Connect
          documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
          for details.
        type: optional<QuoteOnBehalfOf>
      status:
        docs: The status of the quote.
        type: QuoteStatus
      status_transitions:
        type: QuotesResourceStatusTransitions
      subscription:
        docs: The subscription that was created or updated from this quote.
        type: optional<QuoteSubscription>
      subscription_data:
        type: QuotesResourceSubscriptionDataSubscriptionData
      subscription_schedule:
        docs: The subscription schedule that was created or updated from this quote.
        type: optional<QuoteSubscriptionSchedule>
      test_clock:
        docs: ID of the test clock this quote belongs to.
        type: optional<QuoteTestClock>
      total_details:
        type: QuotesResourceTotalDetails
      transfer_data:
        docs: >-
          The account (if any) the payments will be attributed to for tax
          reporting, and where funds from each payment will be transferred to
          for each of the invoices.
        type: optional<QuotesResourceTransferData>
    source:
      openapi: ../openapi.yaml
  QuoteAccepted:
    docs: Occurs whenever a quote is accepted.
    properties:
      object:
        type: Quote
    source:
      openapi: ../openapi.yaml
  QuoteApplication:
    discriminated: false
    docs: ID of the Connect Application that created the quote.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  QuoteCanceled:
    docs: Occurs whenever a quote is canceled.
    properties:
      object:
        type: Quote
    source:
      openapi: ../openapi.yaml
  QuoteCollectionMethod:
    docs: >-
      Either `charge_automatically`, or `send_invoice`. When charging
      automatically, Stripe will attempt to pay invoices at the end of the
      subscription cycle or on finalization using the default payment method
      attached to the subscription or customer. When sending an invoice, Stripe
      will email your customer an invoice with payment instructions and mark the
      subscription as `active`. Defaults to `charge_automatically`.
    enum:
      - charge_automatically
      - send_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  QuoteCreated:
    docs: Occurs whenever a quote is created.
    properties:
      object:
        type: Quote
    source:
      openapi: ../openapi.yaml
  QuoteCustomer:
    discriminated: false
    docs: >-
      The customer which this quote belongs to. A customer is required before
      finalizing the quote. Once specified, it cannot be changed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  QuoteDefaultTaxRatesItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxRate
  QuoteDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  QuoteFinalized:
    docs: Occurs whenever a quote is finalized.
    properties:
      object:
        type: Quote
    source:
      openapi: ../openapi.yaml
  QuoteInvoice:
    discriminated: false
    docs: The invoice that was created from this quote.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
      - type: DeletedInvoice
  QuoteLineItems:
    docs: A list of items the customer is being quoted for.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Item>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  QuoteOnBehalfOf:
    discriminated: false
    docs: >-
      The account on behalf of which to charge. See the [Connect
      documentation](https://support.stripe.com/questions/sending-invoices-on-behalf-of-connected-accounts)
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  QuotesResourceAutomaticTax:
    docs: ''
    properties:
      enabled:
        docs: Automatically calculate taxes
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
      status:
        docs: >-
          The status of the most recent automated tax calculation for this
          quote.
        type: optional<QuotesResourceAutomaticTaxStatus>
    source:
      openapi: ../openapi.yaml
  QuotesResourceAutomaticTaxStatus:
    docs: The status of the most recent automated tax calculation for this quote.
    enum:
      - complete
      - failed
      - requires_location_inputs
    inline: true
    source:
      openapi: ../openapi.yaml
  QuotesResourceComputed:
    docs: ''
    properties:
      recurring:
        docs: >-
          The definitive totals and line items the customer will be charged on a
          recurring basis. Takes into account the line items with recurring
          prices and discounts with `duration=forever` coupons only. Defaults to
          `null` if no inputted line items with recurring prices.
        type: optional<QuotesResourceRecurring>
      upfront:
        type: QuotesResourceUpfront
    source:
      openapi: ../openapi.yaml
  QuotesResourceFromQuote:
    docs: ''
    properties:
      is_revision:
        docs: Whether this quote is a revision of a different quote.
        type: boolean
      quote:
        docs: The quote that was cloned.
        type: QuotesResourceFromQuoteQuote
    source:
      openapi: ../openapi.yaml
  QuotesResourceFromQuoteQuote:
    discriminated: false
    docs: The quote that was cloned.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Quote
  QuotesResourceRecurring:
    docs: ''
    properties:
      amount_subtotal:
        docs: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        docs: Total after discounts and taxes are applied.
        type: integer
      interval:
        docs: >-
          The frequency at which a subscription is billed. One of `day`, `week`,
          `month` or `year`.
        type: QuotesResourceRecurringInterval
      interval_count:
        docs: >-
          The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and
          `interval_count=3` bills every 3 months.
        type: integer
      total_details:
        type: QuotesResourceTotalDetails
    source:
      openapi: ../openapi.yaml
  QuotesResourceRecurringInterval:
    docs: >-
      The frequency at which a subscription is billed. One of `day`, `week`,
      `month` or `year`.
    enum:
      - day
      - month
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  QuotesResourceStatusTransitions:
    docs: ''
    properties:
      accepted_at:
        docs: >-
          The time that the quote was accepted. Measured in seconds since Unix
          epoch.
        type: optional<integer>
      canceled_at:
        docs: >-
          The time that the quote was canceled. Measured in seconds since Unix
          epoch.
        type: optional<integer>
      finalized_at:
        docs: >-
          The time that the quote was finalized. Measured in seconds since Unix
          epoch.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  QuotesResourceSubscriptionDataSubscriptionData:
    docs: ''
    properties:
      description:
        docs: >-
          The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the
          subscription for rendering in Stripe surfaces and certain local
          payment methods UIs.
        type: optional<string>
        validation:
          maxLength: 5000
      effective_date:
        docs: >-
          When creating a new subscription, the date of which the subscription
          schedule will start after the quote is accepted. This date is ignored
          if it is in the past when the quote is accepted. Measured in seconds
          since the Unix epoch.
        type: optional<integer>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          will set metadata on the subscription or subscription schedule when
          the quote is accepted. If a recurring price is included in
          `line_items`, this field will be passed to the resulting
          subscription's `metadata` field. If `subscription_data.effective_date`
          is used, this field will be passed to the resulting subscription
          schedule's `phases.metadata` field. Unlike object-level metadata, this
          field is declarative. Updates will clear prior values.
        type: optional<map<string, optional<string>>>
      trial_period_days:
        docs: >-
          Integer representing the number of trial period days before the
          customer is charged for the first time.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  QuotesResourceTotalDetails:
    docs: ''
    properties:
      amount_discount:
        docs: This is the sum of all the discounts.
        type: integer
      amount_shipping:
        docs: This is the sum of all the shipping amounts.
        type: optional<integer>
      amount_tax:
        docs: This is the sum of all the tax amounts.
        type: integer
      breakdown:
        type: optional<QuotesResourceTotalDetailsResourceBreakdown>
    source:
      openapi: ../openapi.yaml
  QuotesResourceTotalDetailsResourceBreakdown:
    docs: ''
    properties:
      discounts:
        docs: The aggregated discounts.
        type: list<LineItemsDiscountAmount>
      taxes:
        docs: The aggregated tax amounts by rate.
        type: list<LineItemsTaxAmount>
    source:
      openapi: ../openapi.yaml
  QuotesResourceTransferData:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount in cents (or local equivalent) that will be transferred to
          the destination account when the invoice is paid. By default, the
          entire amount is transferred to the destination.
        type: optional<integer>
      amount_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the destination account. By default,
          the entire amount will be transferred to the destination.
        type: optional<double>
      destination:
        docs: >-
          The account where funds from the payment will be transferred to upon
          payment success.
        type: QuotesResourceTransferDataDestination
    source:
      openapi: ../openapi.yaml
  QuotesResourceTransferDataDestination:
    discriminated: false
    docs: >-
      The account where funds from the payment will be transferred to upon
      payment success.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  QuotesResourceUpfront:
    docs: ''
    properties:
      amount_subtotal:
        docs: Total before any discounts or taxes are applied.
        type: integer
      amount_total:
        docs: Total after discounts and taxes are applied.
        type: integer
      line_items:
        docs: >-
          The line items that will appear on the next invoice after this quote
          is accepted. This does not include pending invoice items that exist on
          the customer but may still be included in the next invoice.
        type: optional<QuotesResourceUpfrontLineItems>
      total_details:
        type: QuotesResourceTotalDetails
    source:
      openapi: ../openapi.yaml
  QuotesResourceUpfrontLineItems:
    docs: >-
      The line items that will appear on the next invoice after this quote is
      accepted. This does not include pending invoice items that exist on the
      customer but may still be included in the next invoice.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<Item>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  QuoteStatus:
    docs: The status of the quote.
    enum:
      - accepted
      - canceled
      - draft
      - open
    inline: true
    source:
      openapi: ../openapi.yaml
  QuoteSubscription:
    discriminated: false
    docs: The subscription that was created or updated from this quote.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  QuoteSubscriptionSchedule:
    discriminated: false
    docs: The subscription schedule that was created or updated from this quote.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SubscriptionSchedule
  QuoteTestClock:
    discriminated: false
    docs: ID of the test clock this quote belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  RadarEarlyFraudWarning:
    docs: >-
      An early fraud warning indicates that the card issuer has notified us that
      a

      charge may be fraudulent.


      Related guide: [Early fraud
      warnings](https://stripe.com/docs/disputes/measuring#early-fraud-warnings)
    properties:
      actionable:
        docs: >-
          An EFW is actionable if it has not received a dispute and has not been
          fully refunded. You may wish to proactively refund a charge that
          receives an EFW, in order to avoid receiving a dispute later.
        type: boolean
      charge:
        docs: ID of the charge this early fraud warning is for, optionally expanded.
        type: RadarEarlyFraudWarningCharge
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      fraud_type:
        docs: >-
          The type of fraud labelled by the issuer. One of
          `card_never_received`, `fraudulent_card_application`,
          `made_with_counterfeit_card`, `made_with_lost_card`,
          `made_with_stolen_card`, `misc`, `unauthorized_use_of_card`.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"radar.early_fraud_warning">
      payment_intent:
        docs: >-
          ID of the Payment Intent this early fraud warning is for, optionally
          expanded.
        type: optional<RadarEarlyFraudWarningPaymentIntent>
    source:
      openapi: ../openapi.yaml
  RadarEarlyFraudWarningCharge:
    discriminated: false
    docs: ID of the charge this early fraud warning is for, optionally expanded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  RadarEarlyFraudWarningCreated:
    docs: Occurs whenever an early fraud warning is created.
    properties:
      object:
        type: RadarEarlyFraudWarning
    source:
      openapi: ../openapi.yaml
  RadarEarlyFraudWarningPaymentIntent:
    discriminated: false
    docs: >-
      ID of the Payment Intent this early fraud warning is for, optionally
      expanded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  RadarEarlyFraudWarningUpdated:
    docs: Occurs whenever an early fraud warning is updated.
    properties:
      object:
        type: RadarEarlyFraudWarning
    source:
      openapi: ../openapi.yaml
  RadarRadarOptions:
    docs: >-
      Options to configure Radar. See [Radar
      Session](https://stripe.com/docs/radar/radar-session) for more
      information.
    properties:
      session:
        docs: >-
          A [Radar Session](https://stripe.com/docs/radar/radar-session) is a
          snapshot of the browser metadata and device details that help Radar
          make more accurate predictions on your payments.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RadarReviewResourceLocation:
    docs: ''
    properties:
      city:
        docs: The city where the payment originated.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter ISO code representing the country where the payment
          originated.
        type: optional<string>
        validation:
          maxLength: 5000
      latitude:
        docs: The geographic latitude where the payment originated.
        type: optional<double>
      longitude:
        docs: The geographic longitude where the payment originated.
        type: optional<double>
      region:
        docs: The state/county/province/region where the payment originated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RadarReviewResourceSession:
    docs: ''
    properties:
      browser:
        docs: The browser used in this browser session (e.g., `Chrome`).
        type: optional<string>
        validation:
          maxLength: 5000
      device:
        docs: >-
          Information about the device used for the browser session (e.g.,
          `Samsung SM-G930T`).
        type: optional<string>
        validation:
          maxLength: 5000
      platform:
        docs: The platform for the browser session (e.g., `Macintosh`).
        type: optional<string>
        validation:
          maxLength: 5000
      version:
        docs: The version for the browser session (e.g., `61.0.3163.100`).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RadarValueList:
    docs: >-
      Value lists allow you to group values together which can then be
      referenced in rules.


      Related guide: [Default Stripe
      lists](https://stripe.com/docs/radar/lists#managing-list-items)
    properties:
      alias:
        docs: The name of the value list for use in rules.
        type: string
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      created_by:
        docs: The name or email address of the user who created this value list.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      item_type:
        docs: >-
          The type of items in the value list. One of `card_fingerprint`,
          `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`,
          `email`, `ip_address`, `country`, `string`, `case_sensitive_string`,
          or `customer_id`.
        type: RadarValueListItemType
      list_items:
        docs: List of items contained within this value list.
        type: RadarValueListListItems
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      name:
        docs: The name of the value list.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"radar.value_list">
    source:
      openapi: ../openapi.yaml
  RadarValueListItem:
    docs: >-
      Value list items allow you to add specific values to a given Radar value
      list, which can then be used in rules.


      Related guide: [Managing list
      items](https://stripe.com/docs/radar/lists#managing-list-items)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      created_by:
        docs: >-
          The name or email address of the user who added this item to the value
          list.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"radar.value_list_item">
      value:
        docs: The value of the item.
        type: string
        validation:
          maxLength: 5000
      value_list:
        docs: The identifier of the value list this item belongs to.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RadarValueListItemType:
    docs: >-
      The type of items in the value list. One of `card_fingerprint`,
      `us_bank_account_fingerprint`, `sepa_debit_fingerprint`, `card_bin`,
      `email`, `ip_address`, `country`, `string`, `case_sensitive_string`, or
      `customer_id`.
    enum:
      - card_bin
      - card_fingerprint
      - case_sensitive_string
      - country
      - customer_id
      - email
      - ip_address
      - sepa_debit_fingerprint
      - string
      - us_bank_account_fingerprint
    inline: true
    source:
      openapi: ../openapi.yaml
  RadarValueListListItems:
    docs: List of items contained within this value list.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<RadarValueListItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ReceivedPaymentMethodDetailsFinancialAccount:
    docs: ''
    properties:
      id:
        docs: The FinancialAccount ID.
        type: string
        validation:
          maxLength: 5000
      network:
        docs: >-
          The rails the ReceivedCredit was sent over. A FinancialAccount can
          only send funds over `stripe`.
        type: literal<"stripe">
    source:
      openapi: ../openapi.yaml
  Recurring:
    docs: ''
    properties:
      aggregate_usage:
        docs: >-
          Specifies a usage aggregation strategy for prices of
          `usage_type=metered`. Defaults to `sum`.
        type: optional<RecurringAggregateUsage>
      interval:
        docs: >-
          The frequency at which a subscription is billed. One of `day`, `week`,
          `month` or `year`.
        type: RecurringInterval
      interval_count:
        docs: >-
          The number of intervals (specified in the `interval` attribute)
          between subscription billings. For example, `interval=month` and
          `interval_count=3` bills every 3 months.
        type: integer
      meter:
        docs: The meter tracking the usage of a metered price
        type: optional<string>
        validation:
          maxLength: 5000
      trial_period_days:
        docs: >-
          Default number of trial days when subscribing a customer to this price
          using
          [`trial_from_plan=true`](https://stripe.com/docs/api#create_subscription-trial_from_plan).
        type: optional<integer>
      usage_type:
        docs: >-
          Configures how the quantity per period should be determined. Can be
          either `metered` or `licensed`. `licensed` automatically bills the
          `quantity` set when adding it to a subscription. `metered` aggregates
          the total usage based on usage records. Defaults to `licensed`.
        type: RecurringUsageType
    source:
      openapi: ../openapi.yaml
  RecurringAggregateUsage:
    docs: >-
      Specifies a usage aggregation strategy for prices of `usage_type=metered`.
      Defaults to `sum`.
    enum:
      - last_during_period
      - last_ever
      - max
      - sum
    inline: true
    source:
      openapi: ../openapi.yaml
  RecurringInterval:
    docs: >-
      The frequency at which a subscription is billed. One of `day`, `week`,
      `month` or `year`.
    enum:
      - day
      - month
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  RecurringUsageType:
    docs: >-
      Configures how the quantity per period should be determined. Can be either
      `metered` or `licensed`. `licensed` automatically bills the `quantity` set
      when adding it to a subscription. `metered` aggregates the total usage
      based on usage records. Defaults to `licensed`.
    enum:
      - licensed
      - metered
    inline: true
    source:
      openapi: ../openapi.yaml
  Refund:
    docs: |-
      Refund objects allow you to refund a previously created charge that isn't
      refunded yet. Funds are refunded to the credit or debit card that's
      initially charged.

      Related guide: [Refunds](https://stripe.com/docs/refunds)
    properties:
      amount:
        docs: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        docs: Balance transaction that describes the impact on your account balance.
        type: optional<RefundBalanceTransaction>
      charge:
        docs: ID of the charge that's refunded.
        type: optional<RefundCharge>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. You can use this for
          displaying to users (available on non-card refunds only).
        type: optional<string>
        validation:
          maxLength: 5000
      destination_details:
        type: optional<RefundDestinationDetails>
      failure_balance_transaction:
        docs: >-
          After the refund fails, this balance transaction describes the
          adjustment made on your account balance that reverses the initial
          balance transaction.
        type: optional<RefundFailureBalanceTransaction>
      failure_reason:
        docs: >-
          Provides the reason for the refund failure. Possible values are:
          `lost_or_stolen_card`, `expired_or_canceled_card`,
          `charge_for_pending_refund_disputed`, `insufficient_funds`,
          `declined`, `merchant_request`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      instructions_email:
        docs: >-
          For payment methods without native refund support (for example,
          Konbini, PromptPay), provide an email address for the customer to
          receive refund instructions.
        type: optional<string>
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      next_action:
        type: optional<RefundNextAction>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"refund">
      payment_intent:
        docs: ID of the PaymentIntent that's refunded.
        type: optional<RefundPaymentIntent>
      reason:
        docs: >-
          Reason for the refund, which is either user-provided (`duplicate`,
          `fraudulent`, or `requested_by_customer`) or generated by Stripe
          internally (`expired_uncaptured_charge`).
        type: optional<RefundReason>
      receipt_number:
        docs: >-
          This is the transaction number that appears on email receipts sent for
          this refund.
        type: optional<string>
        validation:
          maxLength: 5000
      source_transfer_reversal:
        docs: >-
          The transfer reversal that's associated with the refund. Only present
          if the charge came from another Stripe account.
        type: optional<RefundSourceTransferReversal>
      status:
        docs: >-
          Status of the refund. This can be `pending`, `requires_action`,
          `succeeded`, `failed`, or `canceled`. Learn more about [failed
          refunds](https://stripe.com/docs/refunds#failed-refunds).
        type: optional<string>
        validation:
          maxLength: 5000
      transfer_reversal:
        docs: >-
          This refers to the transfer reversal object if the accompanying
          transfer reverses. This is only applicable if the charge was created
          using the destination parameter.
        type: optional<RefundTransferReversal>
    source:
      openapi: ../openapi.yaml
  RefundBalanceTransaction:
    discriminated: false
    docs: Balance transaction that describes the impact on your account balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  RefundCharge:
    discriminated: false
    docs: ID of the charge that's refunded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  RefundCreated:
    docs: Occurs whenever a refund is created.
    properties:
      object:
        type: Refund
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetails:
    docs: ''
    properties:
      affirm:
        type: optional<DestinationDetailsUnimplemented>
      afterpay_clearpay:
        type: optional<DestinationDetailsUnimplemented>
      alipay:
        type: optional<DestinationDetailsUnimplemented>
      alma:
        type: optional<DestinationDetailsUnimplemented>
      amazon_pay:
        type: optional<DestinationDetailsUnimplemented>
      au_bank_transfer:
        type: optional<DestinationDetailsUnimplemented>
      blik:
        type: optional<RefundDestinationDetailsBlik>
      br_bank_transfer:
        type: optional<RefundDestinationDetailsBrBankTransfer>
      card:
        type: optional<RefundDestinationDetailsCard>
      cashapp:
        type: optional<DestinationDetailsUnimplemented>
      customer_cash_balance:
        type: optional<DestinationDetailsUnimplemented>
      eps:
        type: optional<DestinationDetailsUnimplemented>
      eu_bank_transfer:
        type: optional<RefundDestinationDetailsEuBankTransfer>
      gb_bank_transfer:
        type: optional<RefundDestinationDetailsGbBankTransfer>
      giropay:
        type: optional<DestinationDetailsUnimplemented>
      grabpay:
        type: optional<DestinationDetailsUnimplemented>
      jp_bank_transfer:
        type: optional<RefundDestinationDetailsJpBankTransfer>
      klarna:
        type: optional<DestinationDetailsUnimplemented>
      multibanco:
        type: optional<RefundDestinationDetailsMultibanco>
      mx_bank_transfer:
        type: optional<RefundDestinationDetailsMxBankTransfer>
      p24:
        type: optional<RefundDestinationDetailsP24>
      paynow:
        type: optional<DestinationDetailsUnimplemented>
      paypal:
        type: optional<DestinationDetailsUnimplemented>
      pix:
        type: optional<DestinationDetailsUnimplemented>
      revolut:
        type: optional<DestinationDetailsUnimplemented>
      sofort:
        type: optional<DestinationDetailsUnimplemented>
      swish:
        type: optional<RefundDestinationDetailsSwish>
      th_bank_transfer:
        type: optional<RefundDestinationDetailsThBankTransfer>
      type:
        docs: >-
          The type of transaction-specific details of the payment method used in
          the refund (e.g., `card`). An additional hash is included on
          `destination_details` with a name matching this value. It contains
          information specific to the refund transaction.
        type: string
        validation:
          maxLength: 5000
      us_bank_transfer:
        type: optional<RefundDestinationDetailsUsBankTransfer>
      wechat_pay:
        type: optional<DestinationDetailsUnimplemented>
      zip:
        type: optional<DestinationDetailsUnimplemented>
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsBlik:
    docs: ''
    properties:
      network_decline_code:
        docs: >-
          For refunds declined by the network, a decline code provided by the
          network which indicates the reason the refund failed.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsBrBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsCard:
    docs: ''
    properties:
      reference:
        docs: Value of the reference number assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference number on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_type:
        docs: Type of the reference number assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The type of refund. This can be `refund`, `reversal`, or `pending`.
        type: RefundDestinationDetailsCardType
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsCardType:
    docs: The type of refund. This can be `refund`, `reversal`, or `pending`.
    enum:
      - pending
      - refund
      - reversal
    inline: true
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsEuBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsGbBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsJpBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsMultibanco:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsMxBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsP24:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsSwish:
    docs: ''
    properties:
      network_decline_code:
        docs: >-
          For refunds declined by the network, a decline code provided by the
          network which indicates the reason the refund failed.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsThBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundDestinationDetailsUsBankTransfer:
    docs: ''
    properties:
      reference:
        docs: The reference assigned to the refund.
        type: optional<string>
        validation:
          maxLength: 5000
      reference_status:
        docs: >-
          Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundFailed:
    docs: Occurs whenever a refund has failed.
    properties:
      object:
        type: Refund
    source:
      openapi: ../openapi.yaml
  RefundFailureBalanceTransaction:
    discriminated: false
    docs: >-
      After the refund fails, this balance transaction describes the adjustment
      made on your account balance that reverses the initial balance
      transaction.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  RefundNextAction:
    docs: ''
    properties:
      display_details:
        type: optional<RefundNextActionDisplayDetails>
      type:
        docs: Type of the next action to perform.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  RefundNextActionDisplayDetails:
    docs: ''
    properties:
      email_sent:
        type: EmailSent
      expires_at:
        docs: The expiry timestamp.
        type: integer
    source:
      openapi: ../openapi.yaml
  RefundPaymentIntent:
    discriminated: false
    docs: ID of the PaymentIntent that's refunded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  RefundReason:
    docs: >-
      Reason for the refund, which is either user-provided (`duplicate`,
      `fraudulent`, or `requested_by_customer`) or generated by Stripe
      internally (`expired_uncaptured_charge`).
    enum:
      - duplicate
      - expired_uncaptured_charge
      - fraudulent
      - requested_by_customer
    inline: true
    source:
      openapi: ../openapi.yaml
  RefundSourceTransferReversal:
    discriminated: false
    docs: >-
      The transfer reversal that's associated with the refund. Only present if
      the charge came from another Stripe account.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TransferReversal
  RefundTransferReversal:
    discriminated: false
    docs: >-
      This refers to the transfer reversal object if the accompanying transfer
      reverses. This is only applicable if the charge was created using the
      destination parameter.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TransferReversal
  RefundUpdated:
    docs: Occurs whenever a refund is updated.
    properties:
      object:
        type: Refund
    source:
      openapi: ../openapi.yaml
  ReportingReportRun:
    docs: >-
      The Report Run object represents an instance of a report type generated
      with

      specific run parameters. Once the object is created, Stripe begins
      processing the report.

      When the report has finished running, it will give you a reference to a
      file

      where you can retrieve your results. For an overview, see

      [API Access to Reports](https://stripe.com/docs/reporting/statements/api).


      Note that certain report types can only be run based on your live-mode
      data (not test-mode

      data), and will error when queried without a [live-mode API
      key](https://stripe.com/docs/keys#test-live-modes).
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      error:
        docs: >-
          If something should go wrong during the run, a message about the
          failure (populated when
           `status=failed`).
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          `true` if the report is run on live mode data and `false` if it is run
          on test mode data.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"reporting.report_run">
      parameters:
        type: FinancialReportingFinanceReportRunRunParameters
      report_type:
        docs: >-
          The ID of the [report
          type](https://stripe.com/docs/reports/report-types) to run, such as
          `"balance.summary.1"`.
        type: string
        validation:
          maxLength: 5000
      result:
        docs: >-
          The file object representing the result of the report run (populated
          when
           `status=succeeded`).
        type: optional<File>
      status:
        docs: >-
          Status of this report run. This will be `pending` when the run is
          initially created.
           When the run finishes, this will be set to `succeeded` and the `result` field will be populated.
           Rarely, we may encounter an error, at which point this will be set to `failed` and the `error` field will be populated.
        type: string
        validation:
          maxLength: 5000
      succeeded_at:
        docs: |-
          Timestamp at which this run successfully finished (populated when
           `status=succeeded`). Measured in seconds since the Unix epoch.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  ReportingReportRunFailed:
    docs: Occurs whenever a requested `ReportRun` failed to complete.
    properties:
      object:
        type: ReportingReportRun
    source:
      openapi: ../openapi.yaml
  ReportingReportRunSucceeded:
    docs: Occurs whenever a requested `ReportRun` completed successfully.
    properties:
      object:
        type: ReportingReportRun
    source:
      openapi: ../openapi.yaml
  ReportingReportType:
    docs: >-
      The Report Type resource corresponds to a particular type of report, such
      as

      the "Activity summary" or "Itemized payouts" reports. These objects are

      identified by an ID belonging to a set of enumerated values. See

      [API Access to Reports
      documentation](https://stripe.com/docs/reporting/statements/api)

      for those Report Type IDs, along with required and optional parameters.


      Note that certain report types can only be run based on your live-mode
      data (not test-mode

      data), and will error when queried without a [live-mode API
      key](https://stripe.com/docs/keys#test-live-modes).
    properties:
      data_available_end:
        docs: >-
          Most recent time for which this Report Type is available. Measured in
          seconds since the Unix epoch.
        type: integer
      data_available_start:
        docs: >-
          Earliest time for which this Report Type is available. Measured in
          seconds since the Unix epoch.
        type: integer
      default_columns:
        docs: >-
          List of column names that are included by default when this Report
          Type gets run. (If the Report Type doesn't support the `columns`
          parameter, this will be null.)
        type: optional<list<string>>
      id:
        docs: >-
          The [ID of the Report
          Type](https://stripe.com/docs/reporting/statements/api#available-report-types),
          such as `balance.summary.1`.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      name:
        docs: Human-readable name of the Report Type
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"reporting.report_type">
      updated:
        docs: >-
          When this Report Type was latest updated. Measured in seconds since
          the Unix epoch.
        type: integer
      version:
        docs: >-
          Version of the Report Type. Different versions report with the same ID
          will have the same purpose, but may take different run parameters or
          have different result schemas.
        type: integer
    source:
      openapi: ../openapi.yaml
  ReportingReportTypeUpdated:
    docs: >-
      Occurs whenever a `ReportType` is updated (typically to indicate that a
      new day's data has come available).
    properties:
      object:
        type: ReportingReportType
    source:
      openapi: ../openapi.yaml
  ReserveTransaction:
    docs: ''
    properties:
      amount: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"reserve_transaction">
    source:
      openapi: ../openapi.yaml
  Review:
    docs: >-
      Reviews can be used to supplement automated fraud detection with human
      expertise.


      Learn more about [Radar](/radar) and reviewing payments

      [here](https://stripe.com/docs/radar/reviews).
    properties:
      billing_zip:
        docs: The ZIP or postal code of the card used, if applicable.
        type: optional<string>
        validation:
          maxLength: 5000
      charge:
        docs: The charge associated with this review.
        type: optional<ReviewCharge>
      closed_reason:
        docs: >-
          The reason the review was closed, or null if it has not yet been
          closed. One of `approved`, `refunded`, `refunded_as_fraud`,
          `disputed`, or `redacted`.
        type: optional<ReviewClosedReason>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      ip_address:
        docs: The IP address where the payment originated.
        type: optional<string>
        validation:
          maxLength: 5000
      ip_address_location:
        docs: >-
          Information related to the location of the payment. Note that this
          information is an approximation and attempts to locate the nearest
          population center - it should not be used to determine a specific
          address.
        type: optional<RadarReviewResourceLocation>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"review">
      open:
        docs: If `true`, the review needs action.
        type: boolean
      opened_reason:
        docs: The reason the review was opened. One of `rule` or `manual`.
        type: ReviewOpenedReason
      payment_intent:
        docs: The PaymentIntent ID associated with this review, if one exists.
        type: optional<ReviewPaymentIntent>
      reason:
        docs: >-
          The reason the review is currently open or closed. One of `rule`,
          `manual`, `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or
          `redacted`.
        type: string
        validation:
          maxLength: 5000
      session:
        docs: >-
          Information related to the browsing session of the user who initiated
          the payment.
        type: optional<RadarReviewResourceSession>
    source:
      openapi: ../openapi.yaml
  ReviewCharge:
    discriminated: false
    docs: The charge associated with this review.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  ReviewClosed:
    docs: >-
      Occurs whenever a review is closed. The review's `reason` field indicates
      why: `approved`, `disputed`, `refunded`, or `refunded_as_fraud`.
    properties:
      object:
        type: Review
    source:
      openapi: ../openapi.yaml
  ReviewClosedReason:
    docs: >-
      The reason the review was closed, or null if it has not yet been closed.
      One of `approved`, `refunded`, `refunded_as_fraud`, `disputed`, or
      `redacted`.
    enum:
      - approved
      - disputed
      - redacted
      - refunded
      - refunded_as_fraud
    inline: true
    source:
      openapi: ../openapi.yaml
  ReviewOpened:
    docs: Occurs whenever a review is opened.
    properties:
      object:
        type: Review
    source:
      openapi: ../openapi.yaml
  ReviewOpenedReason:
    docs: The reason the review was opened. One of `rule` or `manual`.
    enum:
      - manual
      - rule
    inline: true
    source:
      openapi: ../openapi.yaml
  ReviewPaymentIntent:
    discriminated: false
    docs: The PaymentIntent ID associated with this review, if one exists.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  RevolutPayUnderlyingPaymentMethodFundingDetails:
    docs: ''
    properties:
      card:
        type: optional<PaymentMethodDetailsPassthroughCard>
      type:
        docs: funding type of the underlying payment method.
        type: optional<literal<"card">>
    source:
      openapi: ../openapi.yaml
  Rule:
    docs: ''
    properties:
      action:
        docs: The action taken on the payment.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      predicate:
        docs: The predicate to evaluate the payment against.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ScheduledQueryRun:
    docs: >-
      If you have [scheduled a Sigma
      query](https://stripe.com/docs/sigma/scheduled-queries), you'll

      receive a `sigma.scheduled_query_run.created` webhook each time the query

      runs. The webhook contains a `ScheduledQueryRun` object, which you can use
      to

      retrieve the query results.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      data_load_time:
        docs: >-
          When the query was run, Sigma contained a snapshot of your Stripe data
          at this time.
        type: integer
      error:
        type: optional<SigmaScheduledQueryRunError>
      file:
        docs: The file object representing the results of the query.
        type: optional<File>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"scheduled_query_run">
      result_available_until:
        docs: >-
          Time at which the result expires and is no longer available for
          download.
        type: integer
      sql:
        docs: SQL for the query.
        type: string
        validation:
          maxLength: 100000
      status:
        docs: >-
          The query's execution status, which will be `completed` for successful
          runs, and `canceled`, `failed`, or `timed_out` otherwise.
        type: string
        validation:
          maxLength: 5000
      title:
        docs: Title of the query.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SchedulesPhaseAutomaticTax:
    docs: ''
    properties:
      disabled_reason:
        docs: If Stripe disabled automatic tax, this enum describes why.
        type: optional<literal<"requires_location_inputs">>
      enabled:
        docs: >-
          Whether Stripe automatically computes tax on invoices created during
          this phase.
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
    source:
      openapi: ../openapi.yaml
  SecretServiceResourceScope:
    docs: ''
    properties:
      type:
        docs: The secret scope type.
        type: SecretServiceResourceScopeType
      user:
        docs: The user ID, if type is set to "user"
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SecretServiceResourceScopeType:
    docs: The secret scope type.
    enum:
      - account
      - user
    inline: true
    source:
      openapi: ../openapi.yaml
  SepaDebitGeneratedFrom:
    docs: ''
    properties:
      charge:
        docs: The ID of the Charge that generated this PaymentMethod, if any.
        type: optional<SepaDebitGeneratedFromCharge>
      setup_attempt:
        docs: The ID of the SetupAttempt that generated this PaymentMethod, if any.
        type: optional<SepaDebitGeneratedFromSetupAttempt>
    source:
      openapi: ../openapi.yaml
  SepaDebitGeneratedFromCharge:
    discriminated: false
    docs: The ID of the Charge that generated this PaymentMethod, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  SepaDebitGeneratedFromSetupAttempt:
    discriminated: false
    docs: The ID of the SetupAttempt that generated this PaymentMethod, if any.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupAttempt
  SetupAttempt:
    docs: |-
      A SetupAttempt describes one attempted confirmation of a SetupIntent,
      whether that confirmation is successful or unsuccessful. You can use
      SetupAttempts to inspect details of a specific attempt at setting up a
      payment method using a SetupIntent.
    properties:
      application:
        docs: >-
          The value of
          [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application)
          on the SetupIntent at the time of this confirmation.
        type: optional<SetupAttemptApplication>
      attach_to_self:
        docs: >-
          If present, the SetupIntent's payment method will be attached to the
          in-context Stripe Account.


          It can only be used for this Stripe Account’s own money movement flows
          like InboundTransfer and OutboundTransfers. It cannot be set to true
          when setting up a PaymentMethod for a Customer, and defaults to false
          when attaching a PaymentMethod to a Customer.
        type: optional<boolean>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: >-
          The value of
          [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer)
          on the SetupIntent at the time of this confirmation.
        type: optional<SetupAttemptCustomer>
      flow_directions:
        docs: >-
          Indicates the directions of money movement for which this payment
          method is intended to be used.


          Include `inbound` if you intend to use the payment method as the
          origin to pull funds from. Include `outbound` if you intend to use the
          payment method as the destination to send funds to. You can include
          both if you intend to use the payment method for both purposes.
        type: optional<list<SetupAttemptFlowDirectionsItem>>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"setup_attempt">
      on_behalf_of:
        docs: >-
          The value of
          [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of)
          on the SetupIntent at the time of this confirmation.
        type: optional<SetupAttemptOnBehalfOf>
      payment_method:
        docs: ID of the payment method used with this SetupAttempt.
        type: SetupAttemptPaymentMethod
      payment_method_details:
        type: SetupAttemptPaymentMethodDetails
      setup_error:
        docs: >-
          The error encountered during this attempt to confirm the SetupIntent,
          if any.
        type: optional<ApiErrors>
      setup_intent:
        docs: ID of the SetupIntent that this attempt belongs to.
        type: SetupAttemptSetupIntent
      status:
        docs: >-
          Status of this SetupAttempt, one of `requires_confirmation`,
          `requires_action`, `processing`, `succeeded`, `failed`, or
          `abandoned`.
        type: string
        validation:
          maxLength: 5000
      usage:
        docs: >-
          The value of
          [usage](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-usage)
          on the SetupIntent at the time of this confirmation, one of
          `off_session` or `on_session`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupAttemptApplication:
    discriminated: false
    docs: >-
      The value of
      [application](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-application)
      on the SetupIntent at the time of this confirmation.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  SetupAttemptCustomer:
    discriminated: false
    docs: >-
      The value of
      [customer](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-customer)
      on the SetupIntent at the time of this confirmation.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  SetupAttemptFlowDirectionsItem:
    enum:
      - inbound
      - outbound
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptOnBehalfOf:
    discriminated: false
    docs: >-
      The value of
      [on_behalf_of](https://stripe.com/docs/api/setup_intents/object#setup_intent_object-on_behalf_of)
      on the SetupIntent at the time of this confirmation.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  SetupAttemptPaymentMethod:
    discriminated: false
    docs: ID of the payment method used with this SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupAttemptPaymentMethodDetails:
    docs: ''
    properties:
      acss_debit:
        type: optional<SetupAttemptPaymentMethodDetailsAcssDebit>
      amazon_pay:
        type: optional<SetupAttemptPaymentMethodDetailsAmazonPay>
      au_becs_debit:
        type: optional<SetupAttemptPaymentMethodDetailsAuBecsDebit>
      bacs_debit:
        type: optional<SetupAttemptPaymentMethodDetailsBacsDebit>
      bancontact:
        type: optional<SetupAttemptPaymentMethodDetailsBancontact>
      boleto:
        type: optional<SetupAttemptPaymentMethodDetailsBoleto>
      card:
        type: optional<SetupAttemptPaymentMethodDetailsCard>
      card_present:
        type: optional<SetupAttemptPaymentMethodDetailsCardPresent>
      cashapp:
        type: optional<SetupAttemptPaymentMethodDetailsCashapp>
      ideal:
        type: optional<SetupAttemptPaymentMethodDetailsIdeal>
      kakao_pay:
        type: optional<SetupAttemptPaymentMethodDetailsKakaoPay>
      klarna:
        type: optional<SetupAttemptPaymentMethodDetailsKlarna>
      kr_card:
        type: optional<SetupAttemptPaymentMethodDetailsKrCard>
      link:
        type: optional<SetupAttemptPaymentMethodDetailsLink>
      paypal:
        type: optional<SetupAttemptPaymentMethodDetailsPaypal>
      revolut_pay:
        type: optional<SetupAttemptPaymentMethodDetailsRevolutPay>
      sepa_debit:
        type: optional<SetupAttemptPaymentMethodDetailsSepaDebit>
      sofort:
        type: optional<SetupAttemptPaymentMethodDetailsSofort>
      type:
        docs: >-
          The type of the payment method used in the SetupIntent (e.g., `card`).
          An additional hash is included on `payment_method_details` with a name
          matching this value. It contains confirmation-specific information for
          the payment method.
        type: string
        validation:
          maxLength: 5000
      us_bank_account:
        type: optional<SetupAttemptPaymentMethodDetailsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsAcssDebit:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsAmazonPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsAuBecsDebit:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsBacsDebit:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsBancontact:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this SetupAttempt.
        type: optional<SetupAttemptPaymentMethodDetailsBancontactGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
        type: >-
          optional<SetupAttemptPaymentMethodDetailsBancontactGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_language:
        docs: >-
          Preferred language of the Bancontact authorization page that the
          customer is redirected to.

          Can be one of `en`, `de`, `fr`, or `nl`
        type: optional<SetupAttemptPaymentMethodDetailsBancontactPreferredLanguage>
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by
          Bancontact directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsBancontactGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupAttemptPaymentMethodDetailsBancontactGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  SetupAttemptPaymentMethodDetailsBancontactPreferredLanguage:
    docs: >-
      Preferred language of the Bancontact authorization page that the customer
      is redirected to.

      Can be one of `en`, `de`, `fr`, or `nl`
    enum:
      - de
      - en
      - fr
      - nl
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsBoleto:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCard:
    docs: ''
    properties:
      brand:
        docs: >-
          Card brand. Can be `amex`, `diners`, `discover`, `eftpos_au`, `jcb`,
          `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      checks:
        docs: >-
          Check results by Card networks on Card address and CVC at the time of
          authorization
        type: optional<SetupAttemptPaymentMethodDetailsCardChecks>
      country:
        docs: >-
          Two-letter ISO code representing the country of the card. You could
          use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          A high-level description of the type of cards issued in this range.
          (For internal use only and not typically available in standard API
          requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      exp_month:
        docs: Two-digit number representing the card's expiration month.
        type: optional<integer>
      exp_year:
        docs: Four-digit number representing the card's expiration year.
        type: optional<integer>
      fingerprint:
        docs: >-
          Uniquely identifies this particular card number. You can use this
          attribute to check whether two customers who’ve signed up with you are
          using the same card number, for example. For payment methods that
          tokenize card information (Apple Pay, Google Pay), the tokenized
          number might be provided instead of the underlying card number.


          *As of May 1, 2021, card fingerprint in India for Connect changed to
          allow two fingerprints for the same card---one for India and one for
          the rest of the world.*
        type: optional<string>
        validation:
          maxLength: 5000
      funding:
        docs: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      iin:
        docs: >-
          Issuer identification number of the card. (For internal use only and
          not typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      issuer:
        docs: >-
          The name of the card's issuing bank. (For internal use only and not
          typically available in standard API requests.)
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the card.
        type: optional<string>
        validation:
          maxLength: 5000
      network:
        docs: >-
          Identifies which network this charge was processed on. Can be `amex`,
          `cartes_bancaires`, `diners`, `discover`, `eftpos_au`, `interac`,
          `jcb`, `link`, `mastercard`, `unionpay`, `visa`, or `unknown`.
        type: optional<string>
        validation:
          maxLength: 5000
      three_d_secure:
        docs: Populated if this authorization used 3D Secure authentication.
        type: optional<ThreeDSecureDetails>
      wallet:
        docs: >-
          If this Card is part of a card wallet, this contains the details of
          the card wallet.
        type: optional<SetupAttemptPaymentMethodDetailsCardWallet>
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCardChecks:
    docs: ''
    properties:
      address_line1_check:
        docs: >-
          If a address line1 was provided, results of the check, one of `pass`,
          `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      address_postal_code_check:
        docs: >-
          If a address postal code was provided, results of the check, one of
          `pass`, `fail`, `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
      cvc_check:
        docs: >-
          If a CVC was provided, results of the check, one of `pass`, `fail`,
          `unavailable`, or `unchecked`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCardPresent:
    docs: ''
    properties:
      generated_card:
        docs: >-
          The ID of the Card PaymentMethod which was generated by this
          SetupAttempt.
        type: optional<SetupAttemptPaymentMethodDetailsCardPresentGeneratedCard>
      offline:
        docs: Details about payments collected offline.
        type: optional<PaymentMethodDetailsCardPresentOffline>
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCardPresentGeneratedCard:
    discriminated: false
    docs: The ID of the Card PaymentMethod which was generated by this SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupAttemptPaymentMethodDetailsCardWallet:
    docs: ''
    properties:
      apple_pay:
        type: optional<PaymentMethodDetailsCardWalletApplePay>
      google_pay:
        type: optional<PaymentMethodDetailsCardWalletGooglePay>
      type:
        docs: >-
          The type of the card wallet, one of `apple_pay`, `google_pay`, or
          `link`. An additional hash is included on the Wallet subhash with a
          name matching this value. It contains additional information specific
          to the card wallet type.
        type: SetupAttemptPaymentMethodDetailsCardWalletType
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCardWalletType:
    docs: >-
      The type of the card wallet, one of `apple_pay`, `google_pay`, or `link`.
      An additional hash is included on the Wallet subhash with a name matching
      this value. It contains additional information specific to the card wallet
      type.
    enum:
      - apple_pay
      - google_pay
      - link
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsCashapp:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsIdeal:
    docs: ''
    properties:
      bank:
        docs: >-
          The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
          `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`,
          `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or
          `yoursafe`.
        type: optional<SetupAttemptPaymentMethodDetailsIdealBank>
      bic:
        docs: The Bank Identifier Code of the customer's bank.
        type: optional<SetupAttemptPaymentMethodDetailsIdealBic>
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this SetupAttempt.
        type: optional<SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
        type: >-
          optional<SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by iDEAL
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsIdealBank:
    docs: >-
      The customer's bank. Can be one of `abn_amro`, `asn_bank`, `bunq`,
      `handelsbanken`, `ing`, `knab`, `moneyou`, `n26`, `nn`, `rabobank`,
      `regiobank`, `revolut`, `sns_bank`, `triodos_bank`, `van_lanschot`, or
      `yoursafe`.
    enum:
      - abn_amro
      - asn_bank
      - bunq
      - handelsbanken
      - ing
      - knab
      - moneyou
      - n26
      - nn
      - rabobank
      - regiobank
      - revolut
      - sns_bank
      - triodos_bank
      - van_lanschot
      - yoursafe
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsIdealBic:
    docs: The Bank Identifier Code of the customer's bank.
    enum:
      - ABNANL2A
      - ASNBNL21
      - BITSNL2A
      - BUNQNL2A
      - FVLBNL22
      - HANDNL2A
      - INGBNL2A
      - KNABNL2H
      - MOYONL21
      - NNBANL2G
      - NTSBDEB1
      - RABONL2U
      - RBRBNL21
      - REVOIE23
      - REVOLT21
      - SNSBNL2A
      - TRIONL2U
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupAttemptPaymentMethodDetailsIdealGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  SetupAttemptPaymentMethodDetailsKakaoPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsKlarna:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsKrCard:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsLink:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsPaypal:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsRevolutPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsSepaDebit:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsSofort:
    docs: ''
    properties:
      bank_code:
        docs: Bank code of bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      bic:
        docs: Bank Identifier Code of the bank associated with the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
      generated_sepa_debit:
        docs: >-
          The ID of the SEPA Direct Debit PaymentMethod which was generated by
          this SetupAttempt.
        type: optional<SetupAttemptPaymentMethodDetailsSofortGeneratedSepaDebit>
      generated_sepa_debit_mandate:
        docs: >-
          The mandate for the SEPA Direct Debit PaymentMethod which was
          generated by this SetupAttempt.
        type: >-
          optional<SetupAttemptPaymentMethodDetailsSofortGeneratedSepaDebitMandate>
      iban_last4:
        docs: Last four characters of the IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      preferred_language:
        docs: >-
          Preferred language of the Sofort authorization page that the customer
          is redirected to.

          Can be one of `en`, `de`, `fr`, or `nl`
        type: optional<SetupAttemptPaymentMethodDetailsSofortPreferredLanguage>
      verified_name:
        docs: >-
          Owner's verified full name. Values are verified or provided by Sofort
          directly

          (if supported) at the time of authorization or settlement. They cannot
          be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsSofortGeneratedSepaDebit:
    discriminated: false
    docs: >-
      The ID of the SEPA Direct Debit PaymentMethod which was generated by this
      SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupAttemptPaymentMethodDetailsSofortGeneratedSepaDebitMandate:
    discriminated: false
    docs: >-
      The mandate for the SEPA Direct Debit PaymentMethod which was generated by
      this SetupAttempt.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  SetupAttemptPaymentMethodDetailsSofortPreferredLanguage:
    docs: >-
      Preferred language of the Sofort authorization page that the customer is
      redirected to.

      Can be one of `en`, `de`, `fr`, or `nl`
    enum:
      - de
      - en
      - fr
      - nl
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupAttemptPaymentMethodDetailsUsBankAccount:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupAttemptSetupIntent:
    discriminated: false
    docs: ID of the SetupIntent that this attempt belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupIntent
  SetupIntent:
    docs: >-
      A SetupIntent guides you through the process of setting up and saving a
      customer's payment credentials for future payments.

      For example, you can use a SetupIntent to set up and save your customer's
      card without immediately collecting a payment.

      Later, you can use
      [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the
      payment flow.


      Create a SetupIntent when you're ready to collect your customer's payment
      credentials.

      Don't maintain long-lived, unconfirmed SetupIntents because they might not
      be valid.

      The SetupIntent transitions through multiple
      [statuses](https://docs.stripe.com/payments/intents#intent-statuses) as it
      guides

      you through the setup process.


      Successful SetupIntents result in payment credentials that are optimized
      for future payments.

      For example, cardholders in [certain
      regions](https://stripe.com/guides/strong-customer-authentication) might
      need to be run through

      [Strong Customer
      Authentication](https://docs.stripe.com/strong-customer-authentication)
      during payment method collection

      to streamline later [off-session
      payments](https://docs.stripe.com/payments/setup-intents).

      If you use the SetupIntent with a
      [Customer](https://stripe.com/docs/api#setup_intent_object-customer),

      it automatically attaches the resulting payment method to that Customer
      after successful setup.

      We recommend using SetupIntents or
      [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage)
      on

      PaymentIntents to save payment methods to prevent saving invalid or
      unoptimized payment methods.


      By using SetupIntents, you can reduce friction for your customers, even as
      regulations change over time.


      Related guide: [Setup Intents
      API](https://docs.stripe.com/payments/setup-intents)
    properties:
      application:
        docs: ID of the Connect application that created the SetupIntent.
        type: optional<SetupIntentApplication>
      attach_to_self:
        docs: >-
          If present, the SetupIntent's payment method will be attached to the
          in-context Stripe Account.


          It can only be used for this Stripe Account’s own money movement flows
          like InboundTransfer and OutboundTransfers. It cannot be set to true
          when setting up a PaymentMethod for a Customer, and defaults to false
          when attaching a PaymentMethod to a Customer.
        type: optional<boolean>
      automatic_payment_methods:
        docs: Settings for dynamic payment methods compatible with this Setup Intent
        type: optional<PaymentFlowsAutomaticPaymentMethodsSetupIntent>
      cancellation_reason:
        docs: >-
          Reason for cancellation of this SetupIntent, one of `abandoned`,
          `requested_by_customer`, or `duplicate`.
        type: optional<SetupIntentCancellationReason>
      client_secret:
        docs: >-
          The client secret of this SetupIntent. Used for client-side retrieval
          using a publishable key.


          The client secret can be used to complete payment setup from your
          frontend. It should not be stored, logged, or exposed to anyone other
          than the customer. Make sure that you have TLS enabled on any page
          that includes the client secret.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: >-
          ID of the Customer this SetupIntent belongs to, if one exists.


          If present, the SetupIntent's payment method will be attached to the
          Customer on successful setup. Payment methods attached to other
          Customers cannot be used with this SetupIntent.
        type: optional<SetupIntentCustomer>
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      flow_directions:
        docs: >-
          Indicates the directions of money movement for which this payment
          method is intended to be used.


          Include `inbound` if you intend to use the payment method as the
          origin to pull funds from. Include `outbound` if you intend to use the
          payment method as the destination to send funds to. You can include
          both if you intend to use the payment method for both purposes.
        type: optional<list<SetupIntentFlowDirectionsItem>>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      last_setup_error:
        docs: The error encountered in the previous SetupIntent confirmation.
        type: optional<ApiErrors>
      latest_attempt:
        docs: The most recent SetupAttempt for this SetupIntent.
        type: optional<SetupIntentLatestAttempt>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      mandate:
        docs: ID of the multi use Mandate generated by the SetupIntent.
        type: optional<SetupIntentMandate>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      next_action:
        docs: >-
          If present, this property tells you what actions you need to take in
          order for your customer to continue payment setup.
        type: optional<SetupIntentNextAction>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"setup_intent">
      on_behalf_of:
        docs: The account (if any) for which the setup is intended.
        type: optional<SetupIntentOnBehalfOf>
      payment_method:
        docs: >-
          ID of the payment method used with this SetupIntent. If the payment
          method is `card_present` and isn't a digital wallet, then the
          [generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card)
          associated with the `latest_attempt` is attached to the Customer
          instead.
        type: optional<SetupIntentPaymentMethod>
      payment_method_configuration_details:
        docs: >-
          Information about the [payment method
          configuration](https://stripe.com/docs/api/payment_method_configurations)
          used for this Setup Intent.
        type: optional<PaymentMethodConfigBizPaymentMethodConfigurationDetails>
      payment_method_options:
        docs: Payment method-specific configuration for this SetupIntent.
        type: optional<SetupIntentPaymentMethodOptions>
      payment_method_types:
        docs: >-
          The list of payment method types (e.g. card) that this SetupIntent is
          allowed to set up.
        type: list<string>
      single_use_mandate:
        docs: ID of the single_use Mandate generated by the SetupIntent.
        type: optional<SetupIntentSingleUseMandate>
      status:
        docs: >-
          [Status](https://stripe.com/docs/payments/intents#intent-statuses) of
          this SetupIntent, one of `requires_payment_method`,
          `requires_confirmation`, `requires_action`, `processing`, `canceled`,
          or `succeeded`.
        type: SetupIntentStatus
      usage:
        docs: >-
          Indicates how the payment method is intended to be used in the future.


          Use `on_session` if you intend to only reuse the payment method when
          the customer is in your checkout flow. Use `off_session` if your
          customer may or may not be in your checkout flow. If not provided,
          this value defaults to `off_session`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentApplication:
    discriminated: false
    docs: ID of the Connect application that created the SetupIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  SetupIntentCanceled:
    docs: Occurs when a SetupIntent is canceled.
    properties:
      object:
        type: SetupIntent
    source:
      openapi: ../openapi.yaml
  SetupIntentCancellationReason:
    docs: >-
      Reason for cancellation of this SetupIntent, one of `abandoned`,
      `requested_by_customer`, or `duplicate`.
    enum:
      - abandoned
      - duplicate
      - requested_by_customer
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentCreated:
    docs: Occurs when a new SetupIntent is created.
    properties:
      object:
        type: SetupIntent
    source:
      openapi: ../openapi.yaml
  SetupIntentCustomer:
    discriminated: false
    docs: >-
      ID of the Customer this SetupIntent belongs to, if one exists.


      If present, the SetupIntent's payment method will be attached to the
      Customer on successful setup. Payment methods attached to other Customers
      cannot be used with this SetupIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  SetupIntentFlowDirectionsItem:
    enum:
      - inbound
      - outbound
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentLatestAttempt:
    discriminated: false
    docs: The most recent SetupAttempt for this SetupIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupAttempt
  SetupIntentMandate:
    discriminated: false
    docs: ID of the multi use Mandate generated by the SetupIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  SetupIntentNextAction:
    docs: ''
    properties:
      cashapp_handle_redirect_or_display_qr_code:
        type: optional<PaymentIntentNextActionCashappHandleRedirectOrDisplayQrCode>
      redirect_to_url:
        type: optional<SetupIntentNextActionRedirectToUrl>
      type:
        docs: >-
          Type of the next action to perform, one of `redirect_to_url`,
          `use_stripe_sdk`, `alipay_handle_redirect`, `oxxo_display_details`, or
          `verify_with_microdeposits`.
        type: string
        validation:
          maxLength: 5000
      use_stripe_sdk:
        docs: >-
          When confirming a SetupIntent with Stripe.js, Stripe.js depends on the
          contents of this dictionary to invoke authentication flows. The shape
          of the contents is subject to change and is only intended to be used
          by Stripe.js.
        type: optional<map<string, unknown>>
      verify_with_microdeposits:
        type: optional<SetupIntentNextActionVerifyWithMicrodeposits>
    source:
      openapi: ../openapi.yaml
  SetupIntentNextActionRedirectToUrl:
    docs: ''
    properties:
      return_url:
        docs: >-
          If the customer does not exit their browser while authenticating, they
          will be redirected to this specified URL after completion.
        type: optional<string>
        validation:
          maxLength: 5000
      url:
        docs: The URL you must redirect your customer to in order to authenticate.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentNextActionVerifyWithMicrodeposits:
    docs: ''
    properties:
      arrival_date:
        docs: The timestamp when the microdeposits are expected to land.
        type: integer
      hosted_verification_url:
        docs: >-
          The URL for the hosted verification page, which allows customers to
          verify their bank account.
        type: string
        validation:
          maxLength: 5000
      microdeposit_type:
        docs: >-
          The type of the microdeposit sent to the customer. Used to distinguish
          between different verification methods.
        type: optional<SetupIntentNextActionVerifyWithMicrodepositsMicrodepositType>
    source:
      openapi: ../openapi.yaml
  SetupIntentNextActionVerifyWithMicrodepositsMicrodepositType:
    docs: >-
      The type of the microdeposit sent to the customer. Used to distinguish
      between different verification methods.
    enum:
      - amounts
      - descriptor_code
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentOnBehalfOf:
    discriminated: false
    docs: The account (if any) for which the setup is intended.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  SetupIntentPaymentMethod:
    discriminated: false
    docs: >-
      ID of the payment method used with this SetupIntent. If the payment method
      is `card_present` and isn't a digital wallet, then the
      [generated_card](https://docs.stripe.com/api/setup_attempts/object#setup_attempt_object-payment_method_details-card_present-generated_card)
      associated with the `latest_attempt` is attached to the Customer instead.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SetupIntentPaymentMethodOptions:
    docs: ''
    properties:
      acss_debit:
        type: optional<SetupIntentPaymentMethodOptionsAcssDebit>
      amazon_pay:
        type: optional<SetupIntentPaymentMethodOptionsAmazonPay>
      bacs_debit:
        type: optional<SetupIntentPaymentMethodOptionsBacsDebit>
      card:
        type: optional<SetupIntentPaymentMethodOptionsCard>
      card_present:
        type: optional<SetupIntentPaymentMethodOptionsCardPresent>
      link:
        type: optional<SetupIntentPaymentMethodOptionsLink>
      paypal:
        type: optional<SetupIntentPaymentMethodOptionsPaypal>
      sepa_debit:
        type: optional<SetupIntentPaymentMethodOptionsSepaDebit>
      us_bank_account:
        type: optional<SetupIntentPaymentMethodOptionsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsAcssDebit:
    docs: ''
    properties:
      currency:
        docs: Currency supported by the bank account
        type: optional<SetupIntentPaymentMethodOptionsAcssDebitCurrency>
      mandate_options:
        type: optional<SetupIntentPaymentMethodOptionsMandateOptionsAcssDebit>
      verification_method:
        docs: Bank account verification method.
        type: optional<SetupIntentPaymentMethodOptionsAcssDebitVerificationMethod>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsAcssDebitCurrency:
    docs: Currency supported by the bank account
    enum:
      - cad
      - usd
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsAcssDebitVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsAmazonPay:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsBacsDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<SetupIntentPaymentMethodOptionsMandateOptionsBacsDebit>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCard:
    docs: ''
    properties:
      mandate_options:
        docs: >-
          Configuration options for setting up an eMandate for cards issued in
          India.
        type: optional<SetupIntentPaymentMethodOptionsCardMandateOptions>
      network:
        docs: >-
          Selected network to process this SetupIntent on. Depends on the
          available networks of the card attached to the setup intent. Can be
          only set confirm-time.
        type: optional<SetupIntentPaymentMethodOptionsCardNetwork>
      request_three_d_secure:
        docs: >-
          We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and
          [other
          requirements](https://stripe.com/docs/strong-customer-authentication).
          However, if you wish to request 3D Secure based on logic from your own
          fraud engine, provide this option. If not provided, this value
          defaults to `automatic`. Read our guide on [manually requesting 3D
          Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar
          and our SCA Engine.
        type: optional<SetupIntentPaymentMethodOptionsCardRequestThreeDSecure>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardMandateOptions:
    docs: ''
    properties:
      amount:
        docs: Amount to be charged for future payments.
        type: integer
      amount_type:
        docs: >-
          One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to
          the exact amount to be charged in future payments. If `maximum`, the
          amount charged can be up to the value passed for the `amount` param.
        type: SetupIntentPaymentMethodOptionsCardMandateOptionsAmountType
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          A description of the mandate or subscription that is meant to be
          displayed to the customer.
        type: optional<string>
        validation:
          maxLength: 200
      end_date:
        docs: >-
          End date of the mandate or subscription. If not provided, the mandate
          will be active until canceled. If provided, end date should be after
          start date.
        type: optional<integer>
      interval:
        docs: >-
          Specifies payment frequency. One of `day`, `week`, `month`, `year`, or
          `sporadic`.
        type: SetupIntentPaymentMethodOptionsCardMandateOptionsInterval
      interval_count:
        docs: >-
          The number of intervals between payments. For example,
          `interval=month` and `interval_count=3` indicates one payment every
          three months. Maximum of one year interval allowed (1 year, 12 months,
          or 52 weeks). This parameter is optional when `interval=sporadic`.
        type: optional<integer>
      reference:
        docs: Unique identifier for the mandate or subscription.
        type: string
        validation:
          maxLength: 80
      start_date:
        docs: >-
          Start date of the mandate or subscription. Start date should not be
          lesser than yesterday.
        type: integer
      supported_types:
        docs: Specifies the type of mandates supported. Possible values are `india`.
        type: optional<list<literal<"india">>>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardMandateOptionsAmountType:
    docs: >-
      One of `fixed` or `maximum`. If `fixed`, the `amount` param refers to the
      exact amount to be charged in future payments. If `maximum`, the amount
      charged can be up to the value passed for the `amount` param.
    enum:
      - fixed
      - maximum
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardMandateOptionsInterval:
    docs: >-
      Specifies payment frequency. One of `day`, `week`, `month`, `year`, or
      `sporadic`.
    enum:
      - day
      - month
      - sporadic
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardNetwork:
    docs: >-
      Selected network to process this SetupIntent on. Depends on the available
      networks of the card attached to the setup intent. Can be only set
      confirm-time.
    enum:
      - amex
      - cartes_bancaires
      - diners
      - discover
      - eftpos_au
      - girocard
      - interac
      - jcb
      - link
      - mastercard
      - unionpay
      - unknown
      - visa
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardPresent:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsCardRequestThreeDSecure:
    docs: >-
      We strongly recommend that you rely on our SCA Engine to automatically
      prompt your customers for authentication based on risk level and [other
      requirements](https://stripe.com/docs/strong-customer-authentication).
      However, if you wish to request 3D Secure based on logic from your own
      fraud engine, provide this option. If not provided, this value defaults to
      `automatic`. Read our guide on [manually requesting 3D
      Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
      for more information on how this configuration interacts with Radar and
      our SCA Engine.
    enum:
      - any
      - automatic
      - challenge
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsLink:
    docs: ''
    properties:
      persistent_token:
        docs: >-
          [Deprecated] This is a legacy parameter that no longer has any
          function.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsAcssDebit:
    docs: ''
    properties:
      custom_mandate_url:
        docs: A URL for custom mandate text
        type: optional<string>
        validation:
          maxLength: 5000
      default_for:
        docs: >-
          List of Stripe products where this mandate can be selected
          automatically.
        type: >-
          optional<list<SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitDefaultForItem>>
      interval_description:
        docs: >-
          Description of the interval. Only required if the 'payment_schedule'
          parameter is 'interval' or 'combined'.
        type: optional<string>
        validation:
          maxLength: 5000
      payment_schedule:
        docs: Payment schedule for the mandate.
        type: >-
          optional<SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitPaymentSchedule>
      transaction_type:
        docs: Transaction type of the mandate.
        type: >-
          optional<SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitTransactionType>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitDefaultForItem:
    enum:
      - invoice
      - subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitPaymentSchedule:
    docs: Payment schedule for the mandate.
    enum:
      - combined
      - interval
      - sporadic
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsAcssDebitTransactionType:
    docs: Transaction type of the mandate.
    enum:
      - business
      - personal
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsBacsDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'DDIC' or 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsMandateOptionsSepaDebit:
    docs: ''
    properties:
      reference_prefix:
        docs: >-
          Prefix used to generate the Mandate reference. Must be at most 12
          characters long. Must consist of only uppercase letters, numbers,
          spaces, or the following special characters: '/', '_', '-', '&', '.'.
          Cannot begin with 'STRIPE'.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsPaypal:
    docs: ''
    properties:
      billing_agreement_id:
        docs: >-
          The PayPal Billing Agreement ID (BAID). This is an ID generated by
          PayPal which represents the mandate between the merchant and the
          customer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsSepaDebit:
    docs: ''
    properties:
      mandate_options:
        type: optional<SetupIntentPaymentMethodOptionsMandateOptionsSepaDebit>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsUsBankAccount:
    docs: ''
    properties:
      financial_connections:
        type: optional<LinkedAccountOptionsUsBankAccount>
      mandate_options:
        type: optional<PaymentMethodOptionsUsBankAccountMandateOptions>
      verification_method:
        docs: Bank account verification method.
        type: >-
          optional<SetupIntentPaymentMethodOptionsUsBankAccountVerificationMethod>
    source:
      openapi: ../openapi.yaml
  SetupIntentPaymentMethodOptionsUsBankAccountVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentRequiresAction:
    docs: Occurs when a SetupIntent is in requires_action state.
    properties:
      object:
        type: SetupIntent
    source:
      openapi: ../openapi.yaml
  SetupIntentSetupFailed:
    docs: >-
      Occurs when a SetupIntent has failed the attempt to setup a payment
      method.
    properties:
      object:
        type: SetupIntent
    source:
      openapi: ../openapi.yaml
  SetupIntentSingleUseMandate:
    discriminated: false
    docs: ID of the single_use Mandate generated by the SetupIntent.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Mandate
  SetupIntentStatus:
    docs: >-
      [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this
      SetupIntent, one of `requires_payment_method`, `requires_confirmation`,
      `requires_action`, `processing`, `canceled`, or `succeeded`.
    enum:
      - canceled
      - processing
      - requires_action
      - requires_confirmation
      - requires_payment_method
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  SetupIntentSucceeded:
    docs: Occurs when an SetupIntent has successfully setup a payment method.
    properties:
      object:
        type: SetupIntent
    source:
      openapi: ../openapi.yaml
  SetupIntentTypeSpecificPaymentMethodOptionsClient:
    docs: ''
    properties:
      verification_method:
        docs: Bank account verification method.
        type: >-
          optional<SetupIntentTypeSpecificPaymentMethodOptionsClientVerificationMethod>
    source:
      openapi: ../openapi.yaml
  SetupIntentTypeSpecificPaymentMethodOptionsClientVerificationMethod:
    docs: Bank account verification method.
    enum:
      - automatic
      - instant
      - microdeposits
    inline: true
    source:
      openapi: ../openapi.yaml
  Shipping:
    docs: ''
    properties:
      address:
        type: optional<Address>
      carrier:
        docs: >-
          The delivery service that shipped a physical product, such as Fedex,
          UPS, USPS, etc.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: Recipient name.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: Recipient phone (including extension).
        type: optional<string>
        validation:
          maxLength: 5000
      tracking_number:
        docs: >-
          The tracking number for a physical product, obtained from the delivery
          service. If multiple tracking numbers were generated for this
          purchase, please separate them with commas.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  ShippingRate:
    docs: >-
      Shipping rates describe the price of shipping presented to your customers
      and

      applied to a purchase. For more information, see [Charge for
      shipping](https://stripe.com/docs/payments/during-payment/charge-shipping).
    properties:
      active:
        docs: >-
          Whether the shipping rate can be used for new purchases. Defaults to
          `true`.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      delivery_estimate:
        docs: >-
          The estimated range for how long shipping will take, meant to be
          displayable to the customer. This will appear on CheckoutSessions.
        type: optional<ShippingRateDeliveryEstimate>
      display_name:
        docs: >-
          The name of the shipping rate, meant to be displayable to the
          customer. This will appear on CheckoutSessions.
        type: optional<string>
        validation:
          maxLength: 5000
      fixed_amount:
        type: optional<ShippingRateFixedAmount>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"shipping_rate">
      tax_behavior:
        docs: >-
          Specifies whether the rate is considered inclusive of taxes or
          exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
        type: optional<ShippingRateTaxBehavior>
      tax_code:
        docs: >-
          A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The
          Shipping tax code is `txcd_92010001`.
        type: optional<ShippingRateTaxCode>
      type:
        docs: The type of calculation to use on the shipping rate.
        type: literal<"fixed_amount">
    source:
      openapi: ../openapi.yaml
  ShippingRateCurrencyOption:
    docs: ''
    properties:
      amount:
        docs: A non-negative integer in cents representing how much to charge.
        type: integer
      tax_behavior:
        docs: >-
          Specifies whether the rate is considered inclusive of taxes or
          exclusive of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
        type: ShippingRateCurrencyOptionTaxBehavior
    source:
      openapi: ../openapi.yaml
  ShippingRateCurrencyOptionTaxBehavior:
    docs: >-
      Specifies whether the rate is considered inclusive of taxes or exclusive
      of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    enum:
      - exclusive
      - inclusive
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  ShippingRateDeliveryEstimate:
    docs: ''
    properties:
      maximum:
        docs: >-
          The upper bound of the estimated range. If empty, represents no upper
          bound i.e., infinite.
        type: optional<ShippingRateDeliveryEstimateBound>
      minimum:
        docs: >-
          The lower bound of the estimated range. If empty, represents no lower
          bound.
        type: optional<ShippingRateDeliveryEstimateBound>
    source:
      openapi: ../openapi.yaml
  ShippingRateDeliveryEstimateBound:
    docs: ''
    properties:
      unit:
        docs: A unit of time.
        type: ShippingRateDeliveryEstimateBoundUnit
      value:
        docs: Must be greater than 0.
        type: integer
    source:
      openapi: ../openapi.yaml
  ShippingRateDeliveryEstimateBoundUnit:
    docs: A unit of time.
    enum:
      - business_day
      - day
      - hour
      - month
      - week
    inline: true
    source:
      openapi: ../openapi.yaml
  ShippingRateFixedAmount:
    docs: ''
    properties:
      amount:
        docs: A non-negative integer in cents representing how much to charge.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      currency_options:
        docs: >-
          Shipping rates defined in each available currency option. Each key
          must be a three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html) and a
          [supported currency](https://stripe.com/docs/currencies).
        type: optional<map<string, ShippingRateCurrencyOption>>
    source:
      openapi: ../openapi.yaml
  ShippingRateTaxBehavior:
    docs: >-
      Specifies whether the rate is considered inclusive of taxes or exclusive
      of taxes. One of `inclusive`, `exclusive`, or `unspecified`.
    enum:
      - exclusive
      - inclusive
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  ShippingRateTaxCode:
    discriminated: false
    docs: >-
      A [tax code](https://stripe.com/docs/tax/tax-categories) ID. The Shipping
      tax code is `txcd_92010001`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxCode
  SigmaScheduledQueryRunCreated:
    docs: Occurs whenever a Sigma scheduled query run finishes.
    properties:
      object:
        type: ScheduledQueryRun
    source:
      openapi: ../openapi.yaml
  SigmaScheduledQueryRunError:
    docs: ''
    properties:
      message:
        docs: Information about the run failure.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Source:
    docs: >-
      `Source` objects allow you to accept a variety of payment methods. They

      represent a customer's payment instrument, and can be used with the Stripe
      API

      just like a `Card` object: once chargeable, they can be charged, or can be

      attached to customers.


      Stripe doesn't recommend using the deprecated [Sources
      API](https://stripe.com/docs/api/sources).

      We recommend that you adopt the [PaymentMethods
      API](https://stripe.com/docs/api/payment_methods).

      This newer API provides access to our latest features and payment method
      types.


      Related guides: [Sources API](https://stripe.com/docs/sources) and
      [Sources & Customers](https://stripe.com/docs/sources/customers).
    properties:
      ach_credit_transfer:
        type: optional<SourceTypeAchCreditTransfer>
      ach_debit:
        type: optional<SourceTypeAchDebit>
      acss_debit:
        type: optional<SourceTypeAcssDebit>
      alipay:
        type: optional<SourceTypeAlipay>
      allow_redisplay:
        docs: >-
          This field indicates whether this payment method can be shown again to
          its customer in a checkout flow. Stripe products such as Checkout and
          Elements use this field to determine whether a payment method can be
          shown as a saved payment method in a checkout flow. The field defaults
          to “unspecified”.
        type: optional<SourceAllowRedisplay>
      amount:
        docs: >-
          A positive integer in the smallest currency unit (that is, 100 cents
          for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount associated with the source. This is the
          amount for which the source will be chargeable once ready. Required
          for `single_use` sources.
        type: optional<integer>
      au_becs_debit:
        type: optional<SourceTypeAuBecsDebit>
      bancontact:
        type: optional<SourceTypeBancontact>
      card:
        type: optional<SourceTypeCard>
      card_present:
        type: optional<SourceTypeCardPresent>
      client_secret:
        docs: >-
          The client secret of the source. Used for client-side retrieval using
          a publishable key.
        type: string
        validation:
          maxLength: 5000
      code_verification:
        type: optional<SourceCodeVerificationFlow>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO code for the
          currency](https://stripe.com/docs/currencies) associated with the
          source. This is the currency for which the source will be chargeable
          once ready. Required for `single_use` sources.
        type: optional<string>
      customer:
        docs: >-
          The ID of the customer to which this source is attached. This will not
          be present when the source has not been attached to a customer.
        type: optional<string>
        validation:
          maxLength: 5000
      eps:
        type: optional<SourceTypeEps>
      flow:
        docs: >-
          The authentication `flow` of the source. `flow` is one of `redirect`,
          `receiver`, `code_verification`, `none`.
        type: string
        validation:
          maxLength: 5000
      giropay:
        type: optional<SourceTypeGiropay>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      ideal:
        type: optional<SourceTypeIdeal>
      klarna:
        type: optional<SourceTypeKlarna>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      multibanco:
        type: optional<SourceTypeMultibanco>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"source">
      owner:
        docs: >-
          Information about the owner of the payment instrument that may be used
          or required by particular source types.
        type: optional<SourceOwner>
      p24:
        type: optional<SourceTypeP24>
      receiver:
        type: optional<SourceReceiverFlow>
      redirect:
        type: optional<SourceRedirectFlow>
      sepa_credit_transfer:
        type: optional<SourceTypeSepaCreditTransfer>
      sepa_debit:
        type: optional<SourceTypeSepaDebit>
      sofort:
        type: optional<SourceTypeSofort>
      source_order:
        type: optional<SourceOrder>
      statement_descriptor:
        docs: >-
          Extra information about a source. This will appear on your customer's
          statement every time you charge the source.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the source, one of `canceled`, `chargeable`, `consumed`,
          `failed`, or `pending`. Only `chargeable` sources can be used to
          create a charge.
        type: string
        validation:
          maxLength: 5000
      three_d_secure:
        type: optional<SourceTypeThreeDSecure>
      type:
        docs: >-
          The `type` of the source. The `type` is a payment method, one of
          `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`,
          `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`,
          `p24`, `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An
          additional hash is included on the source with a name matching this
          value. It contains additional information specific to the [payment
          method](https://stripe.com/docs/sources) used.
        type: SourceType
      usage:
        docs: >-
          Either `reusable` or `single_use`. Whether this source should be
          reusable or not. Some source types may or may not be reusable by
          construction, while others may leave the option at creation. If an
          incompatible value is passed, an error will be returned.
        type: optional<string>
        validation:
          maxLength: 5000
      wechat:
        type: optional<SourceTypeWechat>
    source:
      openapi: ../openapi.yaml
  SourceAllowRedisplay:
    docs: >-
      This field indicates whether this payment method can be shown again to its
      customer in a checkout flow. Stripe products such as Checkout and Elements
      use this field to determine whether a payment method can be shown as a
      saved payment method in a checkout flow. The field defaults to
      “unspecified”.
    enum:
      - always
      - limited
      - unspecified
    inline: true
    source:
      openapi: ../openapi.yaml
  SourceCanceled:
    docs: Occurs whenever a source is canceled.
    properties:
      object:
        type: Source
    source:
      openapi: ../openapi.yaml
  SourceChargeable:
    docs: Occurs whenever a source transitions to chargeable.
    properties:
      object:
        type: Source
    source:
      openapi: ../openapi.yaml
  SourceCodeVerificationFlow:
    docs: ''
    properties:
      attempts_remaining:
        docs: >-
          The number of attempts remaining to authenticate the source object
          with a verification code.
        type: integer
      status:
        docs: >-
          The status of the code verification, either `pending` (awaiting
          verification, `attempts_remaining` should be greater than 0),
          `succeeded` (successful verification) or `failed` (failed
          verification, cannot be verified anymore as `attempts_remaining`
          should be 0).
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceFailed:
    docs: Occurs whenever a source fails.
    properties:
      object:
        type: Source
    source:
      openapi: ../openapi.yaml
  SourceMandateNotification:
    docs: >-
      Source mandate notifications should be created when a notification related
      to

      a source mandate must be sent to the payer. They will trigger a webhook or

      deliver an email to the customer.
    properties:
      acss_debit:
        type: optional<SourceMandateNotificationAcssDebitData>
      amount:
        docs: >-
          A positive integer in the smallest currency unit (that is, 100 cents
          for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the amount associated with the mandate notification. The
          amount is expressed in the currency of the underlying source. Required
          if the notification type is `debit_initiated`.
        type: optional<integer>
      bacs_debit:
        type: optional<SourceMandateNotificationBacsDebitData>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"source_mandate_notification">
      reason:
        docs: >-
          The reason of the mandate notification. Valid reasons are
          `mandate_confirmed` or `debit_initiated`.
        type: string
        validation:
          maxLength: 5000
      sepa_debit:
        type: optional<SourceMandateNotificationSepaDebitData>
      source:
        type: Source
      status:
        docs: >-
          The status of the mandate notification. Valid statuses are `pending`
          or `submitted`.
        type: string
        validation:
          maxLength: 5000
      type:
        docs: >-
          The type of source this mandate notification is attached to. Should be
          the source type identifier code for the payment method, such as
          `three_d_secure`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceMandateNotificationAcssDebitData:
    docs: ''
    properties:
      statement_descriptor:
        docs: The statement descriptor associate with the debit.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceMandateNotificationBacsDebitData:
    docs: ''
    properties:
      last4:
        docs: Last 4 digits of the account number associated with the debit.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceMandateNotificationSepaDebitData:
    docs: ''
    properties:
      creditor_identifier:
        docs: SEPA creditor ID.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last 4 digits of the account number associated with the debit.
        type: optional<string>
        validation:
          maxLength: 5000
      mandate_reference:
        docs: Mandate reference associated with the debit.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceOrder:
    docs: ''
    properties:
      amount:
        docs: >-
          A positive integer in the smallest currency unit (that is, 100 cents
          for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the total amount for the order.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      email:
        docs: The email address of the customer placing the order.
        type: optional<string>
        validation:
          maxLength: 5000
      items:
        docs: List of items constituting the order.
        type: optional<list<SourceOrderItem>>
      shipping:
        type: optional<Shipping>
    source:
      openapi: ../openapi.yaml
  SourceOrderItem:
    docs: ''
    properties:
      amount:
        docs: The amount (price) for this order item.
        type: optional<integer>
      currency:
        docs: This currency of this order item. Required when `amount` is present.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: Human-readable description for this order item.
        type: optional<string>
        validation:
          maxLength: 5000
      parent:
        docs: >-
          The ID of the associated object for this line item. Expandable if not
          null (e.g., expandable to a SKU).
        type: optional<string>
        validation:
          maxLength: 5000
      quantity:
        docs: >-
          The quantity of this order item. When type is `sku`, this is the
          number of instances of the SKU to be ordered.
        type: optional<integer>
      type:
        docs: The type of this order item. Must be `sku`, `tax`, or `shipping`.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceOwner:
    docs: ''
    properties:
      address:
        docs: Owner's address.
        type: optional<Address>
      email:
        docs: Owner's email address.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: Owner's full name.
        type: optional<string>
        validation:
          maxLength: 5000
      phone:
        docs: Owner's phone number (including extension).
        type: optional<string>
        validation:
          maxLength: 5000
      verified_address:
        docs: >-
          Verified owner's address. Verified values are verified or provided by
          the payment method directly (and if supported) at the time of
          authorization or settlement. They cannot be set or mutated.
        type: optional<Address>
      verified_email:
        docs: >-
          Verified owner's email address. Verified values are verified or
          provided by the payment method directly (and if supported) at the time
          of authorization or settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: >-
          Verified owner's full name. Verified values are verified or provided
          by the payment method directly (and if supported) at the time of
          authorization or settlement. They cannot be set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_phone:
        docs: >-
          Verified owner's phone number (including extension). Verified values
          are verified or provided by the payment method directly (and if
          supported) at the time of authorization or settlement. They cannot be
          set or mutated.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceReceiverFlow:
    docs: ''
    properties:
      address:
        docs: >-
          The address of the receiver source. This is the value that should be
          communicated to the customer to send their funds to.
        type: optional<string>
        validation:
          maxLength: 5000
      amount_charged:
        docs: >-
          The total amount that was moved to your balance. This is almost always
          equal to the amount charged. In rare cases when customers deposit
          excess funds and we are unable to refund those, those funds get moved
          to your balance and show up in amount_charged as well. The amount
          charged is expressed in the source's currency.
        type: integer
      amount_received:
        docs: >-
          The total amount received by the receiver source. `amount_received =
          amount_returned + amount_charged` should be true for consumed sources
          unless customers deposit excess funds. The amount received is
          expressed in the source's currency.
        type: integer
      amount_returned:
        docs: >-
          The total amount that was returned to the customer. The amount
          returned is expressed in the source's currency.
        type: integer
      refund_attributes_method:
        docs: Type of refund attribute method, one of `email`, `manual`, or `none`.
        type: string
        validation:
          maxLength: 5000
      refund_attributes_status:
        docs: >-
          Type of refund attribute status, one of `missing`, `requested`, or
          `available`.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceRedirectFlow:
    docs: ''
    properties:
      failure_reason:
        docs: >-
          The failure reason for the redirect, either `user_abort` (the customer
          aborted or dropped out of the redirect flow), `declined` (the
          authentication failed or the transaction was declined), or
          `processing_error` (the redirect failed due to a technical error).
          Present only if the redirect status is `failed`.
        type: optional<string>
        validation:
          maxLength: 5000
      return_url:
        docs: >-
          The URL you provide to redirect the customer to after they
          authenticated their payment.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the redirect, either `pending` (ready to be used by your
          customer to authenticate the transaction), `succeeded` (succesful
          authentication, cannot be reused) or `not_required` (redirect should
          not be used) or `failed` (failed authentication, cannot be reused).
        type: string
        validation:
          maxLength: 5000
      url:
        docs: >-
          The URL provided to you to redirect a customer to as part of a
          `redirect` authentication flow.
        type: string
        validation:
          maxLength: 2048
    source:
      openapi: ../openapi.yaml
  SourceRefundAttributesRequired:
    docs: >-
      Occurs whenever the refund attributes are required on a receiver source to
      process a refund or a mispayment.
    properties:
      object:
        type: Source
    source:
      openapi: ../openapi.yaml
  SourceTransaction:
    docs: |-
      Some payment methods have no required amount that a customer must send.
      Customers can be instructed to send any amount, and it can be made up of
      multiple transactions. As such, sources can have multiple associated
      transactions.
    properties:
      ach_credit_transfer:
        type: optional<SourceTransactionAchCreditTransferData>
      amount:
        docs: >-
          A positive integer in the smallest currency unit (that is, 100 cents
          for $1.00, or 1 for ¥1, Japanese Yen being a zero-decimal currency)
          representing the amount your customer has pushed to the receiver.
        type: integer
      chf_credit_transfer:
        type: optional<SourceTransactionChfCreditTransferData>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      gbp_credit_transfer:
        type: optional<SourceTransactionGbpCreditTransferData>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"source_transaction">
      paper_check:
        type: optional<SourceTransactionPaperCheckData>
      sepa_credit_transfer:
        type: optional<SourceTransactionSepaCreditTransferData>
      source:
        docs: The ID of the source this transaction is attached to.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the transaction, one of `succeeded`, `pending`, or
          `failed`.
        type: string
        validation:
          maxLength: 5000
      type:
        docs: The type of source this transaction is attached to.
        type: SourceTransactionType
    source:
      openapi: ../openapi.yaml
  SourceTransactionAchCreditTransferData:
    docs: ''
    properties:
      customer_data:
        docs: Customer data associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      fingerprint:
        docs: Bank account fingerprint associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last 4 digits of the account number associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      routing_number:
        docs: Routing number associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceTransactionChfCreditTransferData:
    docs: ''
    properties:
      reference:
        docs: Reference associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_address_country:
        docs: Sender's country address.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_address_line1:
        docs: Sender's line 1 address.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_iban:
        docs: Sender's bank account IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: Sender's name.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceTransactionCreated:
    docs: Occurs whenever a source transaction is created.
    properties:
      object:
        type: SourceTransaction
    source:
      openapi: ../openapi.yaml
  SourceTransactionGbpCreditTransferData:
    docs: ''
    properties:
      fingerprint:
        docs: >-
          Bank account fingerprint associated with the Stripe owned bank account
          receiving the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      funding_method:
        docs: >-
          The credit transfer rails the sender used to push this transfer. The
          possible rails are: Faster Payments, BACS, CHAPS, and wire transfers.
          Currently only Faster Payments is supported.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: Last 4 digits of sender account number associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      reference:
        docs: Sender entered arbitrary information about the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_account_number:
        docs: Sender account number associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: Sender name associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_sort_code:
        docs: Sender sort code associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceTransactionPaperCheckData:
    docs: ''
    properties:
      available_at:
        docs: >-
          Time at which the deposited funds will be available for use. Measured
          in seconds since the Unix epoch.
        type: optional<string>
        validation:
          maxLength: 5000
      invoices:
        docs: Comma-separated list of invoice IDs associated with the paper check.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceTransactionSepaCreditTransferData:
    docs: ''
    properties:
      reference:
        docs: Reference associated with the transfer.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_iban:
        docs: Sender's bank account IBAN.
        type: optional<string>
        validation:
          maxLength: 5000
      sender_name:
        docs: Sender's name.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SourceTransactionType:
    docs: The type of source this transaction is attached to.
    enum:
      - ach_credit_transfer
      - ach_debit
      - alipay
      - bancontact
      - card
      - card_present
      - eps
      - giropay
      - ideal
      - klarna
      - multibanco
      - p24
      - sepa_debit
      - sofort
      - three_d_secure
      - wechat
    inline: true
    source:
      openapi: ../openapi.yaml
  SourceTransactionUpdated:
    docs: Occurs whenever a source transaction is updated.
    properties:
      object:
        type: SourceTransaction
    source:
      openapi: ../openapi.yaml
  SourceType:
    docs: >-
      The `type` of the source. The `type` is a payment method, one of
      `ach_credit_transfer`, `ach_debit`, `alipay`, `bancontact`, `card`,
      `card_present`, `eps`, `giropay`, `ideal`, `multibanco`, `klarna`, `p24`,
      `sepa_debit`, `sofort`, `three_d_secure`, or `wechat`. An additional hash
      is included on the source with a name matching this value. It contains
      additional information specific to the [payment
      method](https://stripe.com/docs/sources) used.
    enum:
      - ach_credit_transfer
      - ach_debit
      - acss_debit
      - alipay
      - au_becs_debit
      - bancontact
      - card
      - card_present
      - eps
      - giropay
      - ideal
      - klarna
      - multibanco
      - p24
      - sepa_credit_transfer
      - sepa_debit
      - sofort
      - three_d_secure
      - wechat
    inline: true
    source:
      openapi: ../openapi.yaml
  SourceTypeAchCreditTransfer:
    properties:
      account_number: optional<string>
      bank_name: optional<string>
      fingerprint: optional<string>
      refund_account_holder_name: optional<string>
      refund_account_holder_type: optional<string>
      refund_routing_number: optional<string>
      routing_number: optional<string>
      swift_code: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeAchDebit:
    properties:
      bank_name: optional<string>
      country: optional<string>
      fingerprint: optional<string>
      last4: optional<string>
      routing_number: optional<string>
      type: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeAcssDebit:
    properties:
      bank_address_city: optional<string>
      bank_address_line_1: optional<string>
      bank_address_line_2: optional<string>
      bank_address_postal_code: optional<string>
      bank_name: optional<string>
      category: optional<string>
      country: optional<string>
      fingerprint: optional<string>
      last4: optional<string>
      routing_number: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeAlipay:
    properties:
      data_string: optional<string>
      native_url: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeAuBecsDebit:
    properties:
      bsb_number: optional<string>
      fingerprint: optional<string>
      last4: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeBancontact:
    properties:
      bank_code: optional<string>
      bank_name: optional<string>
      bic: optional<string>
      iban_last4: optional<string>
      preferred_language: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeCard:
    properties:
      address_line1_check: optional<string>
      address_zip_check: optional<string>
      brand: optional<string>
      country: optional<string>
      cvc_check: optional<string>
      description: optional<string>
      dynamic_last4: optional<string>
      exp_month: optional<integer>
      exp_year: optional<integer>
      fingerprint: optional<string>
      funding: optional<string>
      iin: optional<string>
      issuer: optional<string>
      last4: optional<string>
      name: optional<string>
      three_d_secure: optional<string>
      tokenization_method: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeCardPresent:
    properties:
      application_cryptogram: optional<string>
      application_preferred_name: optional<string>
      authorization_code: optional<string>
      authorization_response_code: optional<string>
      brand: optional<string>
      country: optional<string>
      cvm_type: optional<string>
      data_type: optional<string>
      dedicated_file_name: optional<string>
      description: optional<string>
      emv_auth_data: optional<string>
      evidence_customer_signature: optional<string>
      evidence_transaction_certificate: optional<string>
      exp_month: optional<integer>
      exp_year: optional<integer>
      fingerprint: optional<string>
      funding: optional<string>
      iin: optional<string>
      issuer: optional<string>
      last4: optional<string>
      pos_device_id: optional<string>
      pos_entry_mode: optional<string>
      read_method: optional<string>
      reader: optional<string>
      terminal_verification_results: optional<string>
      transaction_status_information: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeEps:
    properties:
      reference: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeGiropay:
    properties:
      bank_code: optional<string>
      bank_name: optional<string>
      bic: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeIdeal:
    properties:
      bank: optional<string>
      bic: optional<string>
      iban_last4: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeKlarna:
    properties:
      background_image_url: optional<string>
      client_token: optional<string>
      first_name: optional<string>
      last_name: optional<string>
      locale: optional<string>
      logo_url: optional<string>
      page_title: optional<string>
      pay_later_asset_urls_descriptive: optional<string>
      pay_later_asset_urls_standard: optional<string>
      pay_later_name: optional<string>
      pay_later_redirect_url: optional<string>
      pay_now_asset_urls_descriptive: optional<string>
      pay_now_asset_urls_standard: optional<string>
      pay_now_name: optional<string>
      pay_now_redirect_url: optional<string>
      pay_over_time_asset_urls_descriptive: optional<string>
      pay_over_time_asset_urls_standard: optional<string>
      pay_over_time_name: optional<string>
      pay_over_time_redirect_url: optional<string>
      payment_method_categories: optional<string>
      purchase_country: optional<string>
      purchase_type: optional<string>
      redirect_url: optional<string>
      shipping_delay: optional<integer>
      shipping_first_name: optional<string>
      shipping_last_name: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeMultibanco:
    properties:
      entity: optional<string>
      reference: optional<string>
      refund_account_holder_address_city: optional<string>
      refund_account_holder_address_country: optional<string>
      refund_account_holder_address_line1: optional<string>
      refund_account_holder_address_line2: optional<string>
      refund_account_holder_address_postal_code: optional<string>
      refund_account_holder_address_state: optional<string>
      refund_account_holder_name: optional<string>
      refund_iban: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeP24:
    properties:
      reference: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeSepaCreditTransfer:
    properties:
      bank_name: optional<string>
      bic: optional<string>
      iban: optional<string>
      refund_account_holder_address_city: optional<string>
      refund_account_holder_address_country: optional<string>
      refund_account_holder_address_line1: optional<string>
      refund_account_holder_address_line2: optional<string>
      refund_account_holder_address_postal_code: optional<string>
      refund_account_holder_address_state: optional<string>
      refund_account_holder_name: optional<string>
      refund_iban: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeSepaDebit:
    properties:
      bank_code: optional<string>
      branch_code: optional<string>
      country: optional<string>
      fingerprint: optional<string>
      last4: optional<string>
      mandate_reference: optional<string>
      mandate_url: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeSofort:
    properties:
      bank_code: optional<string>
      bank_name: optional<string>
      bic: optional<string>
      country: optional<string>
      iban_last4: optional<string>
      preferred_language: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeThreeDSecure:
    properties:
      address_line1_check: optional<string>
      address_zip_check: optional<string>
      authenticated: optional<boolean>
      brand: optional<string>
      card: optional<string>
      country: optional<string>
      customer: optional<string>
      cvc_check: optional<string>
      description: optional<string>
      dynamic_last4: optional<string>
      exp_month: optional<integer>
      exp_year: optional<integer>
      fingerprint: optional<string>
      funding: optional<string>
      iin: optional<string>
      issuer: optional<string>
      last4: optional<string>
      name: optional<string>
      three_d_secure: optional<string>
      tokenization_method: optional<string>
    source:
      openapi: ../openapi.yaml
  SourceTypeWechat:
    properties:
      prepay_id: optional<string>
      qr_code_url: optional<string>
      statement_descriptor: optional<string>
    source:
      openapi: ../openapi.yaml
  Subscription:
    docs: >-
      Subscriptions allow you to charge a customer on a recurring basis.


      Related guide: [Creating
      subscriptions](https://stripe.com/docs/billing/subscriptions/creating)
    properties:
      application:
        docs: ID of the Connect Application that created the subscription.
        type: optional<SubscriptionApplication>
      application_fee_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the application owner's Stripe
          account.
        type: optional<double>
      automatic_tax:
        type: SubscriptionAutomaticTax
      billing_cycle_anchor:
        docs: >-
          The reference point that aligns future [billing
          cycle](https://stripe.com/docs/subscriptions/billing-cycle) dates. It
          sets the day of week for `week` intervals, the day of month for
          `month` and `year` intervals, and the month of year for `year`
          intervals. The timestamp is in UTC format.
        type: integer
      billing_cycle_anchor_config:
        docs: The fixed values used to calculate the `billing_cycle_anchor`.
        type: optional<SubscriptionsResourceBillingCycleAnchorConfig>
      billing_thresholds:
        docs: >-
          Define thresholds at which an invoice will be sent, and the
          subscription advanced to a new billing period
        type: optional<SubscriptionBillingThresholds>
      cancel_at:
        docs: >-
          A date in the future at which the subscription will automatically get
          canceled
        type: optional<integer>
      cancel_at_period_end:
        docs: >-
          Whether this subscription will (if `status=active`) or did (if
          `status=canceled`) cancel at the end of the current billing period.
        type: boolean
      canceled_at:
        docs: >-
          If the subscription has been canceled, the date of that cancellation.
          If the subscription was canceled with `cancel_at_period_end`,
          `canceled_at` will reflect the time of the most recent update request,
          not the end of the subscription period when the subscription is
          automatically moved to a canceled state.
        type: optional<integer>
      cancellation_details:
        docs: Details about why this subscription was cancelled
        type: optional<CancellationDetails>
      collection_method:
        docs: >-
          Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay this subscription at the end
          of the cycle using the default source attached to the customer. When
          sending an invoice, Stripe will email your customer an invoice with
          payment instructions and mark the subscription as `active`.
        type: SubscriptionCollectionMethod
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      current_period_end:
        docs: >-
          End of the current period that the subscription has been invoiced for.
          At the end of this period, a new invoice will be created.
        type: integer
      current_period_start:
        docs: >-
          Start of the current period that the subscription has been invoiced
          for.
        type: integer
      customer:
        docs: ID of the customer who owns the subscription.
        type: SubscriptionCustomer
      days_until_due:
        docs: >-
          Number of days a customer has to pay invoices generated by this
          subscription. This value will be `null` for subscriptions where
          `collection_method=charge_automatically`.
        type: optional<integer>
      default_payment_method:
        docs: >-
          ID of the default payment method for the subscription. It must belong
          to the customer associated with the subscription. This takes
          precedence over `default_source`. If neither are set, invoices will
          use the customer's
          [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
          or
          [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
        type: optional<SubscriptionDefaultPaymentMethod>
      default_source:
        docs: >-
          ID of the default payment source for the subscription. It must belong
          to the customer associated with the subscription and be in a
          chargeable state. If `default_payment_method` is also set,
          `default_payment_method` will take precedence. If neither are set,
          invoices will use the customer's
          [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
          or
          [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
        type: optional<SubscriptionDefaultSource>
      default_tax_rates:
        docs: >-
          The tax rates that will apply to any subscription item that does not
          have `tax_rates` set. Invoices created will have their
          `default_tax_rates` populated from the subscription.
        type: optional<list<TaxRate>>
      description:
        docs: >-
          The subscription's description, meant to be displayable to the
          customer. Use this field to optionally store an explanation of the
          subscription for rendering in Stripe surfaces and certain local
          payment methods UIs.
        type: optional<string>
        validation:
          maxLength: 500
      discount:
        docs: >-
          Describes the current discount applied to this subscription, if there
          is one. When billing, a discount applied to a subscription overrides a
          discount applied on a customer-wide basis. This field has been
          deprecated and will be removed in a future API version. Use
          `discounts` instead.
        type: optional<Discount>
      discounts:
        docs: >-
          The discounts applied to the subscription. Subscription item discounts
          are applied before subscription discounts. Use `expand[]=discounts` to
          expand each discount.
        type: list<SubscriptionDiscountsItem>
      ended_at:
        docs: If the subscription has ended, the date the subscription ended.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice_settings:
        type: SubscriptionsResourceSubscriptionInvoiceSettings
      items:
        docs: List of subscription items, each with an attached price.
        type: SubscriptionItems
      latest_invoice:
        docs: The most recent invoice this subscription has generated.
        type: optional<SubscriptionLatestInvoice>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      next_pending_invoice_item_invoice:
        docs: >-
          Specifies the approximate timestamp on which any pending invoice items
          will be billed according to the schedule provided at
          `pending_invoice_item_interval`.
        type: optional<integer>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"subscription">
      on_behalf_of:
        docs: >-
          The account (if any) the charge was made on behalf of for charges
          associated with this subscription. See the Connect documentation for
          details.
        type: optional<SubscriptionOnBehalfOf>
      pause_collection:
        docs: >-
          If specified, payment collection for this subscription will be paused.
          Note that the subscription status will be unchanged and will not be
          updated to `paused`. Learn more about [pausing
          collection](https://stripe.com/docs/billing/subscriptions/pause-payment).
        type: optional<SubscriptionsResourcePauseCollection>
      payment_settings:
        docs: Payment settings passed on to invoices created by the subscription.
        type: optional<SubscriptionsResourcePaymentSettings>
      pending_invoice_item_interval:
        docs: >-
          Specifies an interval for how often to bill for any pending invoice
          items. It is analogous to calling [Create an
          invoice](https://stripe.com/docs/api#create_invoice) for the given
          subscription at the specified interval.
        type: optional<SubscriptionPendingInvoiceItemInterval>
      pending_setup_intent:
        docs: >-
          You can use this
          [SetupIntent](https://stripe.com/docs/api/setup_intents) to collect
          user authentication when creating a subscription without immediate
          payment or updating a subscription's payment method, allowing you to
          optimize for off-session payments. Learn more in the [SCA Migration
          Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
        type: optional<SubscriptionPendingSetupIntent>
      pending_update:
        docs: >-
          If specified, [pending
          updates](https://stripe.com/docs/billing/subscriptions/pending-updates)
          that will be applied to the subscription once the `latest_invoice` has
          been paid.
        type: optional<SubscriptionsResourcePendingUpdate>
      schedule:
        docs: The schedule attached to the subscription
        type: optional<subscription_schedule_or_id>
      start_date:
        docs: >-
          Date when the subscription was first created. The date might differ
          from the `created` date due to backdating.
        type: integer
      status:
        docs: >-
          Possible values are `incomplete`, `incomplete_expired`, `trialing`,
          `active`, `past_due`, `canceled`, `unpaid`, or `paused`. 


          For `collection_method=charge_automatically` a subscription moves into
          `incomplete` if the initial payment attempt fails. A subscription in
          this status can only have metadata and default_source updated. Once
          the first invoice is paid, the subscription moves into an `active`
          status. If the first invoice is not paid within 23 hours, the
          subscription transitions to `incomplete_expired`. This is a terminal
          status, the open invoice will be voided and no further invoices will
          be generated. 


          A subscription that is currently in a trial period is `trialing` and
          moves to `active` when the trial period is over. 


          A subscription can only enter a `paused` status [when a trial ends
          without a payment
          method](https://stripe.com/docs/billing/subscriptions/trials#create-free-trials-without-payment).
          A `paused` subscription doesn't generate invoices and can be resumed
          after your customer adds their payment method. The `paused` status is
          different from [pausing
          collection](https://stripe.com/docs/billing/subscriptions/pause-payment),
          which still generates invoices and leaves the subscription's status
          unchanged. 


          If subscription `collection_method=charge_automatically`, it becomes
          `past_due` when payment is required but cannot be paid (due to failed
          payment or awaiting additional user actions). Once Stripe has
          exhausted all payment retry attempts, the subscription will become
          `canceled` or `unpaid` (depending on your subscriptions settings). 


          If subscription `collection_method=send_invoice` it becomes `past_due`
          when its invoice is not paid by the due date, and `canceled` or
          `unpaid` if it is still not paid by an additional deadline after that.
          Note that when a subscription has a status of `unpaid`, no subsequent
          invoices will be attempted (invoices will be created, but then
          immediately automatically closed). After receiving updated payment
          information from a customer, you may choose to reopen and pay their
          closed invoices.
        type: SubscriptionStatus
      test_clock:
        docs: ID of the test clock this subscription belongs to.
        type: optional<SubscriptionTestClock>
      transfer_data:
        docs: >-
          The account (if any) the subscription's payments will be attributed to
          for tax reporting, and where funds from each payment will be
          transferred to for each of the subscription's invoices.
        type: optional<SubscriptionTransferData>
      trial_end:
        docs: If the subscription has a trial, the end of that trial.
        type: optional<integer>
      trial_settings:
        docs: Settings related to subscription trials.
        type: optional<SubscriptionsTrialsResourceTrialSettings>
      trial_start:
        docs: If the subscription has a trial, the beginning of that trial.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  subscription_schedule_or_id:
    discriminated: false
    docs: The schedule attached to the subscription
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SubscriptionSchedule
  SubscriptionApplication:
    discriminated: false
    docs: ID of the Connect Application that created the subscription.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  SubscriptionAutomaticTax:
    docs: ''
    properties:
      disabled_reason:
        docs: If Stripe disabled automatic tax, this enum describes why.
        type: optional<literal<"requires_location_inputs">>
      enabled:
        docs: Whether Stripe automatically computes tax on this subscription.
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
    source:
      openapi: ../openapi.yaml
  SubscriptionBillingThresholds:
    docs: ''
    properties:
      amount_gte:
        docs: Monetary threshold that triggers the subscription to create an invoice
        type: optional<integer>
      reset_billing_cycle_anchor:
        docs: >-
          Indicates if the `billing_cycle_anchor` should be reset when a
          threshold is reached. If true, `billing_cycle_anchor` will be updated
          to the date/time the threshold was last reached; otherwise, the value
          will remain unchanged. This value may not be `true` if the
          subscription contains items with plans that have
          `aggregate_usage=last_ever`.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  SubscriptionCollectionMethod:
    docs: >-
      Either `charge_automatically`, or `send_invoice`. When charging
      automatically, Stripe will attempt to pay this subscription at the end of
      the cycle using the default source attached to the customer. When sending
      an invoice, Stripe will email your customer an invoice with payment
      instructions and mark the subscription as `active`.
    enum:
      - charge_automatically
      - send_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionCustomer:
    discriminated: false
    docs: ID of the customer who owns the subscription.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  SubscriptionDefaultPaymentMethod:
    discriminated: false
    docs: >-
      ID of the default payment method for the subscription. It must belong to
      the customer associated with the subscription. This takes precedence over
      `default_source`. If neither are set, invoices will use the customer's
      [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
      or
      [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SubscriptionDefaultSource:
    discriminated: false
    docs: >-
      ID of the default payment source for the subscription. It must belong to
      the customer associated with the subscription and be in a chargeable
      state. If `default_payment_method` is also set, `default_payment_method`
      will take precedence. If neither are set, invoices will use the customer's
      [invoice_settings.default_payment_method](https://stripe.com/docs/api/customers/object#customer_object-invoice_settings-default_payment_method)
      or
      [default_source](https://stripe.com/docs/api/customers/object#customer_object-default_source).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentSource
  SubscriptionDetailsData:
    docs: ''
    properties:
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) defined
          as subscription metadata when an invoice is created. Becomes an
          immutable snapshot of the subscription metadata at the time of invoice
          finalization.
           *Note: This attribute is populated only for invoices created on or after June 29, 2023.*
        type: optional<map<string, optional<string>>>
    source:
      openapi: ../openapi.yaml
  SubscriptionDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  SubscriptionItem:
    docs: >-
      Subscription items allow you to create customer subscriptions with more
      than

      one plan, making it easy to represent complex billing relationships.
    properties:
      billing_thresholds:
        docs: >-
          Define thresholds at which an invoice will be sent, and the related
          subscription advanced to a new billing period
        type: optional<SubscriptionItemBillingThresholds>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      discounts:
        docs: >-
          The discounts applied to the subscription item. Subscription item
          discounts are applied before subscription discounts. Use
          `expand[]=discounts` to expand each discount.
        type: list<SubscriptionItemDiscountsItem>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"subscription_item">
      plan:
        type: Plan
      price:
        type: Price
      quantity:
        docs: >-
          The [quantity](https://stripe.com/docs/subscriptions/quantities) of
          the plan to which the customer should be subscribed.
        type: optional<integer>
      subscription:
        docs: The `subscription` this `subscription_item` belongs to.
        type: string
        validation:
          maxLength: 5000
      tax_rates:
        docs: >-
          The tax rates which apply to this `subscription_item`. When set, the
          `default_tax_rates` on the subscription do not apply to this
          `subscription_item`.
        type: optional<list<TaxRate>>
    source:
      openapi: ../openapi.yaml
  SubscriptionItemBillingThresholds:
    docs: ''
    properties:
      usage_gte:
        docs: Usage threshold that triggers the subscription to create an invoice
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  SubscriptionItemDiscountsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Discount
  SubscriptionItems:
    docs: List of subscription items, each with an attached price.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<SubscriptionItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  SubscriptionLatestInvoice:
    discriminated: false
    docs: The most recent invoice this subscription has generated.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Invoice
  SubscriptionOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) the charge was made on behalf of for charges
      associated with this subscription. See the Connect documentation for
      details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  SubscriptionPaymentMethodOptionsCard:
    docs: ''
    properties:
      mandate_options:
        type: optional<InvoiceMandateOptionsCard>
      network:
        docs: >-
          Selected network to process this Subscription on. Depends on the
          available networks of the card attached to the Subscription. Can be
          only set confirm-time.
        type: optional<SubscriptionPaymentMethodOptionsCardNetwork>
      request_three_d_secure:
        docs: >-
          We strongly recommend that you rely on our SCA Engine to automatically
          prompt your customers for authentication based on risk level and
          [other
          requirements](https://stripe.com/docs/strong-customer-authentication).
          However, if you wish to request 3D Secure based on logic from your own
          fraud engine, provide this option. Read our guide on [manually
          requesting 3D
          Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
          for more information on how this configuration interacts with Radar
          and our SCA Engine.
        type: optional<SubscriptionPaymentMethodOptionsCardRequestThreeDSecure>
    source:
      openapi: ../openapi.yaml
  SubscriptionPaymentMethodOptionsCardNetwork:
    docs: >-
      Selected network to process this Subscription on. Depends on the available
      networks of the card attached to the Subscription. Can be only set
      confirm-time.
    enum:
      - amex
      - cartes_bancaires
      - diners
      - discover
      - eftpos_au
      - girocard
      - interac
      - jcb
      - link
      - mastercard
      - unionpay
      - unknown
      - visa
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionPaymentMethodOptionsCardRequestThreeDSecure:
    docs: >-
      We strongly recommend that you rely on our SCA Engine to automatically
      prompt your customers for authentication based on risk level and [other
      requirements](https://stripe.com/docs/strong-customer-authentication).
      However, if you wish to request 3D Secure based on logic from your own
      fraud engine, provide this option. Read our guide on [manually requesting
      3D
      Secure](https://stripe.com/docs/payments/3d-secure/authentication-flow#manual-three-ds)
      for more information on how this configuration interacts with Radar and
      our SCA Engine.
    enum:
      - any
      - automatic
      - challenge
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionPendingInvoiceItemInterval:
    docs: ''
    properties:
      interval:
        docs: >-
          Specifies invoicing frequency. Either `day`, `week`, `month` or
          `year`.
        type: SubscriptionPendingInvoiceItemIntervalInterval
      interval_count:
        docs: >-
          The number of intervals between invoices. For example,
          `interval=month` and `interval_count=3` bills every 3 months. Maximum
          of one year interval allowed (1 year, 12 months, or 52 weeks).
        type: integer
    source:
      openapi: ../openapi.yaml
  SubscriptionPendingInvoiceItemIntervalInterval:
    docs: Specifies invoicing frequency. Either `day`, `week`, `month` or `year`.
    enum:
      - day
      - month
      - week
      - year
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionPendingSetupIntent:
    discriminated: false
    docs: >-
      You can use this [SetupIntent](https://stripe.com/docs/api/setup_intents)
      to collect user authentication when creating a subscription without
      immediate payment or updating a subscription's payment method, allowing
      you to optimize for off-session payments. Learn more in the [SCA Migration
      Guide](https://stripe.com/docs/billing/migration/strong-customer-authentication#scenario-2).
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupIntent
  SubscriptionSchedule:
    docs: >-
      A subscription schedule allows you to create and manage the lifecycle of a
      subscription by predefining expected changes.


      Related guide: [Subscription
      schedules](https://stripe.com/docs/billing/subscriptions/subscription-schedules)
    properties:
      application:
        docs: ID of the Connect Application that created the schedule.
        type: optional<SubscriptionScheduleApplication>
      canceled_at:
        docs: >-
          Time at which the subscription schedule was canceled. Measured in
          seconds since the Unix epoch.
        type: optional<integer>
      completed_at:
        docs: >-
          Time at which the subscription schedule was completed. Measured in
          seconds since the Unix epoch.
        type: optional<integer>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      current_phase:
        docs: >-
          Object representing the start and end dates for the current phase of
          the subscription schedule, if it is `active`.
        type: optional<SubscriptionScheduleCurrentPhase>
      customer:
        docs: ID of the customer who owns the subscription schedule.
        type: SubscriptionScheduleCustomer
      default_settings:
        type: SubscriptionSchedulesResourceDefaultSettings
      end_behavior:
        docs: >-
          Behavior of the subscription schedule and underlying subscription when
          it ends. Possible values are `release` or `cancel` with the default
          being `release`. `release` will end the subscription schedule and keep
          the underlying subscription running. `cancel` will end the
          subscription schedule and cancel the underlying subscription.
        type: SubscriptionScheduleEndBehavior
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"subscription_schedule">
      phases:
        docs: Configuration for the subscription schedule's phases.
        type: list<SubscriptionSchedulePhaseConfiguration>
      released_at:
        docs: >-
          Time at which the subscription schedule was released. Measured in
          seconds since the Unix epoch.
        type: optional<integer>
      released_subscription:
        docs: >-
          ID of the subscription once managed by the subscription schedule (if
          it is released).
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          The present status of the subscription schedule. Possible values are
          `not_started`, `active`, `completed`, `released`, and `canceled`. You
          can read more about the different states in our [behavior
          guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
        type: SubscriptionScheduleStatus
      subscription:
        docs: ID of the subscription managed by the subscription schedule.
        type: optional<SubscriptionScheduleSubscription>
      test_clock:
        docs: ID of the test clock this subscription schedule belongs to.
        type: optional<SubscriptionScheduleTestClock>
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleAborted:
    docs: >-
      Occurs whenever a subscription schedule is canceled due to the underlying
      subscription being canceled because of delinquency.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleAddInvoiceItem:
    docs: >-
      An Add Invoice Item describes the prices and quantities that will be added
      as pending invoice items when entering a phase.
    properties:
      discounts:
        docs: The stackable discounts that will be applied to the item.
        type: list<DiscountsResourceStackableDiscount>
      price:
        docs: ID of the price used to generate the invoice item.
        type: SubscriptionScheduleAddInvoiceItemPrice
      quantity:
        docs: The quantity of the invoice item.
        type: optional<integer>
      tax_rates:
        docs: >-
          The tax rates which apply to the item. When set, the
          `default_tax_rates` do not apply to this item.
        type: optional<list<TaxRate>>
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleAddInvoiceItemPrice:
    discriminated: false
    docs: ID of the price used to generate the invoice item.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Price
      - type: DeletedPrice
  SubscriptionScheduleApplication:
    discriminated: false
    docs: ID of the Connect Application that created the schedule.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
      - type: DeletedApplication
  SubscriptionScheduleCanceled:
    docs: Occurs whenever a subscription schedule is canceled.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleCompleted:
    docs: Occurs whenever a new subscription schedule is completed.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleConfigurationItem:
    docs: A phase item describes the price and quantity of a phase.
    properties:
      billing_thresholds:
        docs: >-
          Define thresholds at which an invoice will be sent, and the related
          subscription advanced to a new billing period
        type: optional<SubscriptionItemBillingThresholds>
      discounts:
        docs: >-
          The discounts applied to the subscription item. Subscription item
          discounts are applied before subscription discounts. Use
          `expand[]=discounts` to expand each discount.
        type: list<DiscountsResourceStackableDiscount>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an item. Metadata on this item will update the
          underlying subscription item's `metadata` when the phase is entered.
        type: optional<map<string, optional<string>>>
      plan:
        docs: ID of the plan to which the customer should be subscribed.
        type: SubscriptionScheduleConfigurationItemPlan
      price:
        docs: ID of the price to which the customer should be subscribed.
        type: SubscriptionScheduleConfigurationItemPrice
      quantity:
        docs: Quantity of the plan to which the customer should be subscribed.
        type: optional<integer>
      tax_rates:
        docs: >-
          The tax rates which apply to this `phase_item`. When set, the
          `default_tax_rates` on the phase do not apply to this `phase_item`.
        type: optional<list<TaxRate>>
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleConfigurationItemPlan:
    discriminated: false
    docs: ID of the plan to which the customer should be subscribed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Plan
      - type: DeletedPlan
  SubscriptionScheduleConfigurationItemPrice:
    discriminated: false
    docs: ID of the price to which the customer should be subscribed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Price
      - type: DeletedPrice
  SubscriptionScheduleCreated:
    docs: Occurs whenever a new subscription schedule is created.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleCurrentPhase:
    docs: ''
    properties:
      end_date:
        docs: The end of this phase of the subscription schedule.
        type: integer
      start_date:
        docs: The start of this phase of the subscription schedule.
        type: integer
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleCustomer:
    discriminated: false
    docs: ID of the customer who owns the subscription schedule.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
      - type: DeletedCustomer
  SubscriptionScheduleEndBehavior:
    docs: >-
      Behavior of the subscription schedule and underlying subscription when it
      ends. Possible values are `release` or `cancel` with the default being
      `release`. `release` will end the subscription schedule and keep the
      underlying subscription running. `cancel` will end the subscription
      schedule and cancel the underlying subscription.
    enum:
      - cancel
      - none
      - release
      - renew
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleExpiring:
    docs: Occurs 7 days before a subscription schedule will expire.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulePhaseConfiguration:
    docs: >-
      A phase describes the plans, coupon, and trialing status of a subscription
      for a predefined time period.
    properties:
      add_invoice_items:
        docs: >-
          A list of prices and quantities that will generate invoice items
          appended to the next invoice for this phase.
        type: list<SubscriptionScheduleAddInvoiceItem>
      application_fee_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the application owner's Stripe
          account during this phase of the schedule.
        type: optional<double>
      automatic_tax:
        type: optional<SchedulesPhaseAutomaticTax>
      billing_cycle_anchor:
        docs: >-
          Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of
          the phase when entering the phase. If `automatic` then the billing
          cycle anchor is automatically modified as needed when entering the
          phase. For more information, see the billing cycle
          [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
        type: optional<SubscriptionSchedulePhaseConfigurationBillingCycleAnchor>
      billing_thresholds:
        docs: >-
          Define thresholds at which an invoice will be sent, and the
          subscription advanced to a new billing period
        type: optional<SubscriptionBillingThresholds>
      collection_method:
        docs: >-
          Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription
          at the end of each billing cycle using the default source attached to
          the customer. When sending an invoice, Stripe will email your customer
          an invoice with payment instructions and mark the subscription as
          `active`.
        type: optional<SubscriptionSchedulePhaseConfigurationCollectionMethod>
      coupon:
        docs: >-
          ID of the coupon to use during this phase of the subscription
          schedule.
        type: optional<SubscriptionSchedulePhaseConfigurationCoupon>
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      default_payment_method:
        docs: >-
          ID of the default payment method for the subscription schedule. It
          must belong to the customer associated with the subscription schedule.
          If not set, invoices will use the default payment method in the
          customer's invoice settings.
        type: optional<SubscriptionSchedulePhaseConfigurationDefaultPaymentMethod>
      default_tax_rates:
        docs: >-
          The default tax rates to apply to the subscription during this phase
          of the subscription schedule.
        type: optional<list<TaxRate>>
      description:
        docs: >-
          Subscription description, meant to be displayable to the customer. Use
          this field to optionally store an explanation of the subscription for
          rendering in Stripe surfaces and certain local payment methods UIs.
        type: optional<string>
        validation:
          maxLength: 5000
      discounts:
        docs: >-
          The stackable discounts that will be applied to the subscription on
          this phase. Subscription item discounts are applied before
          subscription discounts.
        type: list<DiscountsResourceStackableDiscount>
      end_date:
        docs: The end of this phase of the subscription schedule.
        type: integer
      invoice_settings:
        docs: The invoice settings applicable during this phase.
        type: optional<InvoiceSettingSubscriptionSchedulePhaseSetting>
      items:
        docs: >-
          Subscription items to configure the subscription to during this phase
          of the subscription schedule.
        type: list<SubscriptionScheduleConfigurationItem>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to a phase. Metadata on a schedule's phase will update
          the underlying subscription's `metadata` when the phase is entered.
          Updating the underlying subscription's `metadata` directly will not
          affect the current phase's `metadata`.
        type: optional<map<string, optional<string>>>
      on_behalf_of:
        docs: >-
          The account (if any) the charge was made on behalf of for charges
          associated with the schedule's subscription. See the Connect
          documentation for details.
        type: optional<SubscriptionSchedulePhaseConfigurationOnBehalfOf>
      proration_behavior:
        docs: >-
          If the subscription schedule will prorate when transitioning to this
          phase. Possible values are `create_prorations` and `none`.
        type: SubscriptionSchedulePhaseConfigurationProrationBehavior
      start_date:
        docs: The start of this phase of the subscription schedule.
        type: integer
      transfer_data:
        docs: >-
          The account (if any) the associated subscription's payments will be
          attributed to for tax reporting, and where funds from each payment
          will be transferred to for each of the subscription's invoices.
        type: optional<SubscriptionTransferData>
      trial_end:
        docs: When the trial ends within the phase.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulePhaseConfigurationBillingCycleAnchor:
    docs: >-
      Possible values are `phase_start` or `automatic`. If `phase_start` then
      billing cycle anchor of the subscription is set to the start of the phase
      when entering the phase. If `automatic` then the billing cycle anchor is
      automatically modified as needed when entering the phase. For more
      information, see the billing cycle
      [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    enum:
      - automatic
      - phase_start
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulePhaseConfigurationCollectionMethod:
    docs: >-
      Either `charge_automatically`, or `send_invoice`. When charging
      automatically, Stripe will attempt to pay the underlying subscription at
      the end of each billing cycle using the default source attached to the
      customer. When sending an invoice, Stripe will email your customer an
      invoice with payment instructions and mark the subscription as `active`.
    enum:
      - charge_automatically
      - send_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulePhaseConfigurationCoupon:
    discriminated: false
    docs: ID of the coupon to use during this phase of the subscription schedule.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Coupon
      - type: DeletedCoupon
  SubscriptionSchedulePhaseConfigurationDefaultPaymentMethod:
    discriminated: false
    docs: >-
      ID of the default payment method for the subscription schedule. It must
      belong to the customer associated with the subscription schedule. If not
      set, invoices will use the default payment method in the customer's
      invoice settings.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SubscriptionSchedulePhaseConfigurationOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) the charge was made on behalf of for charges
      associated with the schedule's subscription. See the Connect documentation
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  SubscriptionSchedulePhaseConfigurationProrationBehavior:
    docs: >-
      If the subscription schedule will prorate when transitioning to this
      phase. Possible values are `create_prorations` and `none`.
    enum:
      - always_invoice
      - create_prorations
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleReleased:
    docs: Occurs whenever a new subscription schedule is released.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulesResourceDefaultSettings:
    docs: ''
    properties:
      application_fee_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the application owner's Stripe
          account during this phase of the schedule.
        type: optional<double>
      automatic_tax:
        type: optional<SubscriptionSchedulesResourceDefaultSettingsAutomaticTax>
      billing_cycle_anchor:
        docs: >-
          Possible values are `phase_start` or `automatic`. If `phase_start`
          then billing cycle anchor of the subscription is set to the start of
          the phase when entering the phase. If `automatic` then the billing
          cycle anchor is automatically modified as needed when entering the
          phase. For more information, see the billing cycle
          [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
        type: SubscriptionSchedulesResourceDefaultSettingsBillingCycleAnchor
      billing_thresholds:
        docs: >-
          Define thresholds at which an invoice will be sent, and the
          subscription advanced to a new billing period
        type: optional<SubscriptionBillingThresholds>
      collection_method:
        docs: >-
          Either `charge_automatically`, or `send_invoice`. When charging
          automatically, Stripe will attempt to pay the underlying subscription
          at the end of each billing cycle using the default source attached to
          the customer. When sending an invoice, Stripe will email your customer
          an invoice with payment instructions and mark the subscription as
          `active`.
        type: optional<SubscriptionSchedulesResourceDefaultSettingsCollectionMethod>
      default_payment_method:
        docs: >-
          ID of the default payment method for the subscription schedule. If not
          set, invoices will use the default payment method in the customer's
          invoice settings.
        type: >-
          optional<SubscriptionSchedulesResourceDefaultSettingsDefaultPaymentMethod>
      description:
        docs: >-
          Subscription description, meant to be displayable to the customer. Use
          this field to optionally store an explanation of the subscription for
          rendering in Stripe surfaces and certain local payment methods UIs.
        type: optional<string>
        validation:
          maxLength: 5000
      invoice_settings:
        type: InvoiceSettingSubscriptionScheduleSetting
      on_behalf_of:
        docs: >-
          The account (if any) the charge was made on behalf of for charges
          associated with the schedule's subscription. See the Connect
          documentation for details.
        type: optional<SubscriptionSchedulesResourceDefaultSettingsOnBehalfOf>
      transfer_data:
        docs: >-
          The account (if any) the associated subscription's payments will be
          attributed to for tax reporting, and where funds from each payment
          will be transferred to for each of the subscription's invoices.
        type: optional<SubscriptionTransferData>
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulesResourceDefaultSettingsAutomaticTax:
    docs: ''
    properties:
      disabled_reason:
        docs: If Stripe disabled automatic tax, this enum describes why.
        type: optional<literal<"requires_location_inputs">>
      enabled:
        docs: >-
          Whether Stripe automatically computes tax on invoices created during
          this phase.
        type: boolean
      liability:
        docs: >-
          The account that's liable for tax. If set, the business address and
          tax registrations required to perform the tax calculation are loaded
          from this account. The tax transaction is returned in the report of
          the connected account.
        type: optional<ConnectAccountReference>
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulesResourceDefaultSettingsBillingCycleAnchor:
    docs: >-
      Possible values are `phase_start` or `automatic`. If `phase_start` then
      billing cycle anchor of the subscription is set to the start of the phase
      when entering the phase. If `automatic` then the billing cycle anchor is
      automatically modified as needed when entering the phase. For more
      information, see the billing cycle
      [documentation](https://stripe.com/docs/billing/subscriptions/billing-cycle).
    enum:
      - automatic
      - phase_start
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulesResourceDefaultSettingsCollectionMethod:
    docs: >-
      Either `charge_automatically`, or `send_invoice`. When charging
      automatically, Stripe will attempt to pay the underlying subscription at
      the end of each billing cycle using the default source attached to the
      customer. When sending an invoice, Stripe will email your customer an
      invoice with payment instructions and mark the subscription as `active`.
    enum:
      - charge_automatically
      - send_invoice
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionSchedulesResourceDefaultSettingsDefaultPaymentMethod:
    discriminated: false
    docs: >-
      ID of the default payment method for the subscription schedule. If not
      set, invoices will use the default payment method in the customer's
      invoice settings.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentMethod
  SubscriptionSchedulesResourceDefaultSettingsOnBehalfOf:
    discriminated: false
    docs: >-
      The account (if any) the charge was made on behalf of for charges
      associated with the schedule's subscription. See the Connect documentation
      for details.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  SubscriptionScheduleStatus:
    docs: >-
      The present status of the subscription schedule. Possible values are
      `not_started`, `active`, `completed`, `released`, and `canceled`. You can
      read more about the different states in our [behavior
      guide](https://stripe.com/docs/billing/subscriptions/subscription-schedules).
    enum:
      - active
      - canceled
      - completed
      - not_started
      - released
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionScheduleSubscription:
    discriminated: false
    docs: ID of the subscription managed by the subscription schedule.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Subscription
  SubscriptionScheduleTestClock:
    discriminated: false
    docs: ID of the test clock this subscription schedule belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  SubscriptionScheduleUpdated:
    docs: Occurs whenever a subscription schedule is updated.
    properties:
      object:
        type: SubscriptionSchedule
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourceBillingCycleAnchorConfig:
    docs: ''
    properties:
      day_of_month:
        docs: The day of the month of the billing_cycle_anchor.
        type: integer
      hour:
        docs: The hour of the day of the billing_cycle_anchor.
        type: optional<integer>
      minute:
        docs: The minute of the hour of the billing_cycle_anchor.
        type: optional<integer>
      month:
        docs: The month to start full cycle billing periods.
        type: optional<integer>
      second:
        docs: The second of the minute of the billing_cycle_anchor.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePauseCollection:
    docs: >-
      The Pause Collection settings determine how we will pause collection for
      this subscription and for how long the subscription

      should be paused.
    properties:
      behavior:
        docs: >-
          The payment collection behavior for this subscription while paused.
          One of `keep_as_draft`, `mark_uncollectible`, or `void`.
        type: SubscriptionsResourcePauseCollectionBehavior
      resumes_at:
        docs: The time after which the subscription will resume collecting payments.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePauseCollectionBehavior:
    docs: >-
      The payment collection behavior for this subscription while paused. One of
      `keep_as_draft`, `mark_uncollectible`, or `void`.
    enum:
      - keep_as_draft
      - mark_uncollectible
      - void
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePaymentMethodOptions:
    docs: ''
    properties:
      acss_debit:
        docs: >-
          This sub-hash contains details about the Canadian pre-authorized debit
          payment method options to pass to invoices created by the
          subscription.
        type: optional<InvoicePaymentMethodOptionsAcssDebit>
      bancontact:
        docs: >-
          This sub-hash contains details about the Bancontact payment method
          options to pass to invoices created by the subscription.
        type: optional<InvoicePaymentMethodOptionsBancontact>
      card:
        docs: >-
          This sub-hash contains details about the Card payment method options
          to pass to invoices created by the subscription.
        type: optional<SubscriptionPaymentMethodOptionsCard>
      customer_balance:
        docs: >-
          This sub-hash contains details about the Bank transfer payment method
          options to pass to invoices created by the subscription.
        type: optional<InvoicePaymentMethodOptionsCustomerBalance>
      konbini:
        docs: >-
          This sub-hash contains details about the Konbini payment method
          options to pass to invoices created by the subscription.
        type: optional<InvoicePaymentMethodOptionsKonbini>
      sepa_debit:
        docs: >-
          This sub-hash contains details about the SEPA Direct Debit payment
          method options to pass to invoices created by the subscription.
        type: optional<InvoicePaymentMethodOptionsSepaDebit>
      us_bank_account:
        docs: >-
          This sub-hash contains details about the ACH direct debit payment
          method options to pass to invoices created by the subscription.
        type: optional<InvoicePaymentMethodOptionsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePaymentSettings:
    docs: ''
    properties:
      payment_method_options:
        docs: >-
          Payment-method-specific configuration to provide to invoices created
          by the subscription.
        type: optional<SubscriptionsResourcePaymentMethodOptions>
      payment_method_types:
        docs: >-
          The list of payment method types to provide to every invoice created
          by the subscription. If not set, Stripe attempts to automatically
          determine the types to use by looking at the invoice’s default payment
          method, the subscription’s default payment method, the customer’s
          default payment method, and your [invoice template
          settings](https://dashboard.stripe.com/settings/billing/invoice).
        type: >-
          optional<list<SubscriptionsResourcePaymentSettingsPaymentMethodTypesItem>>
      save_default_payment_method:
        docs: >-
          Configure whether Stripe updates `subscription.default_payment_method`
          when payment succeeds. Defaults to `off`.
        type: optional<SubscriptionsResourcePaymentSettingsSaveDefaultPaymentMethod>
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePaymentSettingsPaymentMethodTypesItem:
    enum:
      - ach_credit_transfer
      - ach_debit
      - acss_debit
      - amazon_pay
      - au_becs_debit
      - bacs_debit
      - bancontact
      - boleto
      - card
      - cashapp
      - customer_balance
      - eps
      - fpx
      - giropay
      - grabpay
      - ideal
      - jp_credit_transfer
      - kakao_pay
      - konbini
      - kr_card
      - link
      - multibanco
      - naver_pay
      - p24
      - payco
      - paynow
      - paypal
      - promptpay
      - revolut_pay
      - sepa_credit_transfer
      - sepa_debit
      - sofort
      - swish
      - us_bank_account
      - wechat_pay
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePaymentSettingsSaveDefaultPaymentMethod:
    docs: >-
      Configure whether Stripe updates `subscription.default_payment_method`
      when payment succeeds. Defaults to `off`.
    enum:
      - 'off'
      - on_subscription
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourcePendingUpdate:
    docs: >-
      Pending Updates store the changes pending from a previous update that will
      be applied

      to the Subscription upon successful payment.
    properties:
      billing_cycle_anchor:
        docs: >-
          If the update is applied, determines the date of the first full
          invoice, and, for plans with `month` or `year` intervals, the day of
          the month for subsequent invoices. The timestamp is in UTC format.
        type: optional<integer>
      expires_at:
        docs: >-
          The point after which the changes reflected by this update will be
          discarded and no longer applied.
        type: integer
      subscription_items:
        docs: >-
          List of subscription items, each with an attached plan, that will be
          set if the update is applied.
        type: optional<list<SubscriptionItem>>
      trial_end:
        docs: >-
          Unix timestamp representing the end of the trial period the customer
          will get before being charged for the first time, if the update is
          applied.
        type: optional<integer>
      trial_from_plan:
        docs: >-
          Indicates if a plan's `trial_period_days` should be applied to the
          subscription. Setting `trial_end` per subscription is preferred, and
          this defaults to `false`. Setting this flag to `true` together with
          `trial_end` is not allowed. See [Using trial periods on
          subscriptions](https://stripe.com/docs/billing/subscriptions/trials)
          to learn more.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourceSubscriptionInvoiceSettings:
    docs: ''
    properties:
      account_tax_ids:
        docs: >-
          The account tax IDs associated with the subscription. Will be set on
          invoices generated by the subscription.
        type: >-
          optional<list<SubscriptionsResourceSubscriptionInvoiceSettingsAccountTaxIdsItem>>
      issuer:
        type: ConnectAccountReference
    source:
      openapi: ../openapi.yaml
  SubscriptionsResourceSubscriptionInvoiceSettingsAccountTaxIdsItem:
    discriminated: false
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TaxId
      - type: DeletedTaxId
  SubscriptionStatus:
    docs: >-
      Possible values are `incomplete`, `incomplete_expired`, `trialing`,
      `active`, `past_due`, `canceled`, `unpaid`, or `paused`. 


      For `collection_method=charge_automatically` a subscription moves into
      `incomplete` if the initial payment attempt fails. A subscription in this
      status can only have metadata and default_source updated. Once the first
      invoice is paid, the subscription moves into an `active` status. If the
      first invoice is not paid within 23 hours, the subscription transitions to
      `incomplete_expired`. This is a terminal status, the open invoice will be
      voided and no further invoices will be generated. 


      A subscription that is currently in a trial period is `trialing` and moves
      to `active` when the trial period is over. 


      A subscription can only enter a `paused` status [when a trial ends without
      a payment
      method](https://stripe.com/docs/billing/subscriptions/trials#create-free-trials-without-payment).
      A `paused` subscription doesn't generate invoices and can be resumed after
      your customer adds their payment method. The `paused` status is different
      from [pausing
      collection](https://stripe.com/docs/billing/subscriptions/pause-payment),
      which still generates invoices and leaves the subscription's status
      unchanged. 


      If subscription `collection_method=charge_automatically`, it becomes
      `past_due` when payment is required but cannot be paid (due to failed
      payment or awaiting additional user actions). Once Stripe has exhausted
      all payment retry attempts, the subscription will become `canceled` or
      `unpaid` (depending on your subscriptions settings). 


      If subscription `collection_method=send_invoice` it becomes `past_due`
      when its invoice is not paid by the due date, and `canceled` or `unpaid`
      if it is still not paid by an additional deadline after that. Note that
      when a subscription has a status of `unpaid`, no subsequent invoices will
      be attempted (invoices will be created, but then immediately automatically
      closed). After receiving updated payment information from a customer, you
      may choose to reopen and pay their closed invoices.
    enum:
      - active
      - canceled
      - incomplete
      - incomplete_expired
      - past_due
      - paused
      - trialing
      - unpaid
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionsTrialsResourceEndBehavior:
    docs: Defines how a subscription behaves when a free trial ends.
    properties:
      missing_payment_method:
        docs: >-
          Indicates how the subscription should change when the trial ends if
          the user did not provide a payment method.
        type: SubscriptionsTrialsResourceEndBehaviorMissingPaymentMethod
    source:
      openapi: ../openapi.yaml
  SubscriptionsTrialsResourceEndBehaviorMissingPaymentMethod:
    docs: >-
      Indicates how the subscription should change when the trial ends if the
      user did not provide a payment method.
    enum:
      - cancel
      - create_invoice
      - pause
    inline: true
    source:
      openapi: ../openapi.yaml
  SubscriptionsTrialsResourceTrialSettings:
    docs: Configures how this subscription behaves during the trial period.
    properties:
      end_behavior:
        type: SubscriptionsTrialsResourceEndBehavior
    source:
      openapi: ../openapi.yaml
  SubscriptionTestClock:
    discriminated: false
    docs: ID of the test clock this subscription belongs to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TestHelpersTestClock
  SubscriptionTransferData:
    docs: ''
    properties:
      amount_percent:
        docs: >-
          A non-negative decimal between 0 and 100, with at most two decimal
          places. This represents the percentage of the subscription invoice
          total that will be transferred to the destination account. By default,
          the entire amount is transferred to the destination.
        type: optional<double>
      destination:
        docs: >-
          The account where funds from the payment will be transferred to upon
          payment success.
        type: SubscriptionTransferDataDestination
    source:
      openapi: ../openapi.yaml
  SubscriptionTransferDataDestination:
    discriminated: false
    docs: >-
      The account where funds from the payment will be transferred to upon
      payment success.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  TaxCalculation:
    docs: >-
      A Tax Calculation allows you to calculate the tax to collect from your
      customer.


      Related guide: [Calculate tax in your custom payment
      flow](https://stripe.com/docs/tax/custom)
    properties:
      amount_total:
        docs: >-
          Total amount after taxes in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      customer:
        docs: >-
          The ID of an existing
          [Customer](https://stripe.com/docs/api/customers/object) used for the
          resource.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_details:
        type: TaxProductResourceCustomerDetails
      expires_at:
        docs: Timestamp of date at which the tax calculation will expire.
        type: optional<integer>
      id:
        docs: Unique identifier for the calculation.
        type: optional<string>
        validation:
          maxLength: 5000
      line_items:
        docs: The list of items the customer is purchasing.
        type: optional<TaxCalculationLineItems>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.calculation">
      ship_from_details:
        docs: The details of the ship from location, such as the address.
        type: optional<TaxProductResourceShipFromDetails>
      shipping_cost:
        docs: The shipping cost details for the calculation.
        type: optional<TaxProductResourceTaxCalculationShippingCost>
      tax_amount_exclusive:
        docs: The amount of tax to be collected on top of the line item prices.
        type: integer
      tax_amount_inclusive:
        docs: The amount of tax already included in the line item prices.
        type: integer
      tax_breakdown:
        docs: Breakdown of individual tax amounts that add up to the total.
        type: list<TaxProductResourceTaxBreakdown>
      tax_date:
        docs: >-
          Timestamp of date at which the tax rules and rates in effect applies
          for the calculation.
        type: integer
    source:
      openapi: ../openapi.yaml
  TaxCalculationLineItem:
    docs: ''
    properties:
      amount:
        docs: >-
          The line item amount in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). If
          `tax_behavior=inclusive`, then this amount includes taxes. Otherwise,
          taxes were calculated on top of this amount.
        type: integer
      amount_tax:
        docs: >-
          The amount of tax calculated for this line item, in the [smallest
          currency unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.calculation_line_item">
      product:
        docs: >-
          The ID of an existing
          [Product](https://stripe.com/docs/api/products/object).
        type: optional<string>
        validation:
          maxLength: 5000
      quantity:
        docs: >-
          The number of units of the item being purchased. For reversals, this
          is the quantity reversed.
        type: integer
      reference:
        docs: A custom identifier for this line item.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_behavior:
        docs: >-
          Specifies whether the `amount` includes taxes. If
          `tax_behavior=inclusive`, then the amount includes taxes.
        type: TaxCalculationLineItemTaxBehavior
      tax_breakdown:
        docs: Detailed account of taxes relevant to this line item.
        type: optional<list<TaxProductResourceLineItemTaxBreakdown>>
      tax_code:
        docs: >-
          The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for
          this resource.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxCalculationLineItems:
    docs: The list of items the customer is purchasing.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<TaxCalculationLineItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
          pattern: ^/v1/tax/calculations/[^/]+/line_items
    source:
      openapi: ../openapi.yaml
  TaxCalculationLineItemTaxBehavior:
    docs: >-
      Specifies whether the `amount` includes taxes. If
      `tax_behavior=inclusive`, then the amount includes taxes.
    enum:
      - exclusive
      - inclusive
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxCode:
    docs: >-
      [Tax codes](https://stripe.com/docs/tax/tax-categories) classify goods and
      services for tax purposes.
    properties:
      description:
        docs: >-
          A detailed description of which types of products the tax code
          represents.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      name:
        docs: A short name for the tax code.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax_code">
    source:
      openapi: ../openapi.yaml
  TaxDeductedAtSource:
    docs: ''
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax_deducted_at_source">
      period_end:
        docs: >-
          The end of the invoicing period. This TDS applies to Stripe fees
          collected during this invoicing period.
        type: integer
      period_start:
        docs: >-
          The start of the invoicing period. This TDS applies to Stripe fees
          collected during this invoicing period.
        type: integer
      tax_deduction_account_number:
        docs: The TAN that was supplied to Stripe when TDS was assessed
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxId:
    docs: >-
      You can add one or multiple tax IDs to a
      [customer](https://stripe.com/docs/api/customers) or account.

      Customer and account tax IDs get displayed on related invoices and credit
      notes.


      Related guides: [Customer tax identification
      numbers](https://stripe.com/docs/billing/taxes/tax-ids), [Account tax
      IDs](https://stripe.com/docs/invoicing/connect#account-tax-ids)
    properties:
      country:
        docs: Two-letter ISO code representing the country of the tax ID.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      customer:
        docs: ID of the customer.
        type: optional<TaxIdCustomer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax_id">
      owner:
        docs: The account or customer the tax ID belongs to.
        type: optional<TaxIDsOwner>
      type:
        docs: >-
          Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`, `am_tin`,
          `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`, `bb_tin`, `bg_uic`,
          `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `bs_tin`, `by_tin`, `ca_bn`,
          `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`,
          `cd_nif`, `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`,
          `de_stn`, `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`,
          `eu_vat`, `gb_vat`, `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`,
          `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`,
          `ke_pin`, `kh_tin`, `kr_brn`, `kz_bin`, `li_uid`, `li_vat`, `ma_vat`,
          `md_vat`, `me_pib`, `mk_vat`, `mr_nif`, `mx_rfc`, `my_frp`, `my_itn`,
          `my_sst`, `ng_tin`, `no_vat`, `no_voec`, `np_pan`, `nz_gst`, `om_vat`,
          `pe_ruc`, `ph_tin`, `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`,
          `sg_gst`, `sg_uen`, `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`,
          `th_vat`, `tj_tin`, `tr_tin`, `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`,
          `us_ein`, `uy_ruc`, `uz_tin`, `uz_vat`, `ve_rif`, `vn_tin`, `za_vat`,
          `zm_tin`, or `zw_tin`. Note that some legacy tax IDs have type
          `unknown`
        type: TaxIdType
      value:
        docs: Value of the tax ID.
        type: string
        validation:
          maxLength: 5000
      verification:
        docs: Tax ID verification information.
        type: optional<TaxIdVerification>
    source:
      openapi: ../openapi.yaml
  TaxIdCustomer:
    discriminated: false
    docs: ID of the customer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  TaxIDsOwner:
    docs: ''
    properties:
      account:
        docs: The account being referenced when `type` is `account`.
        type: optional<TaxIDsOwnerAccount>
      application:
        docs: The Connect Application being referenced when `type` is `application`.
        type: optional<TaxIDsOwnerApplication>
      customer:
        docs: The customer being referenced when `type` is `customer`.
        type: optional<TaxIDsOwnerCustomer>
      type:
        docs: Type of owner referenced.
        type: TaxIDsOwnerType
    source:
      openapi: ../openapi.yaml
  TaxIDsOwnerAccount:
    discriminated: false
    docs: The account being referenced when `type` is `account`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  TaxIDsOwnerApplication:
    discriminated: false
    docs: The Connect Application being referenced when `type` is `application`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Application
  TaxIDsOwnerCustomer:
    discriminated: false
    docs: The customer being referenced when `type` is `customer`.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  TaxIDsOwnerType:
    docs: Type of owner referenced.
    enum:
      - account
      - application
      - customer
      - self
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxIdType:
    docs: >-
      Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`, `am_tin`,
      `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`, `bb_tin`, `bg_uic`,
      `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`, `bs_tin`, `by_tin`, `ca_bn`,
      `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `cd_nif`,
      `ch_uid`, `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`,
      `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`, `gb_vat`,
      `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`, `id_npwp`, `il_vat`,
      `in_gst`, `is_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `ke_pin`, `kh_tin`,
      `kr_brn`, `kz_bin`, `li_uid`, `li_vat`, `ma_vat`, `md_vat`, `me_pib`,
      `mk_vat`, `mr_nif`, `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`,
      `no_vat`, `no_voec`, `np_pan`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`,
      `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`, `sg_uen`,
      `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`, `th_vat`, `tj_tin`, `tr_tin`,
      `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`, `us_ein`, `uy_ruc`, `uz_tin`,
      `uz_vat`, `ve_rif`, `vn_tin`, `za_vat`, `zm_tin`, or `zw_tin`. Note that
      some legacy tax IDs have type `unknown`
    enum:
      - ad_nrt
      - ae_trn
      - al_tin
      - am_tin
      - ao_tin
      - ar_cuit
      - au_abn
      - au_arn
      - ba_tin
      - bb_tin
      - bg_uic
      - bh_vat
      - bo_tin
      - br_cnpj
      - br_cpf
      - bs_tin
      - by_tin
      - ca_bn
      - ca_gst_hst
      - ca_pst_bc
      - ca_pst_mb
      - ca_pst_sk
      - ca_qst
      - cd_nif
      - ch_uid
      - ch_vat
      - cl_tin
      - cn_tin
      - co_nit
      - cr_tin
      - de_stn
      - do_rcn
      - ec_ruc
      - eg_tin
      - es_cif
      - eu_oss_vat
      - eu_vat
      - gb_vat
      - ge_vat
      - gn_nif
      - hk_br
      - hr_oib
      - hu_tin
      - id_npwp
      - il_vat
      - in_gst
      - is_vat
      - jp_cn
      - jp_rn
      - jp_trn
      - ke_pin
      - kh_tin
      - kr_brn
      - kz_bin
      - li_uid
      - li_vat
      - ma_vat
      - md_vat
      - me_pib
      - mk_vat
      - mr_nif
      - mx_rfc
      - my_frp
      - my_itn
      - my_sst
      - ng_tin
      - no_vat
      - no_voec
      - np_pan
      - nz_gst
      - om_vat
      - pe_ruc
      - ph_tin
      - ro_tin
      - rs_pib
      - ru_inn
      - ru_kpp
      - sa_vat
      - sg_gst
      - sg_uen
      - si_tin
      - sn_ninea
      - sr_fin
      - sv_nit
      - th_vat
      - tj_tin
      - tr_tin
      - tw_vat
      - tz_vat
      - ua_vat
      - ug_tin
      - unknown
      - us_ein
      - uy_ruc
      - uz_tin
      - uz_vat
      - ve_rif
      - vn_tin
      - za_vat
      - zm_tin
      - zw_tin
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxIdVerification:
    docs: ''
    properties:
      status:
        docs: >-
          Verification status, one of `pending`, `verified`, `unverified`, or
          `unavailable`.
        type: TaxIdVerificationStatus
      verified_address:
        docs: Verified address.
        type: optional<string>
        validation:
          maxLength: 5000
      verified_name:
        docs: Verified name.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxIdVerificationStatus:
    docs: >-
      Verification status, one of `pending`, `verified`, `unverified`, or
      `unavailable`.
    enum:
      - pending
      - unavailable
      - unverified
      - verified
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptions:
    docs: ''
    properties:
      ae:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      al:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      am:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ao:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      at:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      au:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      ba:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      bb:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      be:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      bg:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      bh:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      bs:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      by:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ca:
        type: optional<TaxProductRegistrationsResourceCountryOptionsCanada>
      cd:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      ch:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      cl:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      co:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      cr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      cy:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      cz:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      de:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      dk:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      ec:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ee:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      eg:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      es:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      fi:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      fr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      gb:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      ge:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      gn:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      gr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      hr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      hu:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      id:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ie:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      is:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      it:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      jp:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      ke:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      kh:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      kr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      kz:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      lt:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      lu:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      lv:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      ma:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      md:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      me:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      mk:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      mr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      mt:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      mx:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      my:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ng:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      nl:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      'no':
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      np:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      nz:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      om:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      pe:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      pl:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      pt:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      ro:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      rs:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      ru:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      sa:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      se:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      sg:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      si:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      sk:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEurope>
      sn:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      sr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      th:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      tj:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      tr:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      tz:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      ug:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      us:
        type: optional<TaxProductRegistrationsResourceCountryOptionsUnitedStates>
      uy:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      uz:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      vn:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      za:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
      zm:
        type: optional<TaxProductRegistrationsResourceCountryOptionsSimplified>
      zw:
        type: optional<TaxProductRegistrationsResourceCountryOptionsDefault>
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsCanada:
    docs: ''
    properties:
      province_standard:
        type: >-
          optional<TaxProductRegistrationsResourceCountryOptionsCaProvinceStandard>
      type:
        docs: Type of registration in Canada.
        type: TaxProductRegistrationsResourceCountryOptionsCanadaType
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsCanadaType:
    docs: Type of registration in Canada.
    enum:
      - province_standard
      - simplified
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsCaProvinceStandard:
    docs: ''
    properties:
      province:
        docs: >-
          Two-letter CA province code ([ISO
          3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsDefault:
    docs: ''
    properties:
      type:
        docs: Type of registration in `country`.
        type: literal<"standard">
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsEurope:
    docs: ''
    properties:
      standard:
        type: optional<TaxProductRegistrationsResourceCountryOptionsEuStandard>
      type:
        docs: Type of registration in an EU country.
        type: TaxProductRegistrationsResourceCountryOptionsEuropeType
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsEuropeType:
    docs: Type of registration in an EU country.
    enum:
      - ioss
      - oss_non_union
      - oss_union
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsEuStandard:
    docs: ''
    properties:
      place_of_supply_scheme:
        docs: Place of supply scheme used in an EU standard registration.
        type: >-
          TaxProductRegistrationsResourceCountryOptionsEuStandardPlaceOfSupplyScheme
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsEuStandardPlaceOfSupplyScheme:
    docs: Place of supply scheme used in an EU standard registration.
    enum:
      - small_seller
      - standard
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsSimplified:
    docs: ''
    properties:
      type:
        docs: Type of registration in `country`.
        type: literal<"simplified">
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUnitedStates:
    docs: ''
    properties:
      local_amusement_tax:
        type: >-
          optional<TaxProductRegistrationsResourceCountryOptionsUsLocalAmusementTax>
      local_lease_tax:
        type: optional<TaxProductRegistrationsResourceCountryOptionsUsLocalLeaseTax>
      state:
        docs: >-
          Two-letter US state code ([ISO
          3166-2](https://en.wikipedia.org/wiki/ISO_3166-2)).
        type: string
        validation:
          maxLength: 5000
      state_sales_tax:
        type: optional<TaxProductRegistrationsResourceCountryOptionsUsStateSalesTax>
      type:
        docs: Type of registration in the US.
        type: TaxProductRegistrationsResourceCountryOptionsUnitedStatesType
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUnitedStatesType:
    docs: Type of registration in the US.
    enum:
      - local_amusement_tax
      - local_lease_tax
      - state_communications_tax
      - state_retail_delivery_fee
      - state_sales_tax
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUsLocalAmusementTax:
    docs: ''
    properties:
      jurisdiction:
        docs: >-
          A [FIPS
          code](https://www.census.gov/library/reference/code-lists/ansi.html)
          representing the local jurisdiction.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUsLocalLeaseTax:
    docs: ''
    properties:
      jurisdiction:
        docs: >-
          A [FIPS
          code](https://www.census.gov/library/reference/code-lists/ansi.html)
          representing the local jurisdiction.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUsStateSalesTax:
    docs: ''
    properties:
      elections:
        docs: Elections for the state sales tax registration.
        type: >-
          optional<list<TaxProductRegistrationsResourceCountryOptionsUsStateSalesTaxElection>>
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUsStateSalesTaxElection:
    docs: ''
    properties:
      jurisdiction:
        docs: >-
          A [FIPS
          code](https://www.census.gov/library/reference/code-lists/ansi.html)
          representing the local jurisdiction.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: The type of the election for the state sales tax registration.
        type: >-
          TaxProductRegistrationsResourceCountryOptionsUsStateSalesTaxElectionType
    source:
      openapi: ../openapi.yaml
  TaxProductRegistrationsResourceCountryOptionsUsStateSalesTaxElectionType:
    docs: The type of the election for the state sales tax registration.
    enum:
      - local_use_tax
      - simplified_sellers_use_tax
      - single_local_use_tax
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceCustomerDetails:
    docs: ''
    properties:
      address:
        docs: >-
          The customer's postal address (for example, home or business
          location).
        type: optional<TaxProductResourcePostalAddress>
      address_source:
        docs: The type of customer address provided.
        type: optional<TaxProductResourceCustomerDetailsAddressSource>
      ip_address:
        docs: The customer's IP address (IPv4 or IPv6).
        type: optional<string>
        validation:
          maxLength: 5000
      tax_ids:
        docs: The customer's tax IDs (for example, EU VAT numbers).
        type: list<TaxProductResourceCustomerDetailsResourceTaxId>
      taxability_override:
        docs: The taxability override used for taxation.
        type: TaxProductResourceCustomerDetailsTaxabilityOverride
    source:
      openapi: ../openapi.yaml
  TaxProductResourceCustomerDetailsAddressSource:
    docs: The type of customer address provided.
    enum:
      - billing
      - shipping
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceCustomerDetailsResourceTaxId:
    docs: ''
    properties:
      type:
        docs: >-
          The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`,
          `bo_tin`, `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`,
          `ec_ruc`, `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`,
          `sv_nit`, `uy_ruc`, `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`,
          `au_arn`, `in_gst`, `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`,
          `sg_uen`, `ru_inn`, `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`,
          `th_vat`, `jp_cn`, `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`,
          `us_ein`, `kr_brn`, `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`,
          `ca_pst_sk`, `my_sst`, `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`,
          `id_npwp`, `my_frp`, `il_vat`, `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`,
          `hu_tin`, `si_tin`, `ke_pin`, `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`,
          `bh_vat`, `kz_bin`, `ng_tin`, `om_vat`, `de_stn`, `ch_uid`, `tz_vat`,
          `uz_vat`, `uz_tin`, `md_vat`, `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`,
          `bb_tin`, `cd_nif`, `mr_nif`, `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`,
          `mk_vat`, `sr_fin`, `sn_ninea`, `am_tin`, `np_pan`, `tj_tin`,
          `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
        type: TaxProductResourceCustomerDetailsResourceTaxIdType
      value:
        docs: The value of the tax ID.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceCustomerDetailsResourceTaxIdType:
    docs: >-
      The type of the tax ID, one of `ad_nrt`, `ar_cuit`, `eu_vat`, `bo_tin`,
      `br_cnpj`, `br_cpf`, `cn_tin`, `co_nit`, `cr_tin`, `do_rcn`, `ec_ruc`,
      `eu_oss_vat`, `hr_oib`, `pe_ruc`, `ro_tin`, `rs_pib`, `sv_nit`, `uy_ruc`,
      `ve_rif`, `vn_tin`, `gb_vat`, `nz_gst`, `au_abn`, `au_arn`, `in_gst`,
      `no_vat`, `no_voec`, `za_vat`, `ch_vat`, `mx_rfc`, `sg_uen`, `ru_inn`,
      `ru_kpp`, `ca_bn`, `hk_br`, `es_cif`, `tw_vat`, `th_vat`, `jp_cn`,
      `jp_rn`, `jp_trn`, `li_uid`, `li_vat`, `my_itn`, `us_ein`, `kr_brn`,
      `ca_qst`, `ca_gst_hst`, `ca_pst_bc`, `ca_pst_mb`, `ca_pst_sk`, `my_sst`,
      `sg_gst`, `ae_trn`, `cl_tin`, `sa_vat`, `id_npwp`, `my_frp`, `il_vat`,
      `ge_vat`, `ua_vat`, `is_vat`, `bg_uic`, `hu_tin`, `si_tin`, `ke_pin`,
      `tr_tin`, `eg_tin`, `ph_tin`, `al_tin`, `bh_vat`, `kz_bin`, `ng_tin`,
      `om_vat`, `de_stn`, `ch_uid`, `tz_vat`, `uz_vat`, `uz_tin`, `md_vat`,
      `ma_vat`, `by_tin`, `ao_tin`, `bs_tin`, `bb_tin`, `cd_nif`, `mr_nif`,
      `me_pib`, `zw_tin`, `ba_tin`, `gn_nif`, `mk_vat`, `sr_fin`, `sn_ninea`,
      `am_tin`, `np_pan`, `tj_tin`, `ug_tin`, `zm_tin`, `kh_tin`, or `unknown`
    enum:
      - ad_nrt
      - ae_trn
      - al_tin
      - am_tin
      - ao_tin
      - ar_cuit
      - au_abn
      - au_arn
      - ba_tin
      - bb_tin
      - bg_uic
      - bh_vat
      - bo_tin
      - br_cnpj
      - br_cpf
      - bs_tin
      - by_tin
      - ca_bn
      - ca_gst_hst
      - ca_pst_bc
      - ca_pst_mb
      - ca_pst_sk
      - ca_qst
      - cd_nif
      - ch_uid
      - ch_vat
      - cl_tin
      - cn_tin
      - co_nit
      - cr_tin
      - de_stn
      - do_rcn
      - ec_ruc
      - eg_tin
      - es_cif
      - eu_oss_vat
      - eu_vat
      - gb_vat
      - ge_vat
      - gn_nif
      - hk_br
      - hr_oib
      - hu_tin
      - id_npwp
      - il_vat
      - in_gst
      - is_vat
      - jp_cn
      - jp_rn
      - jp_trn
      - ke_pin
      - kh_tin
      - kr_brn
      - kz_bin
      - li_uid
      - li_vat
      - ma_vat
      - md_vat
      - me_pib
      - mk_vat
      - mr_nif
      - mx_rfc
      - my_frp
      - my_itn
      - my_sst
      - ng_tin
      - no_vat
      - no_voec
      - np_pan
      - nz_gst
      - om_vat
      - pe_ruc
      - ph_tin
      - ro_tin
      - rs_pib
      - ru_inn
      - ru_kpp
      - sa_vat
      - sg_gst
      - sg_uen
      - si_tin
      - sn_ninea
      - sr_fin
      - sv_nit
      - th_vat
      - tj_tin
      - tr_tin
      - tw_vat
      - tz_vat
      - ua_vat
      - ug_tin
      - unknown
      - us_ein
      - uy_ruc
      - uz_tin
      - uz_vat
      - ve_rif
      - vn_tin
      - za_vat
      - zm_tin
      - zw_tin
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceCustomerDetailsTaxabilityOverride:
    docs: The taxability override used for taxation.
    enum:
      - customer_exempt
      - none
      - reverse_charge
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceJurisdiction:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
        validation:
          maxLength: 5000
      display_name:
        docs: A human-readable name for the jurisdiction imposing the tax.
        type: string
        validation:
          maxLength: 5000
      level:
        docs: Indicates the level of the jurisdiction imposing the tax.
        type: TaxProductResourceJurisdictionLevel
      state:
        docs: >-
          [ISO 3166-2 subdivision
          code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country
          prefix. For example, "NY" for New York, United States.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceJurisdictionLevel:
    docs: Indicates the level of the jurisdiction imposing the tax.
    enum:
      - city
      - country
      - county
      - district
      - state
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceLineItemTaxBreakdown:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount of tax, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      jurisdiction:
        type: TaxProductResourceJurisdiction
      sourcing:
        docs: >-
          Indicates whether the jurisdiction was determined by the origin
          (merchant's address) or destination (customer's address).
        type: TaxProductResourceLineItemTaxBreakdownSourcing
      tax_rate_details:
        docs: >-
          Details regarding the rate for this tax. This field will be `null`
          when the tax is not imposed, for example if the product is exempt from
          tax.
        type: optional<TaxProductResourceLineItemTaxRateDetails>
      taxability_reason:
        docs: >-
          The reasoning behind this tax, for example, if the product is tax
          exempt. The possible values for this field may be extended as new tax
          rules are supported.
        type: TaxProductResourceLineItemTaxBreakdownTaxabilityReason
      taxable_amount:
        docs: >-
          The amount on which tax is calculated, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
    source:
      openapi: ../openapi.yaml
  TaxProductResourceLineItemTaxBreakdownSourcing:
    docs: >-
      Indicates whether the jurisdiction was determined by the origin
      (merchant's address) or destination (customer's address).
    enum:
      - destination
      - origin
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceLineItemTaxBreakdownTaxabilityReason:
    docs: >-
      The reasoning behind this tax, for example, if the product is tax exempt.
      The possible values for this field may be extended as new tax rules are
      supported.
    enum:
      - customer_exempt
      - not_collecting
      - not_subject_to_tax
      - not_supported
      - portion_product_exempt
      - portion_reduced_rated
      - portion_standard_rated
      - product_exempt
      - product_exempt_holiday
      - proportionally_rated
      - reduced_rated
      - reverse_charge
      - standard_rated
      - taxable_basis_reduced
      - zero_rated
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceLineItemTaxRateDetails:
    docs: ''
    properties:
      display_name:
        docs: >-
          A localized display name for tax type, intended to be human-readable.
          For example, "Local Sales and Use Tax", "Value-added tax (VAT)", or
          "Umsatzsteuer (USt.)".
        type: string
        validation:
          maxLength: 5000
      percentage_decimal:
        docs: >-
          The tax rate percentage as a string. For example, 8.5% is represented
          as "8.5".
        type: string
        validation:
          maxLength: 5000
      tax_type:
        docs: The tax type, such as `vat` or `sales_tax`.
        type: TaxProductResourceLineItemTaxRateDetailsTaxType
    source:
      openapi: ../openapi.yaml
  TaxProductResourceLineItemTaxRateDetailsTaxType:
    docs: The tax type, such as `vat` or `sales_tax`.
    enum:
      - amusement_tax
      - communications_tax
      - gst
      - hst
      - igst
      - jct
      - lease_tax
      - pst
      - qst
      - retail_delivery_fee
      - rst
      - sales_tax
      - service_tax
      - vat
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourcePostalAddress:
    docs: ''
    properties:
      city:
        docs: City, district, suburb, town, or village.
        type: optional<string>
        validation:
          maxLength: 5000
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
        validation:
          maxLength: 5000
      line1:
        docs: Address line 1 (e.g., street, PO Box, or company name).
        type: optional<string>
        validation:
          maxLength: 5000
      line2:
        docs: Address line 2 (e.g., apartment, suite, unit, or building).
        type: optional<string>
        validation:
          maxLength: 5000
      postal_code:
        docs: ZIP or postal code.
        type: optional<string>
        validation:
          maxLength: 5000
      state:
        docs: >-
          State/province as an [ISO
          3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) subdivision code,
          without country prefix. Example: "NY" or "TX".
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceShipFromDetails:
    docs: ''
    properties:
      address:
        type: TaxProductResourcePostalAddress
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxBreakdown:
    docs: ''
    properties:
      amount:
        docs: >-
          The amount of tax, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      inclusive:
        docs: Specifies whether the tax amount is included in the line item amount.
        type: boolean
      tax_rate_details:
        type: TaxProductResourceTaxRateDetails
      taxability_reason:
        docs: >-
          The reasoning behind this tax, for example, if the product is tax
          exempt. We might extend the possible values for this field to support
          new tax rules.
        type: TaxProductResourceTaxBreakdownTaxabilityReason
      taxable_amount:
        docs: >-
          The amount on which tax is calculated, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxBreakdownTaxabilityReason:
    docs: >-
      The reasoning behind this tax, for example, if the product is tax exempt.
      We might extend the possible values for this field to support new tax
      rules.
    enum:
      - customer_exempt
      - not_collecting
      - not_subject_to_tax
      - not_supported
      - portion_product_exempt
      - portion_reduced_rated
      - portion_standard_rated
      - product_exempt
      - product_exempt_holiday
      - proportionally_rated
      - reduced_rated
      - reverse_charge
      - standard_rated
      - taxable_basis_reduced
      - zero_rated
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxCalculationShippingCost:
    docs: ''
    properties:
      amount:
        docs: >-
          The shipping amount in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). If
          `tax_behavior=inclusive`, then this amount includes taxes. Otherwise,
          taxes were calculated on top of this amount.
        type: integer
      amount_tax:
        docs: >-
          The amount of tax calculated for shipping, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      shipping_rate:
        docs: >-
          The ID of an existing
          [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
        type: optional<string>
        validation:
          maxLength: 5000
      tax_behavior:
        docs: >-
          Specifies whether the `amount` includes taxes. If
          `tax_behavior=inclusive`, then the amount includes taxes.
        type: TaxProductResourceTaxCalculationShippingCostTaxBehavior
      tax_breakdown:
        docs: Detailed account of taxes relevant to shipping cost.
        type: optional<list<TaxProductResourceLineItemTaxBreakdown>>
      tax_code:
        docs: >-
          The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for
          shipping.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxCalculationShippingCostTaxBehavior:
    docs: >-
      Specifies whether the `amount` includes taxes. If
      `tax_behavior=inclusive`, then the amount includes taxes.
    enum:
      - exclusive
      - inclusive
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxRateDetails:
    docs: ''
    properties:
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      flat_amount:
        docs: >-
          The amount of the tax rate when the `rate_type` is `flat_amount`. Tax
          rates with `rate_type` `percentage` can vary based on the transaction,
          resulting in this field being `null`. This field exposes the amount
          and currency of the flat tax rate.
        type: optional<TaxRateFlatAmount>
      percentage_decimal:
        docs: >-
          The tax rate percentage as a string. For example, 8.5% is represented
          as `"8.5"`.
        type: string
        validation:
          maxLength: 5000
      rate_type:
        docs: >-
          Indicates the type of tax rate applied to the taxable amount. This
          value can be `null` when no tax applies to the location.
        type: optional<TaxProductResourceTaxRateDetailsRateType>
      state:
        docs: State, county, province, or region.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_type:
        docs: The tax type, such as `vat` or `sales_tax`.
        type: optional<TaxProductResourceTaxRateDetailsTaxType>
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxRateDetailsRateType:
    docs: >-
      Indicates the type of tax rate applied to the taxable amount. This value
      can be `null` when no tax applies to the location.
    enum:
      - flat_amount
      - percentage
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxRateDetailsTaxType:
    docs: The tax type, such as `vat` or `sales_tax`.
    enum:
      - amusement_tax
      - communications_tax
      - gst
      - hst
      - igst
      - jct
      - lease_tax
      - pst
      - qst
      - retail_delivery_fee
      - rst
      - sales_tax
      - service_tax
      - vat
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsDefaults:
    docs: ''
    properties:
      tax_behavior:
        docs: >-
          Default [tax
          behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior)
          used to specify whether the price is considered inclusive of taxes or
          exclusive of taxes. If the item's price has a tax behavior set, it
          will take precedence over the default tax behavior.
        type: optional<TaxProductResourceTaxSettingsDefaultsTaxBehavior>
      tax_code:
        docs: >-
          Default [tax code](https://stripe.com/docs/tax/tax-categories) used to
          classify your products and prices.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsDefaultsTaxBehavior:
    docs: >-
      Default [tax
      behavior](https://stripe.com/docs/tax/products-prices-tax-categories-tax-behavior#tax-behavior)
      used to specify whether the price is considered inclusive of taxes or
      exclusive of taxes. If the item's price has a tax behavior set, it will
      take precedence over the default tax behavior.
    enum:
      - exclusive
      - inclusive
      - inferred_by_currency
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsHeadOffice:
    docs: ''
    properties:
      address:
        type: Address
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsStatusDetails:
    docs: ''
    properties:
      active:
        type: optional<TaxProductResourceTaxSettingsStatusDetailsResourceActive>
      pending:
        type: optional<TaxProductResourceTaxSettingsStatusDetailsResourcePending>
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsStatusDetailsResourceActive:
    docs: ''
    properties: {}
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxSettingsStatusDetailsResourcePending:
    docs: ''
    properties:
      missing_fields:
        docs: >-
          The list of missing fields that are required to perform calculations.
          It includes the entry `head_office` when the status is `pending`. It
          is recommended to set the optional values even if they aren't listed
          as required for calculating taxes. Calculations can fail if missing
          fields aren't explicitly provided on every call.
        type: optional<list<string>>
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxTransactionLineItemResourceReversal:
    docs: ''
    properties:
      original_line_item:
        docs: The `id` of the line item to reverse in the original transaction.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxTransactionResourceReversal:
    docs: ''
    properties:
      original_transaction:
        docs: The `id` of the reversed `Transaction` object.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxTransactionShippingCost:
    docs: ''
    properties:
      amount:
        docs: >-
          The shipping amount in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). If
          `tax_behavior=inclusive`, then this amount includes taxes. Otherwise,
          taxes were calculated on top of this amount.
        type: integer
      amount_tax:
        docs: >-
          The amount of tax calculated for shipping, in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      shipping_rate:
        docs: >-
          The ID of an existing
          [ShippingRate](https://stripe.com/docs/api/shipping_rates/object).
        type: optional<string>
        validation:
          maxLength: 5000
      tax_behavior:
        docs: >-
          Specifies whether the `amount` includes taxes. If
          `tax_behavior=inclusive`, then the amount includes taxes.
        type: TaxProductResourceTaxTransactionShippingCostTaxBehavior
      tax_breakdown:
        docs: >-
          Detailed account of taxes relevant to shipping cost. (It is not
          populated for the transaction resource object and will be removed in
          the next API version.)
        type: optional<list<TaxProductResourceLineItemTaxBreakdown>>
      tax_code:
        docs: >-
          The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for
          shipping.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxProductResourceTaxTransactionShippingCostTaxBehavior:
    docs: >-
      Specifies whether the `amount` includes taxes. If
      `tax_behavior=inclusive`, then the amount includes taxes.
    enum:
      - exclusive
      - inclusive
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxRate:
    docs: >-
      Tax rates can be applied to
      [invoices](https://stripe.com/docs/billing/invoices/tax-rates),
      [subscriptions](https://stripe.com/docs/billing/subscriptions/taxes) and
      [Checkout
      Sessions](https://stripe.com/docs/payments/checkout/set-up-a-subscription#tax-rates)
      to collect tax.


      Related guide: [Tax
      rates](https://stripe.com/docs/billing/taxes/tax-rates)
    properties:
      active:
        docs: >-
          Defaults to `true`. When set to `false`, this tax rate cannot be used
          with new applications or Checkout Sessions, but will still work for
          subscriptions and invoices that already have it set.
        type: boolean
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      description:
        docs: >-
          An arbitrary string attached to the tax rate for your internal use
          only. It will not be visible to your customers.
        type: optional<string>
        validation:
          maxLength: 5000
      display_name:
        docs: >-
          The display name of the tax rates as it will appear to your customer
          on their receipt email, PDF, and the hosted invoice page.
        type: string
        validation:
          maxLength: 5000
      effective_percentage:
        docs: >-
          Actual/effective tax rate percentage out of 100. For tax calculations
          with automatic_tax[enabled]=true,

          this percentage reflects the rate actually used to calculate tax based
          on the product's taxability

          and whether the user is registered to collect taxes in the
          corresponding jurisdiction.
        type: optional<double>
      flat_amount:
        docs: >-
          The amount of the tax rate when the `rate_type` is `flat_amount`. Tax
          rates with `rate_type` `percentage` can vary based on the transaction,
          resulting in this field being `null`. This field exposes the amount
          and currency of the flat tax rate.
        type: optional<TaxRateFlatAmount>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      inclusive:
        docs: This specifies if the tax rate is inclusive or exclusive.
        type: boolean
      jurisdiction:
        docs: >-
          The jurisdiction for the tax rate. You can use this label field for
          tax reporting purposes. It also appears on your customer’s invoice.
        type: optional<string>
        validation:
          maxLength: 5000
      jurisdiction_level:
        docs: >-
          The level of the jurisdiction that imposes this tax rate. Will be
          `null` for manually defined tax rates.
        type: optional<TaxRateJurisdictionLevel>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax_rate">
      percentage:
        docs: >-
          Tax rate percentage out of 100. For tax calculations with
          automatic_tax[enabled]=true, this percentage includes the statutory
          tax rate of non-taxable jurisdictions.
        type: double
      rate_type:
        docs: >-
          Indicates the type of tax rate applied to the taxable amount. This
          value can be `null` when no tax applies to the location.
        type: optional<TaxRateRateType>
      state:
        docs: >-
          [ISO 3166-2 subdivision
          code](https://en.wikipedia.org/wiki/ISO_3166-2:US), without country
          prefix. For example, "NY" for New York, United States.
        type: optional<string>
        validation:
          maxLength: 5000
      tax_type:
        docs: The high-level tax type, such as `vat` or `sales_tax`.
        type: optional<TaxRateTaxType>
    source:
      openapi: ../openapi.yaml
  TaxRateCreated:
    docs: Occurs whenever a new tax rate is created.
    properties:
      object:
        type: TaxRate
    source:
      openapi: ../openapi.yaml
  TaxRateFlatAmount:
    docs: >-
      The amount of the tax rate when the `rate_type`` is `flat_amount`. Tax
      rates with `rate_type` `percentage` can vary based on the transaction,
      resulting in this field being `null`. This field exposes the amount and
      currency of the flat tax rate.
    properties:
      amount:
        docs: >-
          Amount of the tax when the `rate_type` is `flat_amount`. This positive
          integer represents how much to charge in the smallest currency unit
          (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a zero-decimal
          currency). The amount value supports up to eight digits (e.g., a value
          of 99999999 for a USD charge of $999,999.99).
        type: integer
      currency:
        docs: Three-letter ISO currency code, in lowercase.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TaxRateJurisdictionLevel:
    docs: >-
      The level of the jurisdiction that imposes this tax rate. Will be `null`
      for manually defined tax rates.
    enum:
      - city
      - country
      - county
      - district
      - multiple
      - state
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxRateRateType:
    docs: >-
      Indicates the type of tax rate applied to the taxable amount. This value
      can be `null` when no tax applies to the location.
    enum:
      - flat_amount
      - percentage
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxRateTaxType:
    docs: The high-level tax type, such as `vat` or `sales_tax`.
    enum:
      - amusement_tax
      - communications_tax
      - gst
      - hst
      - igst
      - jct
      - lease_tax
      - pst
      - qst
      - retail_delivery_fee
      - rst
      - sales_tax
      - service_tax
      - vat
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxRateUpdated:
    docs: Occurs whenever a tax rate is updated.
    properties:
      object:
        type: TaxRate
    source:
      openapi: ../openapi.yaml
  TaxRegistration:
    docs: >-
      A Tax `Registration` lets us know that your business is registered to
      collect tax on payments within a region, enabling you to [automatically
      collect tax](https://stripe.com/docs/tax).


      Stripe doesn't register on your behalf with the relevant authorities when
      you create a Tax `Registration` object. For more information on how to
      register to collect tax, see [our
      guide](https://stripe.com/docs/tax/registering).


      Related guide: [Using the Registrations
      API](https://stripe.com/docs/tax/registrations-api)
    properties:
      active_from:
        docs: >-
          Time at which the registration becomes active. Measured in seconds
          since the Unix epoch.
        type: integer
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
        validation:
          maxLength: 5000
      country_options:
        type: TaxProductRegistrationsResourceCountryOptions
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      expires_at:
        docs: >-
          If set, the registration stops being active at this time. If not set,
          the registration will be active indefinitely. Measured in seconds
          since the Unix epoch.
        type: optional<integer>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.registration">
      status:
        docs: >-
          The status of the registration. This field is present for convenience
          and can be deduced from `active_from` and `expires_at`.
        type: TaxRegistrationStatus
    source:
      openapi: ../openapi.yaml
  TaxRegistrationStatus:
    docs: >-
      The status of the registration. This field is present for convenience and
      can be deduced from `active_from` and `expires_at`.
    enum:
      - active
      - expired
      - scheduled
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxSettings:
    docs: >-
      You can use Tax `Settings` to manage configurations used by Stripe Tax
      calculations.


      Related guide: [Using the Settings
      API](https://stripe.com/docs/tax/settings-api)
    properties:
      defaults:
        type: TaxProductResourceTaxSettingsDefaults
      head_office:
        docs: The place where your business is located.
        type: optional<TaxProductResourceTaxSettingsHeadOffice>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.settings">
      status:
        docs: The status of the Tax `Settings`.
        type: TaxSettingsStatus
      status_details:
        type: TaxProductResourceTaxSettingsStatusDetails
    source:
      openapi: ../openapi.yaml
  TaxSettingsStatus:
    docs: The status of the Tax `Settings`.
    enum:
      - active
      - pending
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxSettingsUpdated:
    docs: Occurs whenever tax settings is updated.
    properties:
      object:
        type: TaxSettings
    source:
      openapi: ../openapi.yaml
  TaxTransaction:
    docs: >-
      A Tax Transaction records the tax collected from or refunded to your
      customer.


      Related guide: [Calculate tax in your custom payment
      flow](https://stripe.com/docs/tax/custom#tax-transaction)
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      customer:
        docs: >-
          The ID of an existing
          [Customer](https://stripe.com/docs/api/customers/object) used for the
          resource.
        type: optional<string>
        validation:
          maxLength: 5000
      customer_details:
        type: TaxProductResourceCustomerDetails
      id:
        docs: Unique identifier for the transaction.
        type: string
        validation:
          maxLength: 5000
      line_items:
        docs: The tax collected or refunded, by line item.
        type: optional<TaxTransactionLineItems>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.transaction">
      posted_at:
        docs: >-
          The Unix timestamp representing when the tax liability is assumed or
          reduced.
        type: integer
      reference:
        docs: A custom unique identifier, such as 'myOrder_123'.
        type: string
        validation:
          maxLength: 5000
      reversal:
        docs: If `type=reversal`, contains information about what was reversed.
        type: optional<TaxProductResourceTaxTransactionResourceReversal>
      ship_from_details:
        docs: The details of the ship from location, such as the address.
        type: optional<TaxProductResourceShipFromDetails>
      shipping_cost:
        docs: The shipping cost details for the transaction.
        type: optional<TaxProductResourceTaxTransactionShippingCost>
      tax_date:
        docs: >-
          Timestamp of date at which the tax rules and rates in effect applies
          for the calculation.
        type: integer
      type:
        docs: If `reversal`, this transaction reverses an earlier transaction.
        type: TaxTransactionType
    source:
      openapi: ../openapi.yaml
  TaxTransactionLineItem:
    docs: ''
    properties:
      amount:
        docs: >-
          The line item amount in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal). If
          `tax_behavior=inclusive`, then this amount includes taxes. Otherwise,
          taxes were calculated on top of this amount.
        type: integer
      amount_tax:
        docs: >-
          The amount of tax calculated for this line item, in the [smallest
          currency unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"tax.transaction_line_item">
      product:
        docs: >-
          The ID of an existing
          [Product](https://stripe.com/docs/api/products/object).
        type: optional<string>
        validation:
          maxLength: 5000
      quantity:
        docs: >-
          The number of units of the item being purchased. For reversals, this
          is the quantity reversed.
        type: integer
      reference:
        docs: A custom identifier for this line item in the transaction.
        type: string
        validation:
          maxLength: 5000
      reversal:
        docs: If `type=reversal`, contains information about what was reversed.
        type: optional<TaxProductResourceTaxTransactionLineItemResourceReversal>
      tax_behavior:
        docs: >-
          Specifies whether the `amount` includes taxes. If
          `tax_behavior=inclusive`, then the amount includes taxes.
        type: TaxTransactionLineItemTaxBehavior
      tax_code:
        docs: >-
          The [tax code](https://stripe.com/docs/tax/tax-categories) ID used for
          this resource.
        type: string
        validation:
          maxLength: 5000
      type:
        docs: If `reversal`, this line item reverses an earlier transaction.
        type: TaxTransactionLineItemType
    source:
      openapi: ../openapi.yaml
  TaxTransactionLineItems:
    docs: The tax collected or refunded, by line item.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<TaxTransactionLineItem>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
          pattern: ^/v1/tax/transactions/[^/]+/line_items
    source:
      openapi: ../openapi.yaml
  TaxTransactionLineItemTaxBehavior:
    docs: >-
      Specifies whether the `amount` includes taxes. If
      `tax_behavior=inclusive`, then the amount includes taxes.
    enum:
      - exclusive
      - inclusive
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxTransactionLineItemType:
    docs: If `reversal`, this line item reverses an earlier transaction.
    enum:
      - reversal
      - transaction
    inline: true
    source:
      openapi: ../openapi.yaml
  TaxTransactionType:
    docs: If `reversal`, this transaction reverses an earlier transaction.
    enum:
      - reversal
      - transaction
    inline: true
    source:
      openapi: ../openapi.yaml
  TerminalConfiguration:
    docs: >-
      A Configurations object represents how features should be configured for
      terminal readers.
    properties:
      bbpos_wisepos_e:
        type: >-
          optional<TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      is_account_default:
        docs: Whether this Configuration is the default for your account
        type: optional<boolean>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      name:
        docs: >-
          String indicating the name of the Configuration object, set by the
          user
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.configuration">
      offline:
        type: optional<TerminalConfigurationConfigurationResourceOfflineConfig>
      reboot_window:
        type: optional<TerminalConfigurationConfigurationResourceRebootWindow>
      stripe_s700:
        type: >-
          optional<TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig>
      tipping:
        type: optional<TerminalConfigurationConfigurationResourceTipping>
      verifone_p400:
        type: >-
          optional<TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig>
    source:
      openapi: ../openapi.yaml
  TerminalConfigurationConfigurationResourceCurrencySpecificConfig:
    docs: ''
    properties:
      fixed_amounts:
        docs: Fixed amounts displayed when collecting a tip
        type: optional<list<integer>>
      percentages:
        docs: Percentages displayed when collecting a tip
        type: optional<list<integer>>
      smart_tip_threshold:
        docs: >-
          Below this amount, fixed amounts will be displayed; above it,
          percentages will be displayed
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfig:
    docs: ''
    properties:
      splashscreen:
        docs: >-
          A File ID representing an image you would like displayed on the
          reader.
        type: >-
          optional<TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen>
    source:
      openapi: ../openapi.yaml
  TerminalConfigurationConfigurationResourceDeviceTypeSpecificConfigSplashscreen:
    discriminated: false
    docs: A File ID representing an image you would like displayed on the reader.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: File
  TerminalConfigurationConfigurationResourceOfflineConfig:
    docs: ''
    properties:
      enabled:
        docs: >-
          Determines whether to allow transactions to be collected while reader
          is offline. Defaults to false.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  TerminalConfigurationConfigurationResourceRebootWindow:
    docs: ''
    properties:
      end_hour:
        docs: >-
          Integer between 0 to 23 that represents the end hour of the reboot
          time window. The value must be different than the start_hour.
        type: integer
      start_hour:
        docs: >-
          Integer between 0 to 23 that represents the start hour of the reboot
          time window.
        type: integer
    source:
      openapi: ../openapi.yaml
  TerminalConfigurationConfigurationResourceTipping:
    docs: ''
    properties:
      aud:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      cad:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      chf:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      czk:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      dkk:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      eur:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      gbp:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      hkd:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      jpy:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      myr:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      nok:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      nzd:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      pln:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      sek:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      sgd:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
      usd:
        type: >-
          optional<TerminalConfigurationConfigurationResourceCurrencySpecificConfig>
    source:
      openapi: ../openapi.yaml
  TerminalConnectionToken:
    docs: >-
      A Connection Token is used by the Stripe Terminal SDK to connect to a
      reader.


      Related guide: [Fleet
      management](https://stripe.com/docs/terminal/fleet/locations)
    properties:
      location:
        docs: >-
          The id of the location that this connection token is scoped to. Note
          that location scoping only applies to internet-connected readers. For
          more details, see [the docs on scoping connection
          tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.connection_token">
      secret:
        docs: Your application should pass this token to the Stripe Terminal SDK.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TerminalLocation:
    docs: >-
      A Location represents a grouping of readers.


      Related guide: [Fleet
      management](https://stripe.com/docs/terminal/fleet/locations)
    properties:
      address:
        type: Address
      configuration_overrides:
        docs: >-
          The ID of a configuration that will be used to customize all readers
          in this location.
        type: optional<string>
        validation:
          maxLength: 5000
      display_name:
        docs: The display name of the location.
        type: string
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.location">
    source:
      openapi: ../openapi.yaml
  TerminalReader:
    docs: >-
      A Reader represents a physical device for accepting payment details.


      Related guide: [Connecting to a
      reader](https://stripe.com/docs/terminal/payments/connect-reader)
    properties:
      action:
        docs: The most recent action performed by the reader.
        type: optional<TerminalReaderReaderResourceReaderAction>
      device_sw_version:
        docs: The current software version of the reader.
        type: optional<string>
        validation:
          maxLength: 5000
      device_type:
        docs: >-
          Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `stripe_s700`,
          `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`,
          `simulated_wisepos_e`, or `mobile_phone_reader`.
        type: TerminalReaderDeviceType
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      ip_address:
        docs: The local IP address of the reader.
        type: optional<string>
        validation:
          maxLength: 5000
      label:
        docs: Custom label given to the reader for easier identification.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      location:
        docs: The location identifier of the reader.
        type: optional<TerminalReaderLocation>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"terminal.reader">
      serial_number:
        docs: Serial number of the reader.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          The networking status of the reader. We do not recommend using this
          field in flows that may block taking payments.
        type: optional<TerminalReaderStatus>
    source:
      openapi: ../openapi.yaml
  TerminalReaderActionFailed:
    docs: Occurs whenever an action sent to a Terminal reader failed.
    properties:
      object:
        type: TerminalReader
    source:
      openapi: ../openapi.yaml
  TerminalReaderActionSucceeded:
    docs: Occurs whenever an action sent to a Terminal reader was successful.
    properties:
      object:
        type: TerminalReader
    source:
      openapi: ../openapi.yaml
  TerminalReaderDeviceType:
    docs: >-
      Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `stripe_s700`,
      `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`,
      `simulated_wisepos_e`, or `mobile_phone_reader`.
    enum:
      - bbpos_chipper2x
      - bbpos_wisepad3
      - bbpos_wisepos_e
      - mobile_phone_reader
      - simulated_wisepos_e
      - stripe_m2
      - stripe_s700
      - verifone_P400
    inline: true
    source:
      openapi: ../openapi.yaml
  TerminalReaderLocation:
    discriminated: false
    docs: The location identifier of the reader.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TerminalLocation
  TerminalReaderReaderResourceCart:
    docs: Represents a cart to be displayed on the reader
    properties:
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      line_items:
        docs: List of line items in the cart.
        type: list<TerminalReaderReaderResourceLineItem>
      tax:
        docs: >-
          Tax amount for the entire cart. A positive integer in the [smallest
          currency unit](https://stripe.com/docs/currencies#zero-decimal).
        type: optional<integer>
      total:
        docs: >-
          Total amount for the entire cart, including tax. A positive integer in
          the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceLineItem:
    docs: Represents a line item to be displayed on the reader
    properties:
      amount:
        docs: >-
          The amount of the line item. A positive integer in the [smallest
          currency unit](https://stripe.com/docs/currencies#zero-decimal).
        type: integer
      description:
        docs: Description of the line item.
        type: string
        validation:
          maxLength: 5000
      quantity:
        docs: The quantity of the line item.
        type: integer
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceProcessConfig:
    docs: Represents a per-transaction override of a reader configuration
    properties:
      enable_customer_cancellation:
        docs: Enable customer initiated cancellation when processing this payment.
        type: optional<boolean>
      skip_tipping:
        docs: Override showing a tipping selection screen on this transaction.
        type: optional<boolean>
      tipping:
        type: optional<TerminalReaderReaderResourceTippingConfig>
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceProcessPaymentIntentAction:
    docs: Represents a reader action to process a payment intent
    properties:
      payment_intent:
        docs: Most recent PaymentIntent processed by the reader.
        type: TerminalReaderReaderResourceProcessPaymentIntentActionPaymentIntent
      process_config:
        type: optional<TerminalReaderReaderResourceProcessConfig>
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceProcessPaymentIntentActionPaymentIntent:
    discriminated: false
    docs: Most recent PaymentIntent processed by the reader.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  TerminalReaderReaderResourceProcessSetupConfig:
    docs: Represents a per-setup override of a reader configuration
    properties:
      enable_customer_cancellation:
        docs: >-
          Enable customer initiated cancellation when processing this
          SetupIntent.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceProcessSetupIntentAction:
    docs: Represents a reader action to process a setup intent
    properties:
      generated_card:
        docs: >-
          ID of a card PaymentMethod generated from the card_present
          PaymentMethod that may be attached to a Customer for future
          transactions. Only present if it was possible to generate a card
          PaymentMethod.
        type: optional<string>
        validation:
          maxLength: 5000
      process_config:
        type: optional<TerminalReaderReaderResourceProcessSetupConfig>
      setup_intent:
        docs: Most recent SetupIntent processed by the reader.
        type: TerminalReaderReaderResourceProcessSetupIntentActionSetupIntent
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceProcessSetupIntentActionSetupIntent:
    discriminated: false
    docs: Most recent SetupIntent processed by the reader.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: SetupIntent
  TerminalReaderReaderResourceReaderAction:
    docs: Represents an action performed by the reader
    properties:
      failure_code:
        docs: Failure code, only set if status is `failed`.
        type: optional<string>
        validation:
          maxLength: 5000
      failure_message:
        docs: Detailed failure message, only set if status is `failed`.
        type: optional<string>
        validation:
          maxLength: 5000
      process_payment_intent:
        type: optional<TerminalReaderReaderResourceProcessPaymentIntentAction>
      process_setup_intent:
        type: optional<TerminalReaderReaderResourceProcessSetupIntentAction>
      refund_payment:
        type: optional<TerminalReaderReaderResourceRefundPaymentAction>
      set_reader_display:
        type: optional<TerminalReaderReaderResourceSetReaderDisplayAction>
      status:
        docs: Status of the action performed by the reader.
        type: TerminalReaderReaderResourceReaderActionStatus
      type:
        docs: Type of action performed by the reader.
        type: TerminalReaderReaderResourceReaderActionType
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceReaderActionStatus:
    docs: Status of the action performed by the reader.
    enum:
      - failed
      - in_progress
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceReaderActionType:
    docs: Type of action performed by the reader.
    enum:
      - process_payment_intent
      - process_setup_intent
      - refund_payment
      - set_reader_display
    inline: true
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceRefundPaymentAction:
    docs: Represents a reader action to refund a payment
    properties:
      amount:
        docs: The amount being refunded.
        type: optional<integer>
      charge:
        docs: Charge that is being refunded.
        type: optional<TerminalReaderReaderResourceRefundPaymentActionCharge>
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, string>>
      payment_intent:
        docs: Payment intent that is being refunded.
        type: optional<TerminalReaderReaderResourceRefundPaymentActionPaymentIntent>
      reason:
        docs: The reason for the refund.
        type: optional<TerminalReaderReaderResourceRefundPaymentActionReason>
      refund:
        docs: Unique identifier for the refund object.
        type: optional<TerminalReaderReaderResourceRefundPaymentActionRefund>
      refund_application_fee:
        docs: >-
          Boolean indicating whether the application fee should be refunded when
          refunding this charge. If a full charge refund is given, the full
          application fee will be refunded. Otherwise, the application fee will
          be refunded in an amount proportional to the amount of the charge
          refunded. An application fee can be refunded only by the application
          that created the charge.
        type: optional<boolean>
      refund_payment_config:
        type: optional<TerminalReaderReaderResourceRefundPaymentConfig>
      reverse_transfer:
        docs: >-
          Boolean indicating whether the transfer should be reversed when
          refunding this charge. The transfer will be reversed proportionally to
          the amount being refunded (either the entire or partial amount). A
          transfer can be reversed only by the application that created the
          charge.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceRefundPaymentActionCharge:
    discriminated: false
    docs: Charge that is being refunded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  TerminalReaderReaderResourceRefundPaymentActionPaymentIntent:
    discriminated: false
    docs: Payment intent that is being refunded.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: PaymentIntent
  TerminalReaderReaderResourceRefundPaymentActionReason:
    docs: The reason for the refund.
    enum:
      - duplicate
      - fraudulent
      - requested_by_customer
    inline: true
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceRefundPaymentActionRefund:
    discriminated: false
    docs: Unique identifier for the refund object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Refund
  TerminalReaderReaderResourceRefundPaymentConfig:
    docs: Represents a per-transaction override of a reader configuration
    properties:
      enable_customer_cancellation:
        docs: Enable customer initiated cancellation when refunding this payment.
        type: optional<boolean>
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceSetReaderDisplayAction:
    docs: Represents a reader action to set the reader display
    properties:
      cart:
        docs: Cart object to be displayed by the reader.
        type: optional<TerminalReaderReaderResourceCart>
      type:
        docs: Type of information to be displayed by the reader.
        type: literal<"cart">
    source:
      openapi: ../openapi.yaml
  TerminalReaderReaderResourceTippingConfig:
    docs: Represents a per-transaction tipping configuration
    properties:
      amount_eligible:
        docs: >-
          Amount used to calculate tip suggestions on tipping selection screen
          for this transaction. Must be a positive integer in the smallest
          currency unit (e.g., 100 cents to represent $1.00 or 100 to represent
          ¥100, a zero-decimal currency).
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TerminalReaderStatus:
    docs: >-
      The networking status of the reader. We do not recommend using this field
      in flows that may block taking payments.
    enum:
      - offline
      - online
    inline: true
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClock:
    docs: >-
      A test clock enables deterministic control over objects in testmode. With
      a test clock, you can create

      objects at a frozen time in the past or future, and advance to a specific
      future time to observe webhooks and state changes. After the clock
      advances,

      you can either validate the current state of your scenario (and test your
      assumptions), change the current state of your scenario (and test more
      complex scenarios), or keep advancing forward in time.
    properties:
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      deletes_after:
        docs: Time at which this clock is scheduled to auto delete.
        type: integer
      frozen_time:
        docs: Time at which all objects belonging to this clock are frozen.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      name:
        docs: The custom name supplied at creation.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"test_helpers.test_clock">
      status:
        docs: The status of the Test Clock.
        type: TestHelpersTestClockStatus
      status_details:
        type: BillingClocksResourceStatusDetailsStatusDetails
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockAdvancing:
    docs: Occurs whenever a test clock starts advancing.
    properties:
      object:
        type: TestHelpersTestClock
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockCreated:
    docs: Occurs whenever a test clock is created.
    properties:
      object:
        type: TestHelpersTestClock
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockDeleted:
    docs: Occurs whenever a test clock is deleted.
    properties:
      object:
        type: TestHelpersTestClock
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockInternalFailure:
    docs: Occurs whenever a test clock fails to advance its frozen time.
    properties:
      object:
        type: TestHelpersTestClock
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockReady:
    docs: Occurs whenever a test clock transitions to a ready status.
    properties:
      object:
        type: TestHelpersTestClock
    source:
      openapi: ../openapi.yaml
  TestHelpersTestClockStatus:
    docs: The status of the Test Clock.
    enum:
      - advancing
      - internal_failure
      - ready
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetails:
    docs: ''
    properties:
      authentication_flow:
        docs: |-
          For authenticated transactions: how the customer was authenticated by
          the issuing bank.
        type: optional<ThreeDSecureDetailsAuthenticationFlow>
      electronic_commerce_indicator:
        docs: |-
          The Electronic Commerce Indicator (ECI). A protocol-level field
          indicating what degree of authentication was performed.
        type: optional<ThreeDSecureDetailsElectronicCommerceIndicator>
      result:
        docs: Indicates the outcome of 3D Secure authentication.
        type: optional<ThreeDSecureDetailsResult>
      result_reason:
        docs: |-
          Additional information about why 3D Secure succeeded or failed based
          on the `result`.
        type: optional<ThreeDSecureDetailsResultReason>
      transaction_id:
        docs: |-
          The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
          (dsTransId) for this payment.
        type: optional<string>
        validation:
          maxLength: 5000
      version:
        docs: The version of 3D Secure that was used.
        type: optional<ThreeDSecureDetailsVersion>
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsAuthenticationFlow:
    docs: |-
      For authenticated transactions: how the customer was authenticated by
      the issuing bank.
    enum:
      - challenge
      - frictionless
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsCharge:
    docs: ''
    properties:
      authentication_flow:
        docs: |-
          For authenticated transactions: how the customer was authenticated by
          the issuing bank.
        type: optional<ThreeDSecureDetailsChargeAuthenticationFlow>
      electronic_commerce_indicator:
        docs: |-
          The Electronic Commerce Indicator (ECI). A protocol-level field
          indicating what degree of authentication was performed.
        type: optional<ThreeDSecureDetailsChargeElectronicCommerceIndicator>
      exemption_indicator:
        docs: >-
          The exemption requested via 3DS and accepted by the issuer at
          authentication time.
        type: optional<ThreeDSecureDetailsChargeExemptionIndicator>
      exemption_indicator_applied:
        docs: >-
          Whether Stripe requested the value of `exemption_indicator` in the
          transaction. This will depend on

          the outcome of Stripe's internal risk assessment.
        type: optional<boolean>
      result:
        docs: Indicates the outcome of 3D Secure authentication.
        type: optional<ThreeDSecureDetailsChargeResult>
      result_reason:
        docs: |-
          Additional information about why 3D Secure succeeded or failed based
          on the `result`.
        type: optional<ThreeDSecureDetailsChargeResultReason>
      transaction_id:
        docs: |-
          The 3D Secure 1 XID or 3D Secure 2 Directory Server Transaction ID
          (dsTransId) for this payment.
        type: optional<string>
        validation:
          maxLength: 5000
      version:
        docs: The version of 3D Secure that was used.
        type: optional<ThreeDSecureDetailsChargeVersion>
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeAuthenticationFlow:
    docs: |-
      For authenticated transactions: how the customer was authenticated by
      the issuing bank.
    enum:
      - challenge
      - frictionless
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeElectronicCommerceIndicator:
    docs: |-
      The Electronic Commerce Indicator (ECI). A protocol-level field
      indicating what degree of authentication was performed.
    enum:
      - name: One
        value: '01'
      - name: Two
        value: '02'
      - name: Five
        value: '05'
      - name: Six
        value: '06'
      - name: Seven
        value: '07'
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeExemptionIndicator:
    docs: >-
      The exemption requested via 3DS and accepted by the issuer at
      authentication time.
    enum:
      - low_risk
      - none
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeResult:
    docs: Indicates the outcome of 3D Secure authentication.
    enum:
      - attempt_acknowledged
      - authenticated
      - exempted
      - failed
      - not_supported
      - processing_error
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeResultReason:
    docs: |-
      Additional information about why 3D Secure succeeded or failed based
      on the `result`.
    enum:
      - abandoned
      - bypassed
      - canceled
      - card_not_enrolled
      - network_not_supported
      - protocol_error
      - rejected
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsChargeVersion:
    docs: The version of 3D Secure that was used.
    enum:
      - name: One02
        value: 1.0.2
      - name: Two10
        value: 2.1.0
      - name: Two20
        value: 2.2.0
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsElectronicCommerceIndicator:
    docs: |-
      The Electronic Commerce Indicator (ECI). A protocol-level field
      indicating what degree of authentication was performed.
    enum:
      - name: One
        value: '01'
      - name: Two
        value: '02'
      - name: Five
        value: '05'
      - name: Six
        value: '06'
      - name: Seven
        value: '07'
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsResult:
    docs: Indicates the outcome of 3D Secure authentication.
    enum:
      - attempt_acknowledged
      - authenticated
      - exempted
      - failed
      - not_supported
      - processing_error
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsResultReason:
    docs: |-
      Additional information about why 3D Secure succeeded or failed based
      on the `result`.
    enum:
      - abandoned
      - bypassed
      - canceled
      - card_not_enrolled
      - network_not_supported
      - protocol_error
      - rejected
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureDetailsVersion:
    docs: The version of 3D Secure that was used.
    enum:
      - name: One02
        value: 1.0.2
      - name: Two10
        value: 2.1.0
      - name: Two20
        value: 2.2.0
    inline: true
    source:
      openapi: ../openapi.yaml
  ThreeDSecureUsage:
    docs: ''
    properties:
      supported:
        docs: Whether 3D Secure is supported on this card.
        type: boolean
    source:
      openapi: ../openapi.yaml
  ThresholdsResourceUsageAlertFilter:
    docs: ''
    properties:
      customer:
        docs: Limit the scope of the alert to this customer ID
        type: optional<ThresholdsResourceUsageAlertFilterCustomer>
      type: literal<"customer">
    source:
      openapi: ../openapi.yaml
  ThresholdsResourceUsageAlertFilterCustomer:
    discriminated: false
    docs: Limit the scope of the alert to this customer ID
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Customer
  ThresholdsResourceUsageThresholdConfig:
    docs: >-
      The usage threshold alert configuration enables setting up alerts for when
      a certain usage threshold on a specific meter is crossed.
    properties:
      filters:
        docs: >-
          The filters allow limiting the scope of this usage alert. You can only
          specify up to one filter at this time.
        type: optional<list<ThresholdsResourceUsageAlertFilter>>
      gte:
        docs: The value at which this alert will trigger.
        type: integer
      meter:
        docs: The [Billing Meter](/api/billing/meter) ID whose usage is monitored.
        type: ThresholdsResourceUsageThresholdConfigMeter
      recurrence:
        docs: Defines how the alert will behave.
        type: literal<"one_time">
    source:
      openapi: ../openapi.yaml
  ThresholdsResourceUsageThresholdConfigMeter:
    discriminated: false
    docs: The [Billing Meter](/api/billing/meter) ID whose usage is monitored.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BillingMeter
  Token:
    docs: >-
      Tokenization is the process Stripe uses to collect sensitive card or bank

      account details, or personally identifiable information (PII), directly
      from

      your customers in a secure manner. A token representing this information
      is

      returned to your server to use. Use our

      [recommended payments integrations](https://stripe.com/docs/payments) to
      perform this process

      on the client-side. This guarantees that no sensitive card data touches
      your server,

      and allows your integration to operate in a PCI-compliant way.


      If you can't use client-side tokenization, you can also create tokens
      using

      the API with either your publishable or secret API key. If

      your integration uses this method, you're responsible for any PCI
      compliance

      that it might require, and you must keep your secret API key safe. Unlike
      with

      client-side tokenization, your customer's information isn't sent directly
      to

      Stripe, so we can't determine how it's handled or stored.


      You can't store or use tokens more than once. To store card or bank
      account

      information for later use, create
      [Customer](https://stripe.com/docs/api#customers)

      objects or [External accounts](/api#external_accounts).

      [Radar](https://stripe.com/docs/radar), our integrated solution for
      automatic fraud protection,

      performs best with integrations that use client-side tokenization.
    properties:
      bank_account:
        type: optional<BankAccount>
      card:
        type: optional<Card>
      client_ip:
        docs: IP address of the client that generates the token.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"token">
      type:
        docs: 'Type of the token: `account`, `bank_account`, `card`, or `pii`.'
        type: string
        validation:
          maxLength: 5000
      used:
        docs: >-
          Determines if you have already used this token (you can only use
          tokens once).
        type: boolean
    source:
      openapi: ../openapi.yaml
  TokenCardNetworks:
    docs: ''
    properties:
      preferred:
        docs: >-
          The preferred network for co-branded cards. Can be `cartes_bancaires`,
          `mastercard`, `visa` or `invalid_preference` if requested network is
          not valid for the card.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  Topup:
    docs: >-
      To top up your Stripe balance, you create a top-up object. You can
      retrieve

      individual top-ups, as well as list all top-ups. Top-ups are identified by
      a

      unique, random ID.


      Related guide: [Topping up your platform
      account](https://stripe.com/docs/connect/top-ups)
    properties:
      amount:
        docs: Amount transferred.
        type: integer
      balance_transaction:
        docs: >-
          ID of the balance transaction that describes the impact of this top-up
          on your account balance. May not be specified depending on status of
          top-up.
        type: optional<TopupBalanceTransaction>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
        validation:
          maxLength: 5000
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      expected_availability_date:
        docs: >-
          Date the funds are expected to arrive in your Stripe account for
          payouts. This factors in delays like weekends or bank holidays. May
          not be specified depending on status of top-up.
        type: optional<integer>
      failure_code:
        docs: >-
          Error code explaining reason for top-up failure if available (see [the
          errors section](https://stripe.com/docs/api#errors) for a list of
          codes).
        type: optional<string>
        validation:
          maxLength: 5000
      failure_message:
        docs: >-
          Message to user further explaining reason for top-up failure if
          available.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"topup">
      source:
        docs: >-
          The source field is deprecated. It might not always be present in the
          API response.
        type: optional<Source>
      statement_descriptor:
        docs: >-
          Extra information about a top-up. This will appear on your source's
          bank statement. It must contain at least one letter.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: >-
          The status of the top-up is either `canceled`, `failed`, `pending`,
          `reversed`, or `succeeded`.
        type: TopupStatus
      transfer_group:
        docs: A string that identifies this top-up as part of a group.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TopupBalanceTransaction:
    discriminated: false
    docs: >-
      ID of the balance transaction that describes the impact of this top-up on
      your account balance. May not be specified depending on status of top-up.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  TopupCanceled:
    docs: Occurs whenever a top-up is canceled.
    properties:
      object:
        type: Topup
    source:
      openapi: ../openapi.yaml
  TopupCreated:
    docs: Occurs whenever a top-up is created.
    properties:
      object:
        type: Topup
    source:
      openapi: ../openapi.yaml
  TopupFailed:
    docs: Occurs whenever a top-up fails.
    properties:
      object:
        type: Topup
    source:
      openapi: ../openapi.yaml
  TopupReversed:
    docs: Occurs whenever a top-up is reversed.
    properties:
      object:
        type: Topup
    source:
      openapi: ../openapi.yaml
  TopupStatus:
    docs: >-
      The status of the top-up is either `canceled`, `failed`, `pending`,
      `reversed`, or `succeeded`.
    enum:
      - canceled
      - failed
      - pending
      - reversed
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TopupSucceeded:
    docs: Occurs whenever a top-up succeeds.
    properties:
      object:
        type: Topup
    source:
      openapi: ../openapi.yaml
  Transfer:
    docs: >-
      A `Transfer` object is created when you move funds between Stripe accounts
      as

      part of Connect.


      Before April 6, 2017, transfers also represented movement of funds from a

      Stripe account to a card or bank account. This behavior has since been
      split

      out into a [Payout](https://stripe.com/docs/api#payout_object) object,
      with corresponding payout endpoints. For more

      information, read about the

      [transfer/payout split](https://stripe.com/docs/transfer-payout-split).


      Related guide: [Creating separate charges and
      transfers](https://stripe.com/docs/connect/separate-charges-and-transfers)
    properties:
      amount:
        docs: Amount in cents (or local equivalent) to be transferred.
        type: integer
      amount_reversed:
        docs: >-
          Amount in cents (or local equivalent) reversed (can be less than the
          amount attribute on the transfer if a partial reversal was issued).
        type: integer
      balance_transaction:
        docs: >-
          Balance transaction that describes the impact of this transfer on your
          account balance.
        type: optional<TransferBalanceTransaction>
      created:
        docs: Time that this record of the transfer was first created.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      destination:
        docs: ID of the Stripe account the transfer was sent to.
        type: optional<TransferDestination>
      destination_payment:
        docs: >-
          If the destination is a Stripe account, this will be the ID of the
          payment that the destination account received for the transfer.
        type: optional<TransferDestinationPayment>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"transfer">
      reversals:
        docs: A list of reversals that have been applied to the transfer.
        type: TransferReversals
      reversed:
        docs: >-
          Whether the transfer has been fully reversed. If the transfer is only
          partially reversed, this attribute will still be false.
        type: boolean
      source_transaction:
        docs: >-
          ID of the charge that was used to fund the transfer. If null, the
          transfer was funded from the available balance.
        type: optional<TransferSourceTransaction>
      source_type:
        docs: >-
          The source balance this transfer came from. One of `card`, `fpx`, or
          `bank_account`.
        type: optional<string>
        validation:
          maxLength: 5000
      transfer_group:
        docs: >-
          A string that identifies this transaction as part of a group. See the
          [Connect
          documentation](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)
          for details.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TransferBalanceTransaction:
    discriminated: false
    docs: >-
      Balance transaction that describes the impact of this transfer on your
      account balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  TransferCreated:
    docs: Occurs whenever a transfer is created.
    properties:
      object:
        type: Transfer
    source:
      openapi: ../openapi.yaml
  TransferData:
    docs: ''
    properties:
      amount:
        docs: >-
          Amount intended to be collected by this PaymentIntent. A positive
          integer representing how much to charge in the [smallest currency
          unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100
          cents to charge $1.00 or 100 to charge ¥100, a zero-decimal currency).
          The minimum amount is $0.50 US or [equivalent in charge
          currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts).
          The amount value supports up to eight digits (e.g., a value of
          99999999 for a USD charge of $999,999.99).
        type: optional<integer>
      destination:
        docs: |-
          The account (if any) that the payment is attributed to for tax
          reporting, and where funds from the payment are transferred to after
          payment success.
        type: TransferDataDestination
    source:
      openapi: ../openapi.yaml
  TransferDataDestination:
    discriminated: false
    docs: |-
      The account (if any) that the payment is attributed to for tax
      reporting, and where funds from the payment are transferred to after
      payment success.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  TransferDestination:
    discriminated: false
    docs: ID of the Stripe account the transfer was sent to.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Account
  TransferDestinationPayment:
    discriminated: false
    docs: >-
      If the destination is a Stripe account, this will be the ID of the payment
      that the destination account received for the transfer.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  TransferReversal:
    docs: >-
      [Stripe Connect](https://stripe.com/docs/connect) platforms can reverse
      transfers made to a

      connected account, either entirely or partially, and can also specify
      whether

      to refund any related application fees. Transfer reversals add to the

      platform's balance and subtract from the destination account's balance.


      Reversing a transfer that was made for a [destination

      charge](/docs/connect/destination-charges) is allowed only up to the
      amount of

      the charge. It is possible to reverse a

      [transfer_group](https://stripe.com/docs/connect/separate-charges-and-transfers#transfer-options)

      transfer only if the destination account has enough balance to cover the

      reversal.


      Related guide: [Reverse
      transfers](https://stripe.com/docs/connect/separate-charges-and-transfers#reverse-transfers)
    properties:
      amount:
        docs: Amount, in cents (or local equivalent).
        type: integer
      balance_transaction:
        docs: Balance transaction that describes the impact on your account balance.
        type: optional<TransferReversalBalanceTransaction>
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      destination_payment_refund:
        docs: Linked payment refund for the transfer reversal.
        type: optional<TransferReversalDestinationPaymentRefund>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"transfer_reversal">
      source_refund:
        docs: ID of the refund responsible for the transfer reversal.
        type: optional<TransferReversalSourceRefund>
      transfer:
        docs: ID of the transfer that was reversed.
        type: TransferReversalTransfer
    source:
      openapi: ../openapi.yaml
  TransferReversalBalanceTransaction:
    discriminated: false
    docs: Balance transaction that describes the impact on your account balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: BalanceTransaction
  TransferReversalDestinationPaymentRefund:
    discriminated: false
    docs: Linked payment refund for the transfer reversal.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Refund
  TransferReversals:
    docs: A list of reversals that have been applied to the transfer.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<TransferReversal>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TransferReversalSourceRefund:
    discriminated: false
    docs: ID of the refund responsible for the transfer reversal.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Refund
  TransferReversalTransfer:
    discriminated: false
    docs: ID of the transfer that was reversed.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Transfer
  TransferReversed:
    docs: Occurs whenever a transfer is reversed, including partial reversals.
    properties:
      object:
        type: Transfer
    source:
      openapi: ../openapi.yaml
  TransferSchedule:
    docs: ''
    properties:
      delay_days:
        docs: >-
          The number of days charges for the account will be held before being
          paid out.
        type: integer
      interval:
        docs: >-
          How frequently funds will be paid out. One of `manual` (payouts only
          created via API call), `daily`, `weekly`, or `monthly`.
        type: string
        validation:
          maxLength: 5000
      monthly_anchor:
        docs: >-
          The day of the month funds will be paid out. Only shown if `interval`
          is monthly. Payouts scheduled between the 29th and 31st of the month
          are sent on the last day of shorter months.
        type: optional<integer>
      weekly_anchor:
        docs: >-
          The day of the week funds will be paid out, of the style 'monday',
          'tuesday', etc. Only shown if `interval` is weekly.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TransferSourceTransaction:
    discriminated: false
    docs: >-
      ID of the charge that was used to fund the transfer. If null, the transfer
      was funded from the available balance.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: Charge
  TransferUpdated:
    docs: Occurs whenever a transfer's description or metadata is updated.
    properties:
      object:
        type: Transfer
    source:
      openapi: ../openapi.yaml
  TransformQuantity:
    docs: ''
    properties:
      divide_by:
        docs: Divide usage by this number.
        type: integer
      round:
        docs: After division, either round the result `up` or `down`.
        type: TransformQuantityRound
    source:
      openapi: ../openapi.yaml
  TransformQuantityRound:
    docs: After division, either round the result `up` or `down`.
    enum:
      - down
      - up
    inline: true
    source:
      openapi: ../openapi.yaml
  TransformUsage:
    docs: ''
    properties:
      divide_by:
        docs: Divide usage by this number.
        type: integer
      round:
        docs: After division, either round the result `up` or `down`.
        type: TransformUsageRound
    source:
      openapi: ../openapi.yaml
  TransformUsageRound:
    docs: After division, either round the result `up` or `down`.
    enum:
      - down
      - up
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversal:
    docs: >-
      You can reverse some
      [ReceivedCredits](https://stripe.com/docs/api#received_credits) depending
      on their network and source flow. Reversing a ReceivedCredit leads to the
      creation of a new object known as a CreditReversal.
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      financial_account:
        docs: The FinancialAccount to reverse funds from.
        type: string
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      network:
        docs: The rails used to reverse the funds.
        type: TreasuryCreditReversalNetwork
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.credit_reversal">
      received_credit:
        docs: The ReceivedCredit being reversed.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: Status of the CreditReversal
        type: TreasuryCreditReversalStatus
      status_transitions:
        type: TreasuryReceivedCreditsResourceStatusTransitions
      transaction:
        docs: The Transaction associated with this object.
        type: optional<TreasuryCreditReversalTransaction>
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversalCreated:
    docs: Occurs whenever an CreditReversal is submitted and created.
    properties:
      object:
        type: TreasuryCreditReversal
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversalNetwork:
    docs: The rails used to reverse the funds.
    enum:
      - ach
      - stripe
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversalPosted:
    docs: Occurs whenever an CreditReversal post is posted.
    properties:
      object:
        type: TreasuryCreditReversal
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversalStatus:
    docs: Status of the CreditReversal
    enum:
      - canceled
      - posted
      - processing
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryCreditReversalTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryDebitReversal:
    docs: >-
      You can reverse some
      [ReceivedDebits](https://stripe.com/docs/api#received_debits) depending on
      their network and source flow. Reversing a ReceivedDebit leads to the
      creation of a new object known as a DebitReversal.
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      financial_account:
        docs: The FinancialAccount to reverse funds from.
        type: optional<string>
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      linked_flows:
        docs: Other flows linked to a DebitReversal.
        type: optional<TreasuryReceivedDebitsResourceDebitReversalLinkedFlows>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      network:
        docs: The rails used to reverse the funds.
        type: TreasuryDebitReversalNetwork
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.debit_reversal">
      received_debit:
        docs: The ReceivedDebit being reversed.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: Status of the DebitReversal
        type: TreasuryDebitReversalStatus
      status_transitions:
        type: TreasuryReceivedDebitsResourceStatusTransitions
      transaction:
        docs: The Transaction associated with this object.
        type: optional<TreasuryDebitReversalTransaction>
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalCompleted:
    docs: Occurs whenever a DebitReversal is completed.
    properties:
      object:
        type: TreasuryDebitReversal
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalCreated:
    docs: Occurs whenever a DebitReversal is created.
    properties:
      object:
        type: TreasuryDebitReversal
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalInitialCreditGranted:
    docs: Occurs whenever an initial credit is granted on a DebitReversal.
    properties:
      object:
        type: TreasuryDebitReversal
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalNetwork:
    docs: The rails used to reverse the funds.
    enum:
      - ach
      - card
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalStatus:
    docs: Status of the DebitReversal
    enum:
      - failed
      - processing
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryDebitReversalTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryFinancialAccount:
    docs: >-
      Stripe Treasury provides users with a container for money called a
      FinancialAccount that is separate from their Payments balance.

      FinancialAccounts serve as the source and destination of Treasury’s money
      movement APIs.
    properties:
      active_features:
        docs: The array of paths to active Features in the Features hash.
        type: optional<list<TreasuryFinancialAccountActiveFeaturesItem>>
      balance:
        type: TreasuryFinancialAccountsResourceBalance
      country:
        docs: >-
          Two-letter country code ([ISO 3166-1
          alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
        type: string
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      features:
        type: optional<TreasuryFinancialAccountFeatures>
      financial_addresses:
        docs: The set of credentials that resolve to a FinancialAccount.
        type: list<TreasuryFinancialAccountsResourceFinancialAddress>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      is_default:
        type: optional<boolean>
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: optional<map<string, optional<string>>>
      nickname:
        docs: The nickname for the FinancialAccount.
        type: optional<string>
        validation:
          maxLength: 5000
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.financial_account">
      pending_features:
        docs: The array of paths to pending Features in the Features hash.
        type: optional<list<TreasuryFinancialAccountPendingFeaturesItem>>
      platform_restrictions:
        docs: >-
          The set of functionalities that the platform can restrict on the
          FinancialAccount.
        type: optional<TreasuryFinancialAccountsResourcePlatformRestrictions>
      restricted_features:
        docs: The array of paths to restricted Features in the Features hash.
        type: optional<list<TreasuryFinancialAccountRestrictedFeaturesItem>>
      status:
        docs: Status of this FinancialAccount.
        type: TreasuryFinancialAccountStatus
      status_details:
        type: TreasuryFinancialAccountsResourceStatusDetails
      supported_currencies:
        docs: >-
          The currencies the FinancialAccount can hold a balance in.
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
        type: list<string>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountActiveFeaturesItem:
    enum:
      - card_issuing
      - deposit_insurance
      - name: FinancialAddressesAba
        value: financial_addresses.aba
      - name: FinancialAddressesAbaForwarding
        value: financial_addresses.aba.forwarding
      - name: InboundTransfersAch
        value: inbound_transfers.ach
      - intra_stripe_flows
      - name: OutboundPaymentsAch
        value: outbound_payments.ach
      - name: OutboundPaymentsUsDomesticWire
        value: outbound_payments.us_domestic_wire
      - name: OutboundTransfersAch
        value: outbound_transfers.ach
      - name: OutboundTransfersUsDomesticWire
        value: outbound_transfers.us_domestic_wire
      - remote_deposit_capture
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountClosed:
    docs: Occurs whenever the status of the FinancialAccount becomes closed.
    properties:
      object:
        type: TreasuryFinancialAccount
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountCreated:
    docs: Occurs whenever a new FinancialAccount is created.
    properties:
      object:
        type: TreasuryFinancialAccount
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountFeatures:
    docs: >-
      Encodes whether a FinancialAccount has access to a particular Feature,
      with a `status` enum and associated `status_details`.

      Stripe or the platform can control Features via the requested field.
    properties:
      card_issuing:
        type: optional<TreasuryFinancialAccountsResourceToggleSettings>
      deposit_insurance:
        type: optional<TreasuryFinancialAccountsResourceToggleSettings>
      financial_addresses:
        type: optional<TreasuryFinancialAccountsResourceFinancialAddressesFeatures>
      inbound_transfers:
        type: optional<TreasuryFinancialAccountsResourceInboundTransfers>
      intra_stripe_flows:
        type: optional<TreasuryFinancialAccountsResourceToggleSettings>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.financial_account_features">
      outbound_payments:
        type: optional<TreasuryFinancialAccountsResourceOutboundPayments>
      outbound_transfers:
        type: optional<TreasuryFinancialAccountsResourceOutboundTransfers>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountFeaturesStatusUpdated:
    docs: >-
      Occurs whenever the statuses of any features within an existing
      FinancialAccount are updated.
    properties:
      object:
        type: TreasuryFinancialAccount
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountPendingFeaturesItem:
    enum:
      - card_issuing
      - deposit_insurance
      - name: FinancialAddressesAba
        value: financial_addresses.aba
      - name: FinancialAddressesAbaForwarding
        value: financial_addresses.aba.forwarding
      - name: InboundTransfersAch
        value: inbound_transfers.ach
      - intra_stripe_flows
      - name: OutboundPaymentsAch
        value: outbound_payments.ach
      - name: OutboundPaymentsUsDomesticWire
        value: outbound_payments.us_domestic_wire
      - name: OutboundTransfersAch
        value: outbound_transfers.ach
      - name: OutboundTransfersUsDomesticWire
        value: outbound_transfers.us_domestic_wire
      - remote_deposit_capture
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountRestrictedFeaturesItem:
    enum:
      - card_issuing
      - deposit_insurance
      - name: FinancialAddressesAba
        value: financial_addresses.aba
      - name: FinancialAddressesAbaForwarding
        value: financial_addresses.aba.forwarding
      - name: InboundTransfersAch
        value: inbound_transfers.ach
      - intra_stripe_flows
      - name: OutboundPaymentsAch
        value: outbound_payments.ach
      - name: OutboundPaymentsUsDomesticWire
        value: outbound_payments.us_domestic_wire
      - name: OutboundTransfersAch
        value: outbound_transfers.ach
      - name: OutboundTransfersUsDomesticWire
        value: outbound_transfers.us_domestic_wire
      - remote_deposit_capture
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceAbaRecord:
    docs: ABA Records contain U.S. bank account details per the ABA format.
    properties:
      account_holder_name:
        docs: The name of the person or business that owns the bank account.
        type: string
        validation:
          maxLength: 5000
      account_number:
        docs: The account number.
        type: optional<string>
        validation:
          maxLength: 5000
      account_number_last4:
        docs: The last four characters of the account number.
        type: string
        validation:
          maxLength: 5000
      bank_name:
        docs: Name of the bank.
        type: string
        validation:
          maxLength: 5000
      routing_number:
        docs: Routing number for the account.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceAbaToggleSettings:
    docs: Toggle settings for enabling/disabling the ABA address feature
    properties:
      requested:
        docs: Whether the FinancialAccount should have the Feature.
        type: boolean
      status:
        docs: Whether the Feature is operational.
        type: TreasuryFinancialAccountsResourceAbaToggleSettingsStatus
      status_details:
        docs: >-
          Additional details; includes at least one entry when the status is not
          `active`.
        type: list<TreasuryFinancialAccountsResourceTogglesSettingStatusDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceAbaToggleSettingsStatus:
    docs: Whether the Feature is operational.
    enum:
      - active
      - pending
      - restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceBalance:
    docs: Balance information for the FinancialAccount
    properties:
      cash:
        docs: Funds the user can spend right now.
        type: map<string, integer>
      inbound_pending:
        docs: Funds not spendable yet, but will become available at a later time.
        type: map<string, integer>
      outbound_pending:
        docs: >-
          Funds in the account, but not spendable because they are being held
          for pending outbound flows.
        type: map<string, integer>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceClosedStatusDetails:
    docs: ''
    properties:
      reasons:
        docs: The array that contains reasons for a FinancialAccount closure.
        type: list<TreasuryFinancialAccountsResourceClosedStatusDetailsReasonsItem>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceClosedStatusDetailsReasonsItem:
    enum:
      - account_rejected
      - closed_by_platform
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceFinancialAddress:
    docs: >-
      FinancialAddresses contain identifying information that resolves to a
      FinancialAccount.
    properties:
      aba:
        type: optional<TreasuryFinancialAccountsResourceAbaRecord>
      supported_networks:
        docs: The list of networks that the address supports
        type: >-
          optional<list<TreasuryFinancialAccountsResourceFinancialAddressSupportedNetworksItem>>
      type:
        docs: The type of financial address
        type: literal<"aba">
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceFinancialAddressesFeatures:
    docs: Settings related to Financial Addresses features on a Financial Account
    properties:
      aba:
        type: optional<TreasuryFinancialAccountsResourceAbaToggleSettings>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceFinancialAddressSupportedNetworksItem:
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceInboundAchToggleSettings:
    docs: Toggle settings for enabling/disabling an inbound ACH specific feature
    properties:
      requested:
        docs: Whether the FinancialAccount should have the Feature.
        type: boolean
      status:
        docs: Whether the Feature is operational.
        type: TreasuryFinancialAccountsResourceInboundAchToggleSettingsStatus
      status_details:
        docs: >-
          Additional details; includes at least one entry when the status is not
          `active`.
        type: list<TreasuryFinancialAccountsResourceTogglesSettingStatusDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceInboundAchToggleSettingsStatus:
    docs: Whether the Feature is operational.
    enum:
      - active
      - pending
      - restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceInboundTransfers:
    docs: >-
      InboundTransfers contains inbound transfers features for a
      FinancialAccount.
    properties:
      ach:
        type: optional<TreasuryFinancialAccountsResourceInboundAchToggleSettings>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceOutboundAchToggleSettings:
    docs: Toggle settings for enabling/disabling an outbound ACH specific feature
    properties:
      requested:
        docs: Whether the FinancialAccount should have the Feature.
        type: boolean
      status:
        docs: Whether the Feature is operational.
        type: TreasuryFinancialAccountsResourceOutboundAchToggleSettingsStatus
      status_details:
        docs: >-
          Additional details; includes at least one entry when the status is not
          `active`.
        type: list<TreasuryFinancialAccountsResourceTogglesSettingStatusDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceOutboundAchToggleSettingsStatus:
    docs: Whether the Feature is operational.
    enum:
      - active
      - pending
      - restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceOutboundPayments:
    docs: Settings related to Outbound Payments features on a Financial Account
    properties:
      ach:
        type: optional<TreasuryFinancialAccountsResourceOutboundAchToggleSettings>
      us_domestic_wire:
        type: optional<TreasuryFinancialAccountsResourceToggleSettings>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceOutboundTransfers:
    docs: >-
      OutboundTransfers contains outbound transfers features for a
      FinancialAccount.
    properties:
      ach:
        type: optional<TreasuryFinancialAccountsResourceOutboundAchToggleSettings>
      us_domestic_wire:
        type: optional<TreasuryFinancialAccountsResourceToggleSettings>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourcePlatformRestrictions:
    docs: Restrictions that a Connect Platform has placed on this FinancialAccount.
    properties:
      inbound_flows:
        docs: Restricts all inbound money movement.
        type: >-
          optional<TreasuryFinancialAccountsResourcePlatformRestrictionsInboundFlows>
      outbound_flows:
        docs: Restricts all outbound money movement.
        type: >-
          optional<TreasuryFinancialAccountsResourcePlatformRestrictionsOutboundFlows>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourcePlatformRestrictionsInboundFlows:
    docs: Restricts all inbound money movement.
    enum:
      - restricted
      - unrestricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourcePlatformRestrictionsOutboundFlows:
    docs: Restricts all outbound money movement.
    enum:
      - restricted
      - unrestricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceStatusDetails:
    docs: ''
    properties:
      closed:
        docs: Details related to the closure of this FinancialAccount
        type: optional<TreasuryFinancialAccountsResourceClosedStatusDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceToggleSettings:
    docs: Toggle settings for enabling/disabling a feature
    properties:
      requested:
        docs: Whether the FinancialAccount should have the Feature.
        type: boolean
      status:
        docs: Whether the Feature is operational.
        type: TreasuryFinancialAccountsResourceToggleSettingsStatus
      status_details:
        docs: >-
          Additional details; includes at least one entry when the status is not
          `active`.
        type: list<TreasuryFinancialAccountsResourceTogglesSettingStatusDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceToggleSettingsStatus:
    docs: Whether the Feature is operational.
    enum:
      - active
      - pending
      - restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceTogglesSettingStatusDetails:
    docs: Additional details on the FinancialAccount Features information.
    properties:
      code:
        docs: Represents the reason why the status is `pending` or `restricted`.
        type: TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsCode
      resolution:
        docs: >-
          Represents what the user should do, if anything, to activate the
          Feature.
        type: >-
          optional<TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsResolution>
      restriction:
        docs: The `platform_restrictions` that are restricting this Feature.
        type: >-
          optional<TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsRestriction>
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsCode:
    docs: Represents the reason why the status is `pending` or `restricted`.
    enum:
      - activating
      - capability_not_requested
      - financial_account_closed
      - rejected_other
      - rejected_unsupported_business
      - requirements_past_due
      - requirements_pending_verification
      - restricted_by_platform
      - restricted_other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsResolution:
    docs: Represents what the user should do, if anything, to activate the Feature.
    enum:
      - contact_stripe
      - provide_information
      - remove_restriction
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountsResourceTogglesSettingStatusDetailsRestriction:
    docs: The `platform_restrictions` that are restricting this Feature.
    enum:
      - inbound_flows
      - outbound_flows
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryFinancialAccountStatus:
    docs: Status of this FinancialAccount.
    enum:
      - closed
      - open
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransfer:
    docs: >-
      Use
      [InboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)
      to add funds to your
      [FinancialAccount](https://stripe.com/docs/api#financial_accounts) via a
      PaymentMethod that is owned by you. The funds will be transferred via an
      ACH debit.


      Related guide: [Moving money with Treasury using InboundTransfer
      objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/into/inbound-transfers)
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      cancelable:
        docs: Returns `true` if the InboundTransfer is able to be canceled.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      failure_details:
        docs: >-
          Details about this InboundTransfer's failure. Only set when status is
          `failed`.
        type: optional<TreasuryInboundTransfersResourceFailureDetails>
      financial_account:
        docs: The FinancialAccount that received the funds.
        type: string
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      linked_flows:
        type: TreasuryInboundTransfersResourceInboundTransferResourceLinkedFlows
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.inbound_transfer">
      origin_payment_method:
        docs: The origin payment method to be debited for an InboundTransfer.
        type: optional<string>
        validation:
          maxLength: 5000
      origin_payment_method_details:
        docs: Details about the PaymentMethod for an InboundTransfer.
        type: optional<InboundTransfers>
      returned:
        docs: >-
          Returns `true` if the funds for an InboundTransfer were returned after
          the InboundTransfer went to the `succeeded` state.
        type: optional<boolean>
      statement_descriptor:
        docs: >-
          Statement descriptor shown when funds are debited from the source. Not
          all payment networks support `statement_descriptor`.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          Status of the InboundTransfer: `processing`, `succeeded`, `failed`,
          and `canceled`. An InboundTransfer is `processing` if it is created
          and pending. The status changes to `succeeded` once the funds have
          been "confirmed" and a `transaction` is created and posted. The status
          changes to `failed` if the transfer fails.
        type: TreasuryInboundTransferStatus
      status_transitions:
        type: >-
          TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions
      transaction:
        docs: The Transaction associated with this object.
        type: optional<TreasuryInboundTransferTransaction>
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferCanceled:
    docs: Occurs whenever an InboundTransfer is canceled.
    properties:
      object:
        type: TreasuryInboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferCreated:
    docs: Occurs whenever an InboundTransfer is created.
    properties:
      object:
        type: TreasuryInboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferFailed:
    docs: Occurs whenever an InboundTransfer has failed.
    properties:
      object:
        type: TreasuryInboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransfersResourceFailureDetails:
    docs: ''
    properties:
      code:
        docs: Reason for the failure.
        type: TreasuryInboundTransfersResourceFailureDetailsCode
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransfersResourceFailureDetailsCode:
    docs: Reason for the failure.
    enum:
      - account_closed
      - account_frozen
      - bank_account_restricted
      - bank_ownership_changed
      - debit_not_authorized
      - incorrect_account_holder_address
      - incorrect_account_holder_name
      - incorrect_account_holder_tax_id
      - insufficient_funds
      - invalid_account_number
      - invalid_currency
      - no_account
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransfersResourceInboundTransferResourceLinkedFlows:
    docs: ''
    properties:
      received_debit:
        docs: >-
          If funds for this flow were returned after the flow went to the
          `succeeded` state, this field contains a reference to the
          ReceivedDebit return.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransfersResourceInboundTransferResourceStatusTransitions:
    docs: ''
    properties:
      canceled_at:
        docs: >-
          Timestamp describing when an InboundTransfer changed status to
          `canceled`.
        type: optional<integer>
      failed_at:
        docs: >-
          Timestamp describing when an InboundTransfer changed status to
          `failed`.
        type: optional<integer>
      succeeded_at:
        docs: >-
          Timestamp describing when an InboundTransfer changed status to
          `succeeded`.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferStatus:
    docs: >-
      Status of the InboundTransfer: `processing`, `succeeded`, `failed`, and
      `canceled`. An InboundTransfer is `processing` if it is created and
      pending. The status changes to `succeeded` once the funds have been
      "confirmed" and a `transaction` is created and posted. The status changes
      to `failed` if the transfer fails.
    enum:
      - canceled
      - failed
      - processing
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferSucceeded:
    docs: Occurs whenever an InboundTransfer has succeeded.
    properties:
      object:
        type: TreasuryInboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryInboundTransferTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryOutboundPayment:
    docs: >-
      Use
      [OutboundPayments](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)
      to send funds to another party's external bank account or
      [FinancialAccount](https://stripe.com/docs/api#financial_accounts). To
      send money to an account belonging to the same user, use an
      [OutboundTransfer](https://stripe.com/docs/api#outbound_transfers).


      Simulate OutboundPayment state changes with the
      `/v1/test_helpers/treasury/outbound_payments` endpoints. These methods can
      only be called on test mode objects.


      Related guide: [Moving money with Treasury using OutboundPayment
      objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-payments)
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      cancelable:
        docs: Returns `true` if the object can be canceled, and `false` otherwise.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      customer:
        docs: >-
          ID of the [customer](https://stripe.com/docs/api/customers) to whom an
          OutboundPayment is sent.
        type: optional<string>
        validation:
          maxLength: 5000
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      destination_payment_method:
        docs: >-
          The PaymentMethod via which an OutboundPayment is sent. This field can
          be empty if the OutboundPayment was created using
          `destination_payment_method_data`.
        type: optional<string>
        validation:
          maxLength: 5000
      destination_payment_method_details:
        docs: Details about the PaymentMethod for an OutboundPayment.
        type: optional<OutboundPaymentsPaymentMethodDetails>
      end_user_details:
        docs: Details about the end user.
        type: >-
          optional<TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails>
      expected_arrival_date:
        docs: The date when funds are expected to arrive in the destination account.
        type: integer
      financial_account:
        docs: The FinancialAccount that funds were pulled from.
        type: string
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.outbound_payment">
      returned_details:
        docs: >-
          Details about a returned OutboundPayment. Only set when the status is
          `returned`.
        type: optional<TreasuryOutboundPaymentsResourceReturnedStatus>
      statement_descriptor:
        docs: >-
          The description that appears on the receiving end for an
          OutboundPayment (for example, bank statement for external bank
          transfer).
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          Current status of the OutboundPayment: `processing`, `failed`,
          `posted`, `returned`, `canceled`. An OutboundPayment is `processing`
          if it has been created and is pending. The status changes to `posted`
          once the OutboundPayment has been "confirmed" and funds have left the
          account, or to `failed` or `canceled`. If an OutboundPayment fails to
          arrive at its destination, its status will change to `returned`.
        type: TreasuryOutboundPaymentStatus
      status_transitions:
        type: >-
          TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions
      tracking_details:
        docs: Details about network-specific tracking information if available.
        type: >-
          optional<TreasuryOutboundPaymentsResourceOutboundPaymentResourceTrackingDetails>
      transaction:
        docs: The Transaction associated with this object.
        type: TreasuryOutboundPaymentTransaction
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentCanceled:
    docs: Occurs whenever an OutboundPayment is canceled.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentCreated:
    docs: Occurs whenever a new OutboundPayment is successfully created.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentExpectedArrivalDateUpdated:
    docs: Occurs whenever the arrival date on an OutboundPayment updates.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentFailed:
    docs: Occurs whenever an OutboundPayment fails.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentPosted:
    docs: Occurs whenever an OutboundPayment posts.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentReturned:
    docs: Occurs whenever an OutboundPayment was returned.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceAchTrackingDetails:
    docs: ''
    properties:
      trace_id:
        docs: >-
          ACH trace ID of the OutboundPayment for payments sent over the `ach`
          network.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceEndUserDetails:
    docs: ''
    properties:
      ip_address:
        docs: >-
          IP address of the user initiating the OutboundPayment. Set if
          `present` is set to `true`. IP address collection is required for risk
          and compliance reasons. This will be used to help determine if the
          OutboundPayment is authorized or should be blocked.
        type: optional<string>
        validation:
          maxLength: 5000
      present:
        docs: >-
          `true` if the OutboundPayment creation request is being made on behalf
          of an end user by a platform. Otherwise, `false`.
        type: boolean
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceStatusTransitions:
    docs: ''
    properties:
      canceled_at:
        docs: >-
          Timestamp describing when an OutboundPayment changed status to
          `canceled`.
        type: optional<integer>
      failed_at:
        docs: >-
          Timestamp describing when an OutboundPayment changed status to
          `failed`.
        type: optional<integer>
      posted_at:
        docs: >-
          Timestamp describing when an OutboundPayment changed status to
          `posted`.
        type: optional<integer>
      returned_at:
        docs: >-
          Timestamp describing when an OutboundPayment changed status to
          `returned`.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceTrackingDetails:
    docs: ''
    properties:
      ach:
        type: optional<TreasuryOutboundPaymentsResourceAchTrackingDetails>
      type:
        docs: The US bank account network used to send funds.
        type: >-
          TreasuryOutboundPaymentsResourceOutboundPaymentResourceTrackingDetailsType
      us_domestic_wire:
        type: >-
          optional<TreasuryOutboundPaymentsResourceUsDomesticWireTrackingDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceOutboundPaymentResourceTrackingDetailsType:
    docs: The US bank account network used to send funds.
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceReturnedStatus:
    docs: ''
    properties:
      code:
        docs: Reason for the return.
        type: TreasuryOutboundPaymentsResourceReturnedStatusCode
      transaction:
        docs: The Transaction associated with this object.
        type: TreasuryOutboundPaymentsResourceReturnedStatusTransaction
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceReturnedStatusCode:
    docs: Reason for the return.
    enum:
      - account_closed
      - account_frozen
      - bank_account_restricted
      - bank_ownership_changed
      - declined
      - incorrect_account_holder_name
      - invalid_account_number
      - invalid_currency
      - no_account
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentsResourceReturnedStatusTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryOutboundPaymentsResourceUsDomesticWireTrackingDetails:
    docs: ''
    properties:
      chips:
        docs: >-
          CHIPS System Sequence Number (SSN) of the OutboundPayment for payments
          sent over the `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
      imad:
        docs: >-
          IMAD of the OutboundPayment for payments sent over the
          `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
      omad:
        docs: >-
          OMAD of the OutboundPayment for payments sent over the
          `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentStatus:
    docs: >-
      Current status of the OutboundPayment: `processing`, `failed`, `posted`,
      `returned`, `canceled`. An OutboundPayment is `processing` if it has been
      created and is pending. The status changes to `posted` once the
      OutboundPayment has been "confirmed" and funds have left the account, or
      to `failed` or `canceled`. If an OutboundPayment fails to arrive at its
      destination, its status will change to `returned`.
    enum:
      - canceled
      - failed
      - posted
      - processing
      - returned
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentTrackingDetailsUpdated:
    docs: Occurs whenever tracking_details on an OutboundPayment is updated.
    properties:
      object:
        type: TreasuryOutboundPayment
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundPaymentTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryOutboundTransfer:
    docs: >-
      Use
      [OutboundTransfers](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)
      to transfer funds from a
      [FinancialAccount](https://stripe.com/docs/api#financial_accounts) to a
      PaymentMethod belonging to the same entity. To send funds to a different
      party, use
      [OutboundPayments](https://stripe.com/docs/api#outbound_payments) instead.
      You can send funds over ACH rails or through a domestic wire transfer to a
      user's own external bank account.


      Simulate OutboundTransfer state changes with the
      `/v1/test_helpers/treasury/outbound_transfers` endpoints. These methods
      can only be called on test mode objects.


      Related guide: [Moving money with Treasury using OutboundTransfer
      objects](https://docs.stripe.com/docs/treasury/moving-money/financial-accounts/out-of/outbound-transfers)
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      cancelable:
        docs: Returns `true` if the object can be canceled, and `false` otherwise.
        type: boolean
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: optional<string>
        validation:
          maxLength: 5000
      destination_payment_method:
        docs: >-
          The PaymentMethod used as the payment instrument for an
          OutboundTransfer.
        type: optional<string>
        validation:
          maxLength: 5000
      destination_payment_method_details:
        type: OutboundTransfersPaymentMethodDetails
      expected_arrival_date:
        docs: The date when funds are expected to arrive in the destination account.
        type: integer
      financial_account:
        docs: The FinancialAccount that funds were pulled from.
        type: string
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.outbound_transfer">
      returned_details:
        docs: >-
          Details about a returned OutboundTransfer. Only set when the status is
          `returned`.
        type: optional<TreasuryOutboundTransfersResourceReturnedDetails>
      statement_descriptor:
        docs: >-
          Information about the OutboundTransfer to be sent to the recipient
          account.
        type: string
        validation:
          maxLength: 5000
      status:
        docs: >-
          Current status of the OutboundTransfer: `processing`, `failed`,
          `canceled`, `posted`, `returned`. An OutboundTransfer is `processing`
          if it has been created and is pending. The status changes to `posted`
          once the OutboundTransfer has been "confirmed" and funds have left the
          account, or to `failed` or `canceled`. If an OutboundTransfer fails to
          arrive at its destination, its status will change to `returned`.
        type: TreasuryOutboundTransferStatus
      status_transitions:
        type: TreasuryOutboundTransfersResourceStatusTransitions
      tracking_details:
        docs: Details about network-specific tracking information if available.
        type: >-
          optional<TreasuryOutboundTransfersResourceOutboundTransferResourceTrackingDetails>
      transaction:
        docs: The Transaction associated with this object.
        type: TreasuryOutboundTransferTransaction
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferCanceled:
    docs: Occurs whenever an OutboundTransfer is canceled.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferCreated:
    docs: Occurs whenever an OutboundTransfer is created.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferExpectedArrivalDateUpdated:
    docs: Occurs whenever the arrival date on an OutboundTransfer updates.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferFailed:
    docs: Occurs whenever an OutboundTransfer has failed.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferPosted:
    docs: Occurs whenever an OutboundTransfer is posted.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferReturned:
    docs: Occurs whenever an OutboundTransfer is returned.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceAchTrackingDetails:
    docs: ''
    properties:
      trace_id:
        docs: >-
          ACH trace ID of the OutboundTransfer for transfers sent over the `ach`
          network.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceOutboundTransferResourceTrackingDetails:
    docs: ''
    properties:
      ach:
        type: optional<TreasuryOutboundTransfersResourceAchTrackingDetails>
      type:
        docs: The US bank account network used to send funds.
        type: >-
          TreasuryOutboundTransfersResourceOutboundTransferResourceTrackingDetailsType
      us_domestic_wire:
        type: >-
          optional<TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails>
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceOutboundTransferResourceTrackingDetailsType:
    docs: The US bank account network used to send funds.
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceReturnedDetails:
    docs: ''
    properties:
      code:
        docs: Reason for the return.
        type: TreasuryOutboundTransfersResourceReturnedDetailsCode
      transaction:
        docs: The Transaction associated with this object.
        type: TreasuryOutboundTransfersResourceReturnedDetailsTransaction
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceReturnedDetailsCode:
    docs: Reason for the return.
    enum:
      - account_closed
      - account_frozen
      - bank_account_restricted
      - bank_ownership_changed
      - declined
      - incorrect_account_holder_name
      - invalid_account_number
      - invalid_currency
      - no_account
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceReturnedDetailsTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryOutboundTransfersResourceStatusTransitions:
    docs: ''
    properties:
      canceled_at:
        docs: >-
          Timestamp describing when an OutboundTransfer changed status to
          `canceled`
        type: optional<integer>
      failed_at:
        docs: >-
          Timestamp describing when an OutboundTransfer changed status to
          `failed`
        type: optional<integer>
      posted_at:
        docs: >-
          Timestamp describing when an OutboundTransfer changed status to
          `posted`
        type: optional<integer>
      returned_at:
        docs: >-
          Timestamp describing when an OutboundTransfer changed status to
          `returned`
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransfersResourceUsDomesticWireTrackingDetails:
    docs: ''
    properties:
      chips:
        docs: >-
          CHIPS System Sequence Number (SSN) of the OutboundTransfer for
          transfers sent over the `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
      imad:
        docs: >-
          IMAD of the OutboundTransfer for transfers sent over the
          `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
      omad:
        docs: >-
          OMAD of the OutboundTransfer for transfers sent over the
          `us_domestic_wire` network.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferStatus:
    docs: >-
      Current status of the OutboundTransfer: `processing`, `failed`,
      `canceled`, `posted`, `returned`. An OutboundTransfer is `processing` if
      it has been created and is pending. The status changes to `posted` once
      the OutboundTransfer has been "confirmed" and funds have left the account,
      or to `failed` or `canceled`. If an OutboundTransfer fails to arrive at
      its destination, its status will change to `returned`.
    enum:
      - canceled
      - failed
      - posted
      - processing
      - returned
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferTrackingDetailsUpdated:
    docs: Occurs whenever tracking_details on an OutboundTransfer is updated.
    properties:
      object:
        type: TreasuryOutboundTransfer
    source:
      openapi: ../openapi.yaml
  TreasuryOutboundTransferTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryReceivedCredit:
    docs: >-
      ReceivedCredits represent funds sent to a
      [FinancialAccount](https://stripe.com/docs/api#financial_accounts) (for
      example, via ACH or wire). These money movements are not initiated from
      the FinancialAccount.
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
        validation:
          maxLength: 5000
      failure_code:
        docs: >-
          Reason for the failure. A ReceivedCredit might fail because the
          receiving FinancialAccount is closed or frozen.
        type: optional<TreasuryReceivedCreditFailureCode>
      financial_account:
        docs: The FinancialAccount that received the funds.
        type: optional<string>
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      initiating_payment_method_details:
        type: >-
          TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails
      linked_flows:
        type: TreasuryReceivedCreditsResourceLinkedFlows
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      network:
        docs: The rails used to send the funds.
        type: TreasuryReceivedCreditNetwork
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.received_credit">
      reversal_details:
        docs: Details describing when a ReceivedCredit may be reversed.
        type: optional<TreasuryReceivedCreditsResourceReversalDetails>
      status:
        docs: >-
          Status of the ReceivedCredit. ReceivedCredits are created either
          `succeeded` (approved) or `failed` (declined). If a ReceivedCredit is
          declined, the failure reason can be found in the `failure_code` field.
        type: TreasuryReceivedCreditStatus
      transaction:
        docs: The Transaction associated with this object.
        type: optional<TreasuryReceivedCreditTransaction>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditCreated:
    docs: >-
      Occurs whenever a received_credit is created as a result of funds being
      pushed by another account.
    properties:
      object:
        type: TreasuryReceivedCredit
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditFailed:
    docs: >-
      Occurs whenever a received_credit transitions to failed state. Only
      applicable for check deposits.
    properties:
      object:
        type: TreasuryReceivedCredit
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditFailureCode:
    docs: >-
      Reason for the failure. A ReceivedCredit might fail because the receiving
      FinancialAccount is closed or frozen.
    enum:
      - account_closed
      - account_frozen
      - international_transaction
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditNetwork:
    docs: The rails used to send the funds.
    enum:
      - ach
      - card
      - stripe
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceLinkedFlows:
    docs: ''
    properties:
      credit_reversal:
        docs: >-
          The CreditReversal created as a result of this ReceivedCredit being
          reversed.
        type: optional<string>
        validation:
          maxLength: 5000
      issuing_authorization:
        docs: >-
          Set if the ReceivedCredit was created due to an [Issuing
          Authorization](https://stripe.com/docs/api#issuing_authorizations)
          object.
        type: optional<string>
        validation:
          maxLength: 5000
      issuing_transaction:
        docs: >-
          Set if the ReceivedCredit is also viewable as an [Issuing
          transaction](https://stripe.com/docs/api#issuing_transactions) object.
        type: optional<string>
        validation:
          maxLength: 5000
      source_flow:
        docs: >-
          ID of the source flow. Set if `network` is `stripe` and the source
          flow is visible to the user. Examples of source flows include
          OutboundPayments, payouts, or CreditReversals.
        type: optional<string>
        validation:
          maxLength: 5000
      source_flow_details:
        docs: The expandable object of the source flow.
        type: optional<TreasuryReceivedCreditsResourceSourceFlowsDetails>
      source_flow_type:
        docs: >-
          The type of flow that originated the ReceivedCredit (for example,
          `outbound_payment`).
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceReversalDetails:
    docs: ''
    properties:
      deadline:
        docs: Time before which a ReceivedCredit can be reversed.
        type: optional<integer>
      restricted_reason:
        docs: Set if a ReceivedCredit cannot be reversed.
        type: >-
          optional<TreasuryReceivedCreditsResourceReversalDetailsRestrictedReason>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceReversalDetailsRestrictedReason:
    docs: Set if a ReceivedCredit cannot be reversed.
    enum:
      - already_reversed
      - deadline_passed
      - network_restricted
      - other
      - source_flow_restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceSourceFlowsDetails:
    docs: ''
    properties:
      credit_reversal:
        type: optional<TreasuryCreditReversal>
      outbound_payment:
        type: optional<TreasuryOutboundPayment>
      outbound_transfer:
        type: optional<TreasuryOutboundTransfer>
      payout:
        type: optional<Payout>
      type:
        docs: The type of the source flow that originated the ReceivedCredit.
        type: TreasuryReceivedCreditsResourceSourceFlowsDetailsType
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceSourceFlowsDetailsType:
    docs: The type of the source flow that originated the ReceivedCredit.
    enum:
      - credit_reversal
      - other
      - outbound_payment
      - outbound_transfer
      - payout
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditsResourceStatusTransitions:
    docs: ''
    properties:
      posted_at:
        docs: >-
          Timestamp describing when the CreditReversal changed status to
          `posted`
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditStatus:
    docs: >-
      Status of the ReceivedCredit. ReceivedCredits are created either
      `succeeded` (approved) or `failed` (declined). If a ReceivedCredit is
      declined, the failure reason can be found in the `failure_code` field.
    enum:
      - failed
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditSucceeded:
    docs: >-
      Occurs whenever a received_credit transitions to succeeded state. Only
      applicable for check deposits.
    properties:
      object:
        type: TreasuryReceivedCredit
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedCreditTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryReceivedDebit:
    docs: >-
      ReceivedDebits represent funds pulled from a
      [FinancialAccount](https://stripe.com/docs/api#financial_accounts). These
      are not initiated from the FinancialAccount.
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
        validation:
          maxLength: 5000
      failure_code:
        docs: >-
          Reason for the failure. A ReceivedDebit might fail because the
          FinancialAccount doesn't have sufficient funds, is closed, or is
          frozen.
        type: optional<TreasuryReceivedDebitFailureCode>
      financial_account:
        docs: The FinancialAccount that funds were pulled from.
        type: optional<string>
        validation:
          maxLength: 5000
      hosted_regulatory_receipt_url:
        docs: >-
          A [hosted transaction
          receipt](https://stripe.com/docs/treasury/moving-money/regulatory-receipts)
          URL that is provided when money movement is considered regulated under
          Stripe's money transmission licenses.
        type: optional<string>
        validation:
          maxLength: 5000
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      initiating_payment_method_details:
        type: >-
          optional<TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails>
      linked_flows:
        type: TreasuryReceivedDebitsResourceLinkedFlows
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      network:
        docs: The network used for the ReceivedDebit.
        type: TreasuryReceivedDebitNetwork
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.received_debit">
      reversal_details:
        docs: Details describing when a ReceivedDebit might be reversed.
        type: optional<TreasuryReceivedDebitsResourceReversalDetails>
      status:
        docs: >-
          Status of the ReceivedDebit. ReceivedDebits are created with a status
          of either `succeeded` (approved) or `failed` (declined). The failure
          reason can be found under the `failure_code`.
        type: TreasuryReceivedDebitStatus
      transaction:
        docs: The Transaction associated with this object.
        type: optional<TreasuryReceivedDebitTransaction>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitCreated:
    docs: >-
      Occurs whenever a received_debit is created as a result of funds being
      pulled by another account.
    properties:
      object:
        type: TreasuryReceivedDebit
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitFailureCode:
    docs: >-
      Reason for the failure. A ReceivedDebit might fail because the
      FinancialAccount doesn't have sufficient funds, is closed, or is frozen.
    enum:
      - account_closed
      - account_frozen
      - insufficient_funds
      - international_transaction
      - other
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitNetwork:
    docs: The network used for the ReceivedDebit.
    enum:
      - ach
      - card
      - stripe
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitsResourceDebitReversalLinkedFlows:
    docs: ''
    properties:
      issuing_dispute:
        docs: Set if there is an Issuing dispute associated with the DebitReversal.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitsResourceLinkedFlows:
    docs: ''
    properties:
      debit_reversal:
        docs: >-
          The DebitReversal created as a result of this ReceivedDebit being
          reversed.
        type: optional<string>
        validation:
          maxLength: 5000
      inbound_transfer:
        docs: >-
          Set if the ReceivedDebit is associated with an InboundTransfer's
          return of funds.
        type: optional<string>
        validation:
          maxLength: 5000
      issuing_authorization:
        docs: >-
          Set if the ReceivedDebit was created due to an [Issuing
          Authorization](https://stripe.com/docs/api#issuing_authorizations)
          object.
        type: optional<string>
        validation:
          maxLength: 5000
      issuing_transaction:
        docs: >-
          Set if the ReceivedDebit is also viewable as an [Issuing
          Dispute](https://stripe.com/docs/api#issuing_disputes) object.
        type: optional<string>
        validation:
          maxLength: 5000
      payout:
        docs: >-
          Set if the ReceivedDebit was created due to a
          [Payout](https://stripe.com/docs/api#payouts) object.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitsResourceReversalDetails:
    docs: ''
    properties:
      deadline:
        docs: Time before which a ReceivedDebit can be reversed.
        type: optional<integer>
      restricted_reason:
        docs: Set if a ReceivedDebit can't be reversed.
        type: >-
          optional<TreasuryReceivedDebitsResourceReversalDetailsRestrictedReason>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitsResourceReversalDetailsRestrictedReason:
    docs: Set if a ReceivedDebit can't be reversed.
    enum:
      - already_reversed
      - deadline_passed
      - network_restricted
      - other
      - source_flow_restricted
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitsResourceStatusTransitions:
    docs: ''
    properties:
      completed_at:
        docs: >-
          Timestamp describing when the DebitReversal changed status to
          `completed`.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitStatus:
    docs: >-
      Status of the ReceivedDebit. ReceivedDebits are created with a status of
      either `succeeded` (approved) or `failed` (declined). The failure reason
      can be found under the `failure_code`.
    enum:
      - failed
      - succeeded
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryReceivedDebitTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasurySharedResourceBillingDetails:
    docs: ''
    properties:
      address:
        type: Address
      email:
        docs: Email address.
        type: optional<string>
        validation:
          maxLength: 5000
      name:
        docs: Full name.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetails:
    docs: ''
    properties:
      balance:
        docs: Set when `type` is `balance`.
        type: optional<literal<"payments">>
      billing_details:
        type: TreasurySharedResourceBillingDetails
      financial_account:
        type: optional<ReceivedPaymentMethodDetailsFinancialAccount>
      issuing_card:
        docs: >-
          Set when `type` is `issuing_card`. This is an [Issuing
          Card](https://stripe.com/docs/api#issuing_cards) ID.
        type: optional<string>
        validation:
          maxLength: 5000
      type:
        docs: >-
          Polymorphic type matching the originating money movement's source.
          This can be an external account, a Stripe balance, or a
          FinancialAccount.
        type: >-
          TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetailsType
      us_bank_account:
        type: >-
          optional<TreasurySharedResourceInitiatingPaymentMethodDetailsUsBankAccount>
    source:
      openapi: ../openapi.yaml
  TreasurySharedResourceInitiatingPaymentMethodDetailsInitiatingPaymentMethodDetailsType:
    docs: >-
      Polymorphic type matching the originating money movement's source. This
      can be an external account, a Stripe balance, or a FinancialAccount.
    enum:
      - balance
      - financial_account
      - issuing_card
      - stripe
      - us_bank_account
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasurySharedResourceInitiatingPaymentMethodDetailsUsBankAccount:
    docs: ''
    properties:
      bank_name:
        docs: Bank name.
        type: optional<string>
        validation:
          maxLength: 5000
      last4:
        docs: The last four digits of the bank account number.
        type: optional<string>
        validation:
          maxLength: 5000
      routing_number:
        docs: The routing number for the bank account.
        type: optional<string>
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
  TreasuryTransaction:
    docs: >-
      Transactions represent changes to a
      [FinancialAccount's](https://stripe.com/docs/api#financial_accounts)
      balance.
    properties:
      amount:
        docs: Amount (in cents) transferred.
        type: integer
      balance_impact:
        type: TreasuryTransactionsResourceBalanceImpact
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      description:
        docs: >-
          An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
        validation:
          maxLength: 5000
      entries:
        docs: >-
          A list of TransactionEntries that are part of this Transaction. This
          cannot be expanded in any list endpoints.
        type: optional<TreasuryTransactionEntries>
      financial_account:
        docs: The FinancialAccount associated with this object.
        type: string
        validation:
          maxLength: 5000
      flow:
        docs: ID of the flow that created the Transaction.
        type: optional<string>
        validation:
          maxLength: 5000
      flow_details:
        docs: Details of the flow that created the Transaction.
        type: optional<TreasuryTransactionsResourceFlowDetails>
      flow_type:
        docs: Type of the flow that created the Transaction.
        type: TreasuryTransactionFlowType
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.transaction">
      status:
        docs: Status of the Transaction.
        type: TreasuryTransactionStatus
      status_transitions:
        type: >-
          TreasuryTransactionsResourceAbstractTransactionResourceStatusTransitions
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionEntries:
    docs: >-
      A list of TransactionEntries that are part of this Transaction. This
      cannot be expanded in any list endpoints.
    inline: true
    properties:
      data:
        docs: Details about each object.
        type: list<TreasuryTransactionEntry>
      has_more:
        docs: >-
          True if this list has another page of items after this one that can be
          fetched.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value. Always has the value `list`.
        type: literal<"list">
      url:
        docs: The URL where this list can be accessed.
        type: string
        validation:
          maxLength: 5000
          pattern: ^/v1/treasury/transaction_entries
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionEntry:
    docs: >-
      TransactionEntries represent individual units of money movements within a
      single [Transaction](https://stripe.com/docs/api#transactions).
    properties:
      balance_impact:
        type: TreasuryTransactionsResourceBalanceImpact
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      currency:
        docs: >-
          Three-letter [ISO currency
          code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase.
          Must be a [supported currency](https://stripe.com/docs/currencies).
        type: string
      effective_at:
        docs: When the TransactionEntry will impact the FinancialAccount's balance.
        type: integer
      financial_account:
        docs: The FinancialAccount associated with this object.
        type: string
        validation:
          maxLength: 5000
      flow:
        docs: Token of the flow associated with the TransactionEntry.
        type: optional<string>
        validation:
          maxLength: 5000
      flow_details:
        docs: Details of the flow associated with the TransactionEntry.
        type: optional<TreasuryTransactionsResourceFlowDetails>
      flow_type:
        docs: Type of the flow associated with the TransactionEntry.
        type: TreasuryTransactionEntryFlowType
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"treasury.transaction_entry">
      transaction:
        docs: The Transaction associated with this object.
        type: TreasuryTransactionEntryTransaction
      type:
        docs: The specific money movement that generated the TransactionEntry.
        type: TreasuryTransactionEntryType
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionEntryFlowType:
    docs: Type of the flow associated with the TransactionEntry.
    enum:
      - credit_reversal
      - debit_reversal
      - inbound_transfer
      - issuing_authorization
      - other
      - outbound_payment
      - outbound_transfer
      - received_credit
      - received_debit
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionEntryTransaction:
    discriminated: false
    docs: The Transaction associated with this object.
    inline: true
    source:
      openapi: ../openapi.yaml
    union:
      - type: string
        validation:
          maxLength: 5000
      - type: TreasuryTransaction
  TreasuryTransactionEntryType:
    docs: The specific money movement that generated the TransactionEntry.
    enum:
      - credit_reversal
      - credit_reversal_posting
      - debit_reversal
      - inbound_transfer
      - inbound_transfer_return
      - issuing_authorization_hold
      - issuing_authorization_release
      - other
      - outbound_payment
      - outbound_payment_cancellation
      - outbound_payment_failure
      - outbound_payment_posting
      - outbound_payment_return
      - outbound_transfer
      - outbound_transfer_cancellation
      - outbound_transfer_failure
      - outbound_transfer_posting
      - outbound_transfer_return
      - received_credit
      - received_debit
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionFlowType:
    docs: Type of the flow that created the Transaction.
    enum:
      - credit_reversal
      - debit_reversal
      - inbound_transfer
      - issuing_authorization
      - other
      - outbound_payment
      - outbound_transfer
      - received_credit
      - received_debit
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionsResourceAbstractTransactionResourceStatusTransitions:
    docs: ''
    properties:
      posted_at:
        docs: Timestamp describing when the Transaction changed status to `posted`.
        type: optional<integer>
      void_at:
        docs: Timestamp describing when the Transaction changed status to `void`.
        type: optional<integer>
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionsResourceBalanceImpact:
    docs: Change to a FinancialAccount's balance
    properties:
      cash:
        docs: The change made to funds the user can spend right now.
        type: integer
      inbound_pending:
        docs: >-
          The change made to funds that are not spendable yet, but will become
          available at a later time.
        type: integer
      outbound_pending:
        docs: >-
          The change made to funds in the account, but not spendable because
          they are being held for pending outbound flows.
        type: integer
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionsResourceFlowDetails:
    docs: ''
    properties:
      credit_reversal:
        type: optional<TreasuryCreditReversal>
      debit_reversal:
        type: optional<TreasuryDebitReversal>
      inbound_transfer:
        type: optional<TreasuryInboundTransfer>
      issuing_authorization:
        type: optional<IssuingAuthorization>
      outbound_payment:
        type: optional<TreasuryOutboundPayment>
      outbound_transfer:
        type: optional<TreasuryOutboundTransfer>
      received_credit:
        type: optional<TreasuryReceivedCredit>
      received_debit:
        type: optional<TreasuryReceivedDebit>
      type:
        docs: >-
          Type of the flow that created the Transaction. Set to the same value
          as `flow_type`.
        type: TreasuryTransactionsResourceFlowDetailsType
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionsResourceFlowDetailsType:
    docs: >-
      Type of the flow that created the Transaction. Set to the same value as
      `flow_type`.
    enum:
      - credit_reversal
      - debit_reversal
      - inbound_transfer
      - issuing_authorization
      - other
      - outbound_payment
      - outbound_transfer
      - received_credit
      - received_debit
    inline: true
    source:
      openapi: ../openapi.yaml
  TreasuryTransactionStatus:
    docs: Status of the Transaction.
    enum:
      - open
      - posted
      - void
    inline: true
    source:
      openapi: ../openapi.yaml
  UsageRecord:
    docs: >-
      Usage records allow you to report customer usage and metrics to Stripe for

      metered billing of subscription prices.


      Related guide: [Metered
      billing](https://stripe.com/docs/billing/subscriptions/metered-billing)


      This is our legacy usage-based billing API. See the [updated usage-based
      billing docs](https://docs.stripe.com/billing/subscriptions/usage-based).
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"usage_record">
      quantity:
        docs: The usage quantity for the specified date.
        type: integer
      subscription_item:
        docs: The ID of the subscription item this usage record contains data for.
        type: string
        validation:
          maxLength: 5000
      timestamp:
        docs: The timestamp when this usage occurred.
        type: integer
    source:
      openapi: ../openapi.yaml
  UsageRecordSummary:
    docs: >-
      A usage record summary represents an aggregated view of how much usage was
      accrued for a subscription item within a subscription billing period.
    properties:
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      invoice:
        docs: The invoice in which this usage period has been billed for.
        type: optional<string>
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"usage_record_summary">
      period:
        type: Period
      subscription_item:
        docs: The ID of the subscription item this summary is describing.
        type: string
        validation:
          maxLength: 5000
      total_usage:
        docs: The total usage within this usage period.
        type: integer
    source:
      openapi: ../openapi.yaml
  UsBankAccountNetworks:
    docs: ''
    properties:
      preferred:
        docs: The preferred network.
        type: optional<string>
        validation:
          maxLength: 5000
      supported:
        docs: All supported networks.
        type: list<UsBankAccountNetworksSupportedItem>
    source:
      openapi: ../openapi.yaml
  UsBankAccountNetworksSupportedItem:
    enum:
      - ach
      - us_domestic_wire
    inline: true
    source:
      openapi: ../openapi.yaml
  VerificationSessionRedaction:
    docs: ''
    properties:
      status:
        docs: >-
          Indicates whether this object and its related objects have been
          redacted or not.
        type: VerificationSessionRedactionStatus
    source:
      openapi: ../openapi.yaml
  VerificationSessionRedactionStatus:
    docs: >-
      Indicates whether this object and its related objects have been redacted
      or not.
    enum:
      - processing
      - redacted
    inline: true
    source:
      openapi: ../openapi.yaml
  WebhookEndpoint:
    docs: >-
      You can configure [webhook endpoints](https://docs.stripe.com/webhooks/)
      via the API to be

      notified about events that happen in your Stripe account or connected

      accounts.


      Most users configure webhooks from [the
      dashboard](https://dashboard.stripe.com/webhooks), which provides a user
      interface for registering and testing your webhook endpoints.


      Related guide: [Setting up
      webhooks](https://docs.stripe.com/webhooks/configure)
    properties:
      api_version:
        docs: The API version events are rendered as for this webhook endpoint.
        type: optional<string>
        validation:
          maxLength: 5000
      application:
        docs: The ID of the associated Connect application.
        type: optional<string>
        validation:
          maxLength: 5000
      created:
        docs: >-
          Time at which the object was created. Measured in seconds since the
          Unix epoch.
        type: integer
      description:
        docs: An optional description of what the webhook is used for.
        type: optional<string>
        validation:
          maxLength: 5000
      enabled_events:
        docs: >-
          The list of events to enable for this endpoint. `['*']` indicates that
          all events are enabled, except those that require explicit selection.
        type: list<string>
      id:
        docs: Unique identifier for the object.
        type: string
        validation:
          maxLength: 5000
      livemode:
        docs: >-
          Has the value `true` if the object exists in live mode or the value
          `false` if the object exists in test mode.
        type: boolean
      metadata:
        docs: >-
          Set of [key-value pairs](https://stripe.com/docs/api/metadata) that
          you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: map<string, string>
      object:
        docs: >-
          String representing the object's type. Objects of the same type share
          the same value.
        type: literal<"webhook_endpoint">
      secret:
        docs: >-
          The endpoint's secret, used to generate [webhook
          signatures](https://docs.stripe.com/webhooks/signatures). Only
          returned at creation.
        type: optional<string>
        validation:
          maxLength: 5000
      status:
        docs: The status of the webhook. It can be `enabled` or `disabled`.
        type: string
        validation:
          maxLength: 5000
      url:
        docs: The URL of the webhook endpoint.
        type: string
        validation:
          maxLength: 5000
    source:
      openapi: ../openapi.yaml
service:
  auth: false
  base-path: ''
  endpoints:
    DeleteTaxIdsId:
      auth: true
      display-name: Delete a tax ID
      docs: >-
        <p>Deletes an existing account or customer <code>tax_id</code>
        object.</p>
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              deleted: true
              id: id
              object: tax_id
      method: DELETE
      path: /v1/tax_ids/{id}
      path-parameters:
        id: string
      request:
        body:
          properties: {}
        content-type: application/x-www-form-urlencoded
        name: DeleteTaxIdsIdRequest
      response:
        docs: Successful response.
        status-code: 200
        type: DeletedTaxId
      source:
        openapi: ../openapi.yaml
    GetAccountsAccount:
      auth: true
      display-name: Retrieve account
      docs: <p>Retrieves the details of an account.</p>
      examples:
        - path-parameters:
            account: account
          response:
            body:
              business_profile:
                annual_revenue:
                  amount: 1
                  currency: currency
                  fiscal_year_end: fiscal_year_end
                estimated_worker_count: 1
                mcc: mcc
                monthly_estimated_revenue:
                  amount: 1
                  currency: currency
                name: name
                product_description: product_description
                support_address:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                support_email: support_email
                support_phone: support_phone
                support_url: support_url
                url: url
              business_type: company
              capabilities:
                acss_debit_payments: active
                affirm_payments: active
                afterpay_clearpay_payments: active
                alma_payments: active
                amazon_pay_payments: active
                au_becs_debit_payments: active
                bacs_debit_payments: active
                bancontact_payments: active
                bank_transfer_payments: active
                blik_payments: active
                boleto_payments: active
                card_issuing: active
                card_payments: active
                cartes_bancaires_payments: active
                cashapp_payments: active
                eps_payments: active
                fpx_payments: active
                gb_bank_transfer_payments: active
                giropay_payments: active
                grabpay_payments: active
                ideal_payments: active
                india_international_payments: active
                jcb_payments: active
                jp_bank_transfer_payments: active
                kakao_pay_payments: active
                klarna_payments: active
                konbini_payments: active
                kr_card_payments: active
                legacy_payments: active
                link_payments: active
                mobilepay_payments: active
                multibanco_payments: active
                mx_bank_transfer_payments: active
                naver_pay_payments: active
                oxxo_payments: active
                p24_payments: active
                pay_by_bank_payments: active
                payco_payments: active
                paynow_payments: active
                promptpay_payments: active
                revolut_pay_payments: active
                samsung_pay_payments: active
                sepa_bank_transfer_payments: active
                sepa_debit_payments: active
                sofort_payments: active
                swish_payments: active
                tax_reporting_us_1099_k: active
                tax_reporting_us_1099_misc: active
                transfers: active
                treasury: active
                twint_payments: active
                us_bank_account_ach_payments: active
                us_bank_transfer_payments: active
                zip_payments: active
              charges_enabled: true
              company:
                address:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                address_kana:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                  town: town
                address_kanji:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                  town: town
                directors_provided: true
                directorship_declaration:
                  date: 1
                  ip: ip
                  user_agent: user_agent
                executives_provided: true
                export_license_id: export_license_id
                export_purpose_code: export_purpose_code
                name: name
                name_kana: name_kana
                name_kanji: name_kanji
                owners_provided: true
                ownership_declaration:
                  date: 1
                  ip: ip
                  user_agent: user_agent
                ownership_exemption_reason: qualified_entity_exceeds_ownership_threshold
                phone: phone
                structure: free_zone_establishment
                tax_id_provided: true
                tax_id_registrar: tax_id_registrar
                vat_id_provided: true
                verification:
                  document: {}
              controller:
                fees:
                  payer: account
                is_controller: true
                losses:
                  payments: application
                requirement_collection: application
                stripe_dashboard:
                  type: express
                type: account
              country: country
              created: 1
              default_currency: default_currency
              details_submitted: true
              email: email
              external_accounts:
                data:
                  - country: country
                    currency: currency
                    id: id
                    last4: last4
                    object: bank_account
                    status: status
                has_more: true
                object: list
                url: url
              future_requirements:
                alternatives:
                  - alternative_fields_due:
                      - alternative_fields_due
                    original_fields_due:
                      - original_fields_due
                current_deadline: 1
                currently_due:
                  - currently_due
                disabled_reason: action_required.requested_capabilities
                errors:
                  - code: invalid_address_city_state_postal_code
                    reason: reason
                    requirement: requirement
                eventually_due:
                  - eventually_due
                past_due:
                  - past_due
                pending_verification:
                  - pending_verification
              groups:
                payments_pricing: payments_pricing
              id: id
              individual:
                account: account
                address:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                address_kana:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                  town: town
                address_kanji:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                  town: town
                created: 1
                dob:
                  day: 1
                  month: 1
                  year: 1
                email: email
                first_name: first_name
                first_name_kana: first_name_kana
                first_name_kanji: first_name_kanji
                full_name_aliases:
                  - full_name_aliases
                future_requirements:
                  alternatives:
                    - alternative_fields_due:
                        - alternative_fields_due
                      original_fields_due:
                        - original_fields_due
                  currently_due:
                    - currently_due
                  errors:
                    - code: invalid_address_city_state_postal_code
                      reason: reason
                      requirement: requirement
                  eventually_due:
                    - eventually_due
                  past_due:
                    - past_due
                  pending_verification:
                    - pending_verification
                gender: gender
                id: id
                id_number_provided: true
                id_number_secondary_provided: true
                last_name: last_name
                last_name_kana: last_name_kana
                last_name_kanji: last_name_kanji
                maiden_name: maiden_name
                metadata:
                  key: value
                nationality: nationality
                object: person
                phone: phone
                political_exposure: existing
                registered_address:
                  city: city
                  country: country
                  line1: line1
                  line2: line2
                  postal_code: postal_code
                  state: state
                relationship:
                  authorizer: true
                  director: true
                  executive: true
                  legal_guardian: true
                  owner: true
                  percent_ownership: 1.1
                  representative: true
                  title: title
                requirements:
                  alternatives:
                    - alternative_fields_due:
                        - alternative_fields_due
                      original_fields_due:
                        - original_fields_due
                  currently_due:
                    - currently_due
                  errors:
                    - code: invalid_address_city_state_postal_code
                      reason: reason
                      requirement: requirement
                  eventually_due:
                    - eventually_due
                  past_due:
                    - past_due
                  pending_verification:
                    - pending_verification
                ssn_last_4_provided: true
                verification:
                  details: details
                  details_code: details_code
                  status: status
              metadata:
                key: value
              object: account
              payouts_enabled: true
              requirements:
                alternatives:
                  - alternative_fields_due:
                      - alternative_fields_due
                    original_fields_due:
                      - original_fields_due
                current_deadline: 1
                currently_due:
                  - currently_due
                disabled_reason: action_required.requested_capabilities
                errors:
                  - code: invalid_address_city_state_postal_code
                    reason: reason
                    requirement: requirement
                eventually_due:
                  - eventually_due
                past_due:
                  - past_due
                pending_verification:
                  - pending_verification
              settings:
                bacs_debit_payments:
                  display_name: display_name
                  service_user_number: service_user_number
                branding:
                  icon: icon
                  logo: logo
                  primary_color: primary_color
                  secondary_color: secondary_color
                card_payments:
                  decline_on:
                    avs_failure: true
                    cvc_failure: true
                  statement_descriptor_prefix: statement_descriptor_prefix
                  statement_descriptor_prefix_kana: statement_descriptor_prefix_kana
                  statement_descriptor_prefix_kanji: statement_descriptor_prefix_kanji
                dashboard:
                  display_name: display_name
                  timezone: timezone
                invoices:
                  default_account_tax_ids:
                    - default_account_tax_ids
                payments:
                  statement_descriptor: statement_descriptor
                  statement_descriptor_kana: statement_descriptor_kana
                  statement_descriptor_kanji: statement_descriptor_kanji
                  statement_descriptor_prefix_kana: statement_descriptor_prefix_kana
                  statement_descriptor_prefix_kanji: statement_descriptor_prefix_kanji
                payouts:
                  debit_negative_balances: true
                  schedule:
                    delay_days: 1
                    interval: interval
                  statement_descriptor: statement_descriptor
                sepa_debit_payments:
                  creditor_id: creditor_id
              tos_acceptance:
                date: 1
                ip: ip
                service_agreement: service_agreement
                user_agent: user_agent
              type: custom
      method: GET
      path: /v1/accounts/{account}
      path-parameters:
        account: string
      request:
        name: GetAccountsAccountRequest
        query-parameters:
          expand:
            allow-multiple: true
            docs: Specifies which fields in the response should be expanded.
            type: optional<string>
            validation:
              maxLength: 5000
      response:
        docs: Successful response.
        status-code: 200
        type: Account
      source:
        openapi: ../openapi.yaml
    GetChargesChargeRefunds:
      auth: true
      display-name: List all refunds
      docs: >-
        <p>You can see a list of the refunds belonging to a specific charge.
        Note that the 10 most recent refunds are always available by default on
        the charge object. If you need more than those 10, you can use this API
        method and the <code>limit</code> and <code>starting_after</code>
        parameters to page through additional refunds.</p>
      examples:
        - path-parameters:
            charge: charge
          response:
            body:
              data:
                - amount: 1
                  balance_transaction: balance_transaction
                  charge: charge
                  created: 1
                  currency: currency
                  description: description
                  destination_details:
                    type: type
                  failure_balance_transaction: failure_balance_transaction
                  failure_reason: failure_reason
                  id: id
                  instructions_email: instructions_email
                  next_action:
                    type: type
                  object: refund
                  payment_intent: payment_intent
                  reason: duplicate
                  receipt_number: receipt_number
                  source_transfer_reversal: source_transfer_reversal
                  status: status
                  transfer_reversal: transfer_reversal
              has_more: true
              object: list
              url: url
      method: GET
      path: /v1/charges/{charge}/refunds
      path-parameters:
        charge: string
      request:
        name: GetChargesChargeRefundsRequest
        query-parameters:
          ending_before:
            docs: >-
              A cursor for use in pagination. `ending_before` is an object ID
              that defines your place in the list. For instance, if you make a
              list request and receive 100 objects, starting with `obj_bar`,
              your subsequent call can include `ending_before=obj_bar` in order
              to fetch the previous page of the list.
            type: optional<string>
          expand:
            allow-multiple: true
            docs: Specifies which fields in the response should be expanded.
            type: optional<string>
            validation:
              maxLength: 5000
          limit:
            docs: >-
              A limit on the number of objects to be returned. Limit can range
              between 1 and 100, and the default is 10.
            type: optional<integer>
          starting_after:
            docs: >-
              A cursor for use in pagination. `starting_after` is an object ID
              that defines your place in the list. For instance, if you make a
              list request and receive 100 objects, ending with `obj_foo`, your
              subsequent call can include `starting_after=obj_foo` in order to
              fetch the next page of the list.
            type: optional<string>
      response:
        docs: Successful response.
        status-code: 200
        type: GetChargesChargeRefundsResponse
      source:
        openapi: ../openapi.yaml
    GetChargesChargeRefundsRefund:
      auth: true
      docs: <p>Retrieves the details of an existing refund.</p>
      examples:
        - path-parameters:
            charge: charge
            refund: refund
          response:
            body:
              amount: 1
              balance_transaction: balance_transaction
              charge: charge
              created: 1
              currency: currency
              description: description
              destination_details:
                blik:
                  network_decline_code: network_decline_code
                  reference: reference
                  reference_status: reference_status
                br_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                card:
                  reference: reference
                  reference_status: reference_status
                  reference_type: reference_type
                  type: pending
                eu_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                gb_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                jp_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                multibanco:
                  reference: reference
                  reference_status: reference_status
                mx_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                p24:
                  reference: reference
                  reference_status: reference_status
                swish:
                  network_decline_code: network_decline_code
                  reference: reference
                  reference_status: reference_status
                th_bank_transfer:
                  reference: reference
                  reference_status: reference_status
                type: type
                us_bank_transfer:
                  reference: reference
                  reference_status: reference_status
              failure_balance_transaction: failure_balance_transaction
              failure_reason: failure_reason
              id: id
              instructions_email: instructions_email
              metadata:
                key: value
              next_action:
                display_details:
                  email_sent:
                    email_sent_at: 1
                    email_sent_to: email_sent_to
                  expires_at: 1
                type: type
              object: refund
              payment_intent: payment_intent
              reason: duplicate
              receipt_number: receipt_number
              source_transfer_reversal: source_transfer_reversal
              status: status
              transfer_reversal: transfer_reversal
      method: GET
      path: /v1/charges/{charge}/refunds/{refund}
      path-parameters:
        charge: string
        refund: string
      request:
        name: GetChargesChargeRefundsRefundRequest
        query-parameters:
          expand:
            allow-multiple: true
            docs: Specifies which fields in the response should be expanded.
            type: optional<string>
            validation:
              maxLength: 5000
      response:
        docs: Successful response.
        status-code: 200
        type: Refund
      source:
        openapi: ../openapi.yaml
    GetTaxIds:
      auth: true
      display-name: List all tax IDs
      docs: <p>Returns a list of tax IDs.</p>
      examples:
        - response:
            body:
              data:
                - country: country
                  created: 1
                  customer: customer
                  id: id
                  livemode: true
                  object: tax_id
                  owner:
                    type: account
                  type: ad_nrt
                  value: value
                  verification:
                    status: pending
              has_more: true
              object: list
              url: url
      method: GET
      path: /v1/tax_ids
      request:
        name: GetTaxIdsRequest
        query-parameters:
          ending_before:
            docs: >-
              A cursor for use in pagination. `ending_before` is an object ID
              that defines your place in the list. For instance, if you make a
              list request and receive 100 objects, starting with `obj_bar`,
              your subsequent call can include `ending_before=obj_bar` in order
              to fetch the previous page of the list.
            type: optional<string>
            validation:
              maxLength: 5000
          expand:
            allow-multiple: true
            docs: Specifies which fields in the response should be expanded.
            type: optional<string>
            validation:
              maxLength: 5000
          limit:
            docs: >-
              A limit on the number of objects to be returned. Limit can range
              between 1 and 100, and the default is 10.
            type: optional<integer>
          starting_after:
            docs: >-
              A cursor for use in pagination. `starting_after` is an object ID
              that defines your place in the list. For instance, if you make a
              list request and receive 100 objects, ending with `obj_foo`, your
              subsequent call can include `starting_after=obj_foo` in order to
              fetch the next page of the list.
            type: optional<string>
            validation:
              maxLength: 5000
      response:
        docs: Successful response.
        status-code: 200
        type: GetTaxIdsResponse
      source:
        openapi: ../openapi.yaml
    GetTaxIdsId:
      auth: true
      display-name: Retrieve a tax ID
      docs: <p>Retrieves an account or customer <code>tax_id</code> object.</p>
      examples:
        - path-parameters:
            id: id
          response:
            body:
              country: country
              created: 1
              customer: customer
              id: id
              livemode: true
              object: tax_id
              owner:
                account: account
                application: application
                customer: customer
                type: account
              type: ad_nrt
              value: value
              verification:
                status: pending
                verified_address: verified_address
                verified_name: verified_name
      method: GET
      path: /v1/tax_ids/{id}
      path-parameters:
        id: string
      request:
        name: GetTaxIdsIdRequest
        query-parameters:
          expand:
            allow-multiple: true
            docs: Specifies which fields in the response should be expanded.
            type: optional<string>
            validation:
              maxLength: 5000
      response:
        docs: Successful response.
        status-code: 200
        type: TaxId
      source:
        openapi: ../openapi.yaml
    PostCustomersCustomerSourcesId:
      auth: true
      docs: <p>Update a specified source for a given customer.</p>
      examples:
        - path-parameters:
            customer: customer
            id: id
          request: {}
          response:
            body:
              account: account
              address_city: address_city
              address_country: address_country
              address_line1: address_line1
              address_line1_check: address_line1_check
              address_line2: address_line2
              address_state: address_state
              address_zip: address_zip
              address_zip_check: address_zip_check
              allow_redisplay: always
              available_payout_methods:
                - instant
              brand: brand
              country: country
              currency: currency
              customer: customer
              cvc_check: cvc_check
              default_for_currency: true
              description: description
              dynamic_last4: dynamic_last4
              exp_month: 1
              exp_year: 1
              fingerprint: fingerprint
              funding: funding
              id: id
              iin: iin
              issuer: issuer
              last4: last4
              metadata:
                key: value
              name: name
              networks:
                preferred: preferred
              object: card
              regulated_status: regulated
              status: status
              tokenization_method: tokenization_method
      method: POST
      path: /v1/customers/{customer}/sources/{id}
      path-parameters:
        customer: string
        id: string
      request:
        body:
          properties:
            account_holder_name:
              docs: The name of the person or business that owns the bank account.
              type: optional<string>
              validation:
                maxLength: 5000
            account_holder_type:
              docs: >-
                The type of entity that holds the account. This can be either
                `individual` or `company`.
              type: optional<PostCustomersCustomerSourcesIdRequestAccountHolderType>
            address_city:
              docs: City/District/Suburb/Town/Village.
              type: optional<string>
              validation:
                maxLength: 5000
            address_country:
              docs: Billing address country, if provided when creating card.
              type: optional<string>
              validation:
                maxLength: 5000
            address_line1:
              docs: Address line 1 (Street address/PO Box/Company name).
              type: optional<string>
              validation:
                maxLength: 5000
            address_line2:
              docs: Address line 2 (Apartment/Suite/Unit/Building).
              type: optional<string>
              validation:
                maxLength: 5000
            address_state:
              docs: State/County/Province/Region.
              type: optional<string>
              validation:
                maxLength: 5000
            address_zip:
              docs: ZIP or postal code.
              type: optional<string>
              validation:
                maxLength: 5000
            exp_month:
              docs: Two digit number representing the card’s expiration month.
              type: optional<string>
              validation:
                maxLength: 5000
            exp_year:
              docs: Four digit number representing the card’s expiration year.
              type: optional<string>
              validation:
                maxLength: 5000
            expand:
              docs: Specifies which fields in the response should be expanded.
              type: optional<list<string>>
            metadata:
              docs: >-
                Set of [key-value pairs](https://stripe.com/docs/api/metadata)
                that you can attach to an object. This can be useful for storing
                additional information about the object in a structured format.
                Individual keys can be unset by posting an empty value to them.
                All keys can be unset by posting an empty value to `metadata`.
              type: optional<PostCustomersCustomerSourcesIdRequestMetadata>
            name:
              docs: Cardholder name.
              type: optional<string>
              validation:
                maxLength: 5000
            owner: optional<PostCustomersCustomerSourcesIdRequestOwner>
        content-type: application/x-www-form-urlencoded
        name: PostCustomersCustomerSourcesIdRequest
      response:
        docs: Successful response.
        status-code: 200
        type: PostCustomersCustomerSourcesIdResponse
      source:
        openapi: ../openapi.yaml
    PostTaxIds:
      auth: true
      display-name: Create a tax ID
      docs: <p>Creates a new account or customer <code>tax_id</code> object.</p>
      examples:
        - request:
            type: ad_nrt
            value: value
          response:
            body:
              country: country
              created: 1
              customer: customer
              id: id
              livemode: true
              object: tax_id
              owner:
                account: account
                application: application
                customer: customer
                type: account
              type: ad_nrt
              value: value
              verification:
                status: pending
                verified_address: verified_address
                verified_name: verified_name
      method: POST
      path: /v1/tax_ids
      request:
        body:
          properties:
            expand:
              docs: Specifies which fields in the response should be expanded.
              type: optional<list<string>>
            owner:
              docs: >-
                The account or customer the tax ID belongs to. Defaults to
                `owner[type]=self`.
              type: optional<PostTaxIdsRequestOwner>
            type:
              docs: >-
                Type of the tax ID, one of `ad_nrt`, `ae_trn`, `al_tin`,
                `am_tin`, `ao_tin`, `ar_cuit`, `au_abn`, `au_arn`, `ba_tin`,
                `bb_tin`, `bg_uic`, `bh_vat`, `bo_tin`, `br_cnpj`, `br_cpf`,
                `bs_tin`, `by_tin`, `ca_bn`, `ca_gst_hst`, `ca_pst_bc`,
                `ca_pst_mb`, `ca_pst_sk`, `ca_qst`, `cd_nif`, `ch_uid`,
                `ch_vat`, `cl_tin`, `cn_tin`, `co_nit`, `cr_tin`, `de_stn`,
                `do_rcn`, `ec_ruc`, `eg_tin`, `es_cif`, `eu_oss_vat`, `eu_vat`,
                `gb_vat`, `ge_vat`, `gn_nif`, `hk_br`, `hr_oib`, `hu_tin`,
                `id_npwp`, `il_vat`, `in_gst`, `is_vat`, `jp_cn`, `jp_rn`,
                `jp_trn`, `ke_pin`, `kh_tin`, `kr_brn`, `kz_bin`, `li_uid`,
                `li_vat`, `ma_vat`, `md_vat`, `me_pib`, `mk_vat`, `mr_nif`,
                `mx_rfc`, `my_frp`, `my_itn`, `my_sst`, `ng_tin`, `no_vat`,
                `no_voec`, `np_pan`, `nz_gst`, `om_vat`, `pe_ruc`, `ph_tin`,
                `ro_tin`, `rs_pib`, `ru_inn`, `ru_kpp`, `sa_vat`, `sg_gst`,
                `sg_uen`, `si_tin`, `sn_ninea`, `sr_fin`, `sv_nit`, `th_vat`,
                `tj_tin`, `tr_tin`, `tw_vat`, `tz_vat`, `ua_vat`, `ug_tin`,
                `us_ein`, `uy_ruc`, `uz_tin`, `uz_vat`, `ve_rif`, `vn_tin`,
                `za_vat`, `zm_tin`, or `zw_tin`
              type: PostTaxIdsRequestType
            value:
              docs: Value of the tax ID.
              type: string
        content-type: application/x-www-form-urlencoded
        name: PostTaxIdsRequest
      response:
        docs: Successful response.
        status-code: 200
        type: TaxId
      source:
        openapi: ../openapi.yaml
  source:
    openapi: ../openapi.yaml
